[
  {
    "id": 2,
    "name": "قلب",
    "code": "Hello world in قلب\n\n‫(قول \"مرحبا يا عالم!\")"
  },
  {
    "id": 3,
    "name": "μλ",
    "code": "// Hello world in μλ\n\n>  EEEEEEEΔΔΘς       v\nv  ςΘΔEEEEEEEEEE     <\n>  EEEEEEEEEEEδδΘς   v\nv  ΘδδEEEEEEEEEEEς   <\n>  ς EEEEEEEEEEEΔΘ   v\nv  ΘΔΔΔΔEEEEς        <\n>  ςEEEΔΔΘ           v\nv  ΘδEEEEEEEEEEEEς   <\n>  ςEEEEEEEEEEEΔΘ    v\nv  ΘΔΔΔΔEEEEEEEEEEEς <\n>  ςEEEEEEEEEEEδδΘ   v\nv  ΘEEEEEEEEEEς      <\n>  ςEEEΔΔΔΘ          λ"
  },
  {
    "id": 4,
    "name": "1C-Enterprise",
    "code": "\n// Hello World in 1C:Enterprise built-in script language\r\n\r\nMessage(\"Hello, World!\");\r\n"
  },
  {
    "id": 5,
    "name": "4D",
    "code": "// Hello world in 4D, formerly known as 4th Dimension\n\nALERT(\"Hello World!\")"
  },
  {
    "id": 6,
    "name": "4Test",
    "code": "\n// Hello World in 4Test\r\n\r\ntestcase printHelloWorld()\r\n    print(\"Hello World!\")\r\n"
  },
  {
    "id": 7,
    "name": "8th",
    "code": "\\ Hello world in 8th\n\n\"Hello, world!\\n\" ."
  },
  {
    "id": 8,
    "name": "ABAP4",
    "code": "\nREPORT ZHB00001.\r\n*Hello world in ABAP/4 *\r\nWRITE: 'Hello world'.\r\n"
  },
  {
    "id": 9,
    "name": "ABC",
    "code": "\\ Hello world in ABC\n\nWRITE \"Hello, World!\" /"
  },
  {
    "id": 10,
    "name": "ACPI Source Language",
    "code": "// Hello world in ACPI Source Language\n\nScope(\\) {\n\tMethod(_WAK) {\n\t\tStore (\"Hello World\", Debug)\n\t\tReturn(Package(2){0x00000000,0})\n\t}\t\n}"
  },
  {
    "id": 11,
    "name": "ACS",
    "code": "// Hello world in Action Code Script (scripting language for the Hexen/Doom game engine)\n\n#include \"zcommon.acs\"\n\nscript 1 ENTER\n{\n    print(s:\"Hello World!\");\n} "
  },
  {
    "id": 12,
    "name": "Action!",
    "code": "\n; Hello world in Action! programming language for the Atari 8-Bit computers\r\n\r\nPROC Main()\r\n PrintE(\"Hello World!\")\r\nRETURN\r\n"
  },
  {
    "id": 13,
    "name": "Actionscript (Flash 5)",
    "code": "\n// Hello World in Actionscript (up to Flash 5, IDE only)\r\n\r\ntrace (\"Hello World\");\r\n"
  },
  {
    "id": 14,
    "name": "ActionScript (Flash 8)",
    "code": "\n// Hello World in ActionScript 2.0 (Flash 8)\r\nclass HelloWorld\r\n{\r\n    private var helloWorldField:TextField;\r\n \r\n    public function HelloWorld( mc:MovieClip )\r\n    {\r\n        mc.helloWorldField = mc.createTextField(\"helloWorldField\", mc.getNextHighestDepth(), 0, 0, 100, 100);\r\n        mc.helloWorldField.autoSize = \"left\";\r\n\tmc.helloWorldField.html = true;\r\n        mc.helloWorldField.htmlText = '<font size=\"20\" color=\"#0000FF\">Hello World!</font>';\r\n    }\r\n}\r\n\r\n// on a frame\r\nimport HelloWorld;\r\nvar hw:HelloWorld = new HelloWorld( this );\r\n"
  },
  {
    "id": 15,
    "name": "Actionscript (Flash MX)",
    "code": "\n// Hello World in Actionscript (Flash MX onwards) \r\n\r\n_root.createTextField(\"mytext\",1,100,100,300,100);\r\nmytext.multiline = true;\r\nmytext.wordWrap = true;\r\nmytext.border = false;\r\n\r\nmyformat = new TextFormat();\r\nmyformat.color = 0xff0000;\r\nmyformat.bullet = false;\r\nmyformat.underline = true;\r\n\r\nmytext.text = \"Hello World!\";\r\nmytext.setTextFormat(myformat);\r\n"
  },
  {
    "id": 16,
    "name": "ActionScript 3.0",
    "code": "// Hello World in ActionScript 3. Place code in the first frame Actions.\r\nvar t:TextField=new TextField();\r\nt.text=\"Hello World!\";\r\naddChild(t);"
  },
  {
    "id": 17,
    "name": "Ada",
    "code": "\n-- Hello World in Ada\r\n\r\nwith Text_IO;\r\nprocedure Hello_World is\r\n\r\nbegin\r\n  Text_IO.Put_Line(\"Hello World!\");\r\nend Hello_World;\r\n"
  },
  {
    "id": 18,
    "name": "ADVPL",
    "code": "// Hello World in ADVPL\r\n\r\nUser Function Hello()\r\nLocal cMsg := \"Hello, world!\"\r\nconout(cMsg)\r\nMsgInfo(cMsg)\r\nReturn\r\n"
  },
  {
    "id": 19,
    "name": "Agda",
    "code": "-- Hello world in Agda\n\nmodule hello where\n  open import IO\n  main = run (putStrLn \"Hello, World!\")"
  },
  {
    "id": 20,
    "name": "aheui",
    "code": "밤밣따빠밣밟따뿌\n빠맣파빨받밤뚜뭏\n돋밬탕빠맣붏두붇\n볻뫃박발뚷투뭏붖\n뫃도뫃희멓뭏뭏붘\n뫃봌토범더벌뿌뚜\n뽑뽀멓멓더벓뻐뚠\n뽀덩벐멓뻐덕더벅"
  },
  {
    "id": 21,
    "name": "Algol 60",
    "code": "\r\n'BEGIN'\r\n   'COMMENT' Hello World in Algol 60;\r\n    OUTPUT(4,'(''('Hello World!')',/')')\r\n'END'\r\n"
  },
  {
    "id": 22,
    "name": "Algol 68",
    "code": "\r\n( # Hello World in Algol 68 # print((\"Hello World!\",newline)))\r\n"
  },
  {
    "id": 23,
    "name": "Alpha-Five-Xbasic",
    "code": "\n' Hello World in Alpha Five Xbasic\r\n\r\nui_msg_box(\"The 'Hello World' Collection\", \"Hello World\", UI_ATTENTION_SYMBOL)\r\n"
  },
  {
    "id": 24,
    "name": "Amazon States Language",
    "code": "{\n    \"Comment\": \"Hello world in Amazon States Language\",\n    \"StartAt\": \"Hello World\",\n    \"States\": {\n    \"Hello World\": { \n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:123456789012:function:HelloWorld\",\n      \"End\": true\n    }\n  }\n}"
  },
  {
    "id": 25,
    "name": "amharic",
    "code": "\nHello World in amharic (in JavaScript)\r\n\r\n \r\n<%@ language=\"javascript\" %>\r\n<html><body>\r\n<%\r\nResponse.Write('Hello World!');\r\n%>\r\n</body></html>\r\n"
  },
  {
    "id": 26,
    "name": "AmigaE",
    "code": "\r\n-> Hello World in Amiga-E\r\n\r\nPROC main() IS WriteF('Hello World\\n')\r\n"
  },
  {
    "id": 27,
    "name": "AMOS",
    "code": "Rem Hello world in AMOS\r\n\r\nPrint \"Hello world!\""
  },
  {
    "id": 28,
    "name": "Andl",
    "code": "// Hello world in Andl\n\n'Hello world!'\n"
  },
  {
    "id": 29,
    "name": "AngelScript",
    "code": "// Hello world in AngelScript\n\nvoid main() { print(\"Hello world\\n\"); }"
  },
  {
    "id": 30,
    "name": "Anguish",
    "code": "‌﻿⁣‌⁣‍﻿⁣⁣﻿﻿﻿⁡﻿⁢﻿​⁠﻿‌‍⁣⁣‍⁡⁡⁡⁡⁡⁡⁡⁡‌⁠⁡⁡⁡⁡‌⁠⁡⁡⁠⁡⁡⁡⁠⁡⁡⁡⁠⁡​​​​⁢‍⁠⁡⁠⁡⁠⁢⁠⁠⁡‌​‍​⁢‍⁠⁠⁣⁠⁢⁢⁢⁣⁡⁡⁡⁡⁡⁡⁡⁣⁣⁡⁡⁡⁣⁠⁠⁣​⁢⁣​⁣⁡⁡⁡⁣⁢⁢⁢⁢⁢⁢⁣⁢⁢⁢⁢⁢⁢⁢⁢⁣⁠⁠⁡⁣⁠⁡⁡⁣"
  },
  {
    "id": 31,
    "name": "Ansible",
    "code": "---\n- name: Hello world as an Ansible Playbook\n  hosts: ansibleclient01.local\n  tasks:\n    - name: Create a file called '/tmp/testfile.txt' with the content 'hello world'.\n      copy:\n        content: hello worldn\n        dest: /tmp/testfile.txt"
  },
  {
    "id": 32,
    "name": "Ante",
    "code": "Hello world in Ante. This language has no comments.\n\n9♦8♥J♦A♦2♣3♥7♠J♦A♦7♦J♦J♦A♦3♦J♦5♥6♦4♥J♥A♥6♠6♠J♥A♦8♦J♦A♦8♠J♦A♦3♦J♦A♦6♠J♦A♦8♠J♦A♥3♦2♠J♥A♥2♣6♠J♥"
  },
  {
    "id": 33,
    "name": "APC",
    "code": "\n// Hello World in the APC language for probes\r\n\r\nprobe program\r\n{\r\n    on_entry log (\"Hello, world!\\n\");\r\n}\r\n"
  },
  {
    "id": 34,
    "name": "APL",
    "code": "⍝ Hello World in APL\n\n⎕←\\'Hello World\\'"
  },
  {
    "id": 35,
    "name": "AppleScript",
    "code": "\n-- \"Hello World\" in AppleScript:\r\n\r\ndisplay dialog \"Hello World\"\r\n"
  },
  {
    "id": 36,
    "name": "Arduino",
    "code": "// Hello world in the Arduino programming language\n\nvoid setup()\n{\n  Serial.begin(9600);\n  Serial.println(\"Hello, world!\");\n}\n\nvoid loop()\n{\n  \n}"
  },
  {
    "id": 37,
    "name": "Arena",
    "code": "// Hello world in Arena\r\n\r\nprint(\"Hello World!\");"
  },
  {
    "id": 38,
    "name": "Arendelle",
    "code": "// Hello world in Arendelle\n\n\"Hello, World!\""
  },
  {
    "id": 39,
    "name": "Argh!",
    "code": "\nHello World in Argh!. No comment character exists.\r\n\r\nj       world\r\nlppppppPPPPPPsrfj\r\n hello,      *  j\r\n              qPh\r\n"
  },
  {
    "id": 40,
    "name": "ArnoldC",
    "code": "# Hello world in ArnoldC\n\nIT'S SHOWTIME\nTALK TO THE HAND \"Hello World\"\nYOU HAVE BEEN TERMINATED"
  },
  {
    "id": 41,
    "name": "AsciiDots",
    "code": "`` Hello world in AsciiDots\n\n.-$\"Hello, World!\""
  },
  {
    "id": 42,
    "name": "ASP (C♯)",
    "code": "<!-- Hello World for ASP.NET using C# -->\r\n<% @ Page Language=\"C#\" %>\r\n<% =\"Hello World!\" %>"
  },
  {
    "id": 43,
    "name": "ASP (JavaScript)",
    "code": "\nHello World for Microsoft ASP (in JavaScript)\r\n\r\n<%@ language=\"javascript\" %>\r\n<html><body>\r\n<%\r\nResponse.Write('Hello World!');\r\n%>\r\n</body></html>\r\n"
  },
  {
    "id": 44,
    "name": "ASP (VBE)",
    "code": "\n<!-- Hello World in ASP-VBE (Visual Basic Script Encided) -->\r\n<html>\r\n<script language=\"VBScript.Encode\">#@~^HQAAAA==@#@&HdTAK6PrCsVKP    WMV[Zr@#@&HwcAAA==^#~@</script>\r\n</html>\r\n"
  },
  {
    "id": 45,
    "name": "ASP (VBS)",
    "code": "\nHello World for Microsoft ASP (in VBScript)\r\n\r\n<%@ language=\"vbscript\" %>\r\n<html><body>\r\n<%\r\nResponse.write \"Hello World!\"\r\n%>\r\n</body></html>\r\n"
  },
  {
    "id": 46,
    "name": "ASP.NET",
    "code": "<!-- Hello World in ASP.NET -->\r\n<%= \"Hello World!\" %>"
  },
  {
    "id": 47,
    "name": "Assembler (6502, Apple II)",
    "code": "\n**********************************\r\n*                                *\r\n*      HELLO WORLD FOR 6502      *\r\n*    APPLE ][, MERLIN ASSEMBLER  *\r\n*                                *\r\n**********************************\r\n\r\nSTROUT \tEQU\t$DB3A ;OUTPUTS AY-POINTED NULL TERMINATED STRING\r\n\tLDY\t#>HELLO\r\n\tLDA\t#<HELLO\r\n\tJMP\tSTROUT\r\n\r\nHELLO\tASC\t\"HELLO WORLD!\",00\r\n"
  },
  {
    "id": 48,
    "name": "Assembler (6502, C64)",
    "code": "\n; Hello World for 6502 Assembler (C64)\n\nldy #0\nbeq in\nloop:\njsr $ffd2\niny\nin:\nlda hello,y\nbne loop\nrts\nhello: .tx \"Hello World!\"\n       .by 13,10,0\n"
  },
  {
    "id": 49,
    "name": "Assembler (68000, Amiga)",
    "code": "\n; Hello World in 68000 Assembler for dos.library (Amiga)\n\n        move.l  #DOS\n        move.l  4.w,a6\n        jsr     -$0198(a6)      ;OldOpenLibrary\n        move.l  d0,a6\n        beq.s   .Out\n        move.l  #HelloWorld,d1\n\nA)      moveq   #13,d2\n        jsr     -$03AE(a6)      ;WriteChars\n\nB)      jsr     -$03B4          ;PutStr\n\n        move.l  a6,a1\n        move.l  4.w,a6\n        jsr     -$019E(a6)      ;CloseLibrary\n.Out    rts\n\nDOS          dc.b    'dos.library',0\nHelloWorld   dc.b    'Hello World!',$A,0\n"
  },
  {
    "id": 50,
    "name": "Assembler (68000, Atari ST)",
    "code": "\n; Hello World in 68000 Assembler (Atari ST)\n\n     move.l #helloworld,-(A7)\n     move   #9,-(A7)\n     trap   #1\n     addq.l #6,A7\n     move   #0,-(A7)\n     trap   #1\nhelloworld:\n     dc.b \"Hello World!\",$0d,$0a,0\n"
  },
  {
    "id": 51,
    "name": "Assembler (68008)",
    "code": "\n; Hello World in 68008 Assembler (Sinclar QL)\n\n     move.l #0,a0\n     lea.l  mess,a1\n     move.w $d0,a2\n     jsr    (a2)\n     rts\nmess dc.w   12\n     dc.b   'Hello World!',10\n     end\n"
  },
  {
    "id": 52,
    "name": "Assembler (8051)",
    "code": "-- Hello World in Assembler for the Intel 8051 (MSC51)\r\n\r\n Org 0\r\n \r\n   mov dptr,#msg\r\n   mov R0,#30h  \r\nloop:\r\n   clr a\r\n   movc a,@a+dptr\r\n   jz end\r\n   mov @R0,a\r\n   inc R0\r\n   inc dptr\r\n   sjmp  loop\r\n \r\nend:\r\n    jmp $\r\n \r\nmsg:\r\n    db 'Hello World\",0"
  },
  {
    "id": 53,
    "name": "Assembler (ARM, Android)",
    "code": "/* Hello world in ARM assembly (Android devices) */\n\n.data\n\nmsg:\n    .ascii      \"Hello, World!\\n\"\nlen = . - msg\n\n.text\n\n.globl _start\n_start:\n    mov     %r0, $1\n    ldr     %r1, =msg\n    ldr     %r2, =len\n    mov     %r7, $4\n    swi     $0\n    mov     %r0, $0\n    mov     %r7, $1\n    swi     $0"
  },
  {
    "id": 54,
    "name": "Assembler (ARM, RISC OS)",
    "code": "\n; Hello World in ARM code assembler, with RISC OS software interrupt\r\n\r\nSWI \"OS_WriteS\"\r\nEQUS \"Hello World!\"\r\nEQUB 0\r\nALIGN\r\nMOV PC,R14\r\n"
  },
  {
    "id": 55,
    "name": "Assembler (DG-Nova)",
    "code": "\n                        .TITL HELLO\r\n02                      ; \"HELLO, WORLD\" FOR NOVA RUNNING RDOS\r\n03                      ; USES PCHAR SYSTEM CALL\r\n04                      .NREL\r\n05                      .ENT START\r\n06\r\n07              START:\r\n08 00000'022424 DOCHAR: LDA 0,@PMSG     ; LOAD AC0 WITH NEXT CHARACTER,\r\n09 00001'101015         MOV# 0,0,SNR    ; TEST AC0;\r\n10 00002'000412          JMP DONE ; SKIPPED IF NONZERO\r\n11 00003'006017         .SYSTM\r\n12 00004'010000         .PCHAR          ; PRINT FIRST\r\n13 00005'000413          JMP ER ; SKIPPED IF OK\r\n14 00006'101300         MOVS 0,0        ; SWAP BYTES\r\n15 00007'006017         .SYSTM\r\n16 00010'010000         .PCHAR          ; PRINT SECOND\r\n17 00011'000407          JMP ER ; SKIPPED IF OK\r\n18 00012'010412         ISZ PMSG        ; POINT TO NEXT WORD\r\n19 00013'000765         JMP DOCHAR      ; GO AROUND AGAIN\r\n20\r\n21 00014'006017 DONE:   .SYSTM          ; NORMAL EXIT\r\n22 00015'004400         .RTN\r\n23 00016'000402          JMP ER\r\n24 00017'063077         HALT\r\n25 00020'006017 ER:     .SYSTM          ; ERROR EXIT\r\n26 00021'006400         .ERTN\r\n27 00022'063077          HALT\r\n28 00023'063077         HALT\r\n29\r\n30 00024'000025'PMSG:   .+1     ; ADDRESS OF FIRST WORD OF TEXT\r\n31                      ; NOTE BYTES ARE PACKED RIGHT-TO-LEFT BY DEFAULT\r\n32 00025'042510         .TXT /HELLO, WORLD!<15><12>/ ; THAT'S CR LF\r\n33       046114\r\n34       026117\r\n35       053440\r\n36       051117\r\n37       042114\r\n38       006441\r\n39       000012\r\n40 00035'000000         0 ; FLAG WORD TO END STRING\r\n41\r\n42                      .END START\r\n"
  },
  {
    "id": 56,
    "name": "Assembler (HLA)",
    "code": "\n; Hello World for Intel compatible High Level Assembler\r\n\r\nprogram HELLO;\r\n       #include( \"stdlib.hhf\" );\r\nbegin HELLO;\r\n       stdout.put(\"Hello World\",nl);\r\nend HELLO;\r\n"
  },
  {
    "id": 57,
    "name": "Assembler (HP-85)",
    "code": "010 ! Hello world in Assembler for the HP-85\n020         NAM HELLO\n030         DEF RUNTIM\n040         DEF TOKENS\n050         DEF PARSE\n060         DEF ERMSG\n070         DEF INIT\n100 PARSE   BYT 0,0\n110 RUNTIM  BYT 0,0,377,377\n120 TOKENS  BYT 377\n130 ERMSG   BYT 377\n140 !\n150 INIT    LDM R26,=MSG\n160         ADMD R26,=BINTAB\n170         LDM R36,=12D,0\n180         JSB =OUTSTR\n190         RTN\n200 MSG     ASC \"Hello World!\"\n210 BINTAB  DAD 101233\n220 OUTSTR  DAD 35052\n300         FIN"
  },
  {
    "id": 58,
    "name": "Assembler (IBM 370)",
    "code": "\nITLE 'Hello World for IBM Assembler/370 (VM/CMS)'\r\nHELLO    START\r\nBALR  12,0\r\nUSING *,12\r\n*\r\nWRTERM 'Hello World!'\r\n*\r\nSR    15,15\r\nBR    14\r\n*\r\nEND   HELLO\r\n"
  },
  {
    "id": 59,
    "name": "Assembler (Intel)",
    "code": "\n; Hello World for Intel Assembler (MSDOS)\n\nmov ax,cs\nmov ds,ax\nmov ah,9\nmov dx, offset Hello\nint 21h\nxor ax,ax\nint 21h\n\nHello:\n  db \"Hello World!\",13,10,\"$\"\n"
  },
  {
    "id": 60,
    "name": "Assembler (Itanium)",
    "code": "\n/* Hello world for IA64 (Itanium) Assembly */\r\n\r\n.HW:\r\n        stringz \"Hello World\"\r\n        .text\r\n        .align 16\r\n        .global main#\r\n        .proc main#\r\nmain:\r\n        .prologue 14, 32\r\n        .save ar.pfs, r33\r\n        alloc r33 = ar.pfs, 0, 4, 1, 0\r\n        .vframe r34\r\n        mov r34 = r12\r\n        adds r12 = -16, r12\r\n        mov r35 = r1\r\n        .save rp, r32\r\n        mov r32 = b0\r\n        .body\r\n        addl r14 = @ltoffx(.HW), r1\r\n        ;;\r\n        ld8.mov r14 = [r14], .HW\r\n        ;;\r\n        st8 [r34] = r14\r\n        ld8 r36 = [r34]\r\n        br.call.sptk.many b0 = puts#\r\n        mov r1 = r35\r\n        ;;\r\n        mov ar.pfs = r33\r\n        mov b0 = r32\r\n        .restore sp\r\n        mov r12 = r34\r\n        br.ret.sptk.many b0\r\n"
  },
  {
    "id": 61,
    "name": "Assembler (MIPS)",
    "code": "\n## Hello Word in Assemlber for the MIPS Architecture\r\n\r\n.globl main\r\n\r\nmain:   jal hwbody              #call Hello Word Procedure\r\n       trap 10                 #exit\r\n\r\nhwbody: addi $30, $30,-4        #we need to preserve\r\n       sw $4, 0($30)           #existing values in register 4\r\n\r\n       addi $4,$0,72           # H\r\n       trap 101\r\n       addi $4,$0,101          # e\r\n       trap 101\r\n       addi $4,$0,108          # l\r\n       trap 101\r\n       trap 101                # l\r\n       addi $4,$0,111          # o\r\n       trap 101\r\n       addi $4,$0,32           # <space>\r\n       trap 101\r\n       addi $4,$0,87           # W\r\n       trap 101\r\n       addi $4,$0,111          # o\r\n       trap 101\r\n       addi $4,$0,114          # r\r\n       trap 101\r\n       addi $4,$0,108          # l\r\n       trap 101\r\n       addi $4,$0,100          # d\r\n       trap 101\r\n       addi $4,$0,33           # !\r\n       trap 101\r\n       addi $4,$0,10           # \\n\r\n       trap 101\r\n\r\ndone:   lw $4, 0($30)           #restore values\r\n       addi $30, $30, 4        #in register 4\r\n       jr $31                  #return to the main\r\n"
  },
  {
    "id": 62,
    "name": "Assembler (MMIX)",
    "code": "\n*\tHello World in Assembler \r\n*\tfor the MMIX Computer \r\n\r\n       LOC   #100\r\nMain   GETA  $255,String\r\n       TRAP  0,Fputs,StdOut\r\n       TRAP  0,Halt,0\r\nString BYTE  \"Hello, world!\",#a,0\r\n"
  },
  {
    "id": 63,
    "name": "Assembler (PA-RISC)",
    "code": "\n// Hello World written in PA-RISC 2.0 assembly code\r\n\r\n    .LEVEL  2.0N\r\n\r\n    .SPACE  $TEXT$,SORT=8\r\n    .SUBSPA $CODE$,QUAD=0,ALIGN=4,ACCESS=0x2c,CODE_ONLY,SORT=24\r\nmain\r\n    .PROC\r\n    .CALLINFO CALLER,FRAME=16,SAVE_RP,ORDERING_AWARE\r\n        .ENTRY\r\n        STW     %r2,-20(%r30)   ;offset 0x0\r\n        LDO     64(%r30),%r30   ;offset 0x4\r\n        ADDIL   LR'M$3-$global$,%r27,%r1        ;offset 0x8\r\n        LDO     RR'M$3-$global$(%r1),%r1        ;offset 0xc\r\n        STW     %r1,-56(%r30)   ;offset 0x10\r\n        ADDIL   LR'M$3-$global$+16,%r27,%r1     ;offset 0x14\r\n        LDO     RR'M$3-$global$+16(%r1),%r26    ;offset 0x18\r\n        LDW     -56(%r30),%r25  ;offset 0x1c\r\n        LDIL    L'printf,%r31   ;offset 0x20\r\n        .CALL   ARGW0=GR,ARGW1=GR,RTNVAL=GR     ;in=25,26;out=28;\r\n        BE,L    R'printf(%sr4,%r31),%r31        ;offset 0x24\r\n        COPY    %r31,%r2        ;offset 0x28\r\n        LDW     -84(%r30),%r2   ;offset 0x2c\r\n        BVE     (%r2)   ;offset 0x30\r\n        .EXIT\r\n        LDO     -64(%r30),%r30  ;offset 0x34\r\n    .PROCEND    ;\r\n\r\n\r\n    .SPACE  $TEXT$\r\n    .SUBSPA $CODE$\r\n    .SPACE  $PRIVATE$,SORT=16\r\n    .SUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=16\r\nM$3\r\n    .ALIGN  8\r\n    .STRINGZ    \"Hello World\"\r\n    .BLOCK  4\r\n    .STRINGZ    \"%s\\n\"\r\n    .IMPORT $global$,DATA\r\n    .SPACE  $TEXT$\r\n    .SUBSPA $CODE$\r\n    .EXPORT main,ENTRY,PRIV_LEV=3,LONG_RETURN\r\n    .IMPORT printf,CODE\r\n    .END\r\n"
  },
  {
    "id": 64,
    "name": "Assembler (PDP-11)",
    "code": "\n;       Hello World in Assembler for the DEC PDP-11 with the\n;\tRSX-11M-PLUS operating system\n;\n        .title Hello\n        .ident /V0001A/\n        .mcall qiow$s, exit$s\n        .psect $code,ro,i\nstart:  qiow$s #5,#5,,,,<#str, #len, #40>\n        exit$s\n        .psect $data,ro,d\nstr:    .ascii / Hello World!/\n        len=.-str\n        .end start\n"
  },
  {
    "id": 65,
    "name": "Assembler (PDP-8)",
    "code": "\n/ Hello World in Assembler for the DEC PDP-8\r\n*200\r\nhello,    cla cll\r\n        tls            / tls to set printer flag.\r\n        tad charac    / set up index register\r\n        dca ir1        / for getting characters.\r\n        tad m6        / set up counter for\r\n        dca count    / typing characters.\r\nnext,    tad i ir1    / get a character.\r\n        jms type    / type it.\r\n        isz count    / done yet?\r\n        jmp next    / no: type another.\r\n        hlt\r\n\r\ntype,    0            / type subroutine\r\n        tsf\r\n        jmp .-1\r\n        tls\r\n        cla\r\n        jmp i type\r\ncharac,    .            / used as initial value of ir1\r\n        310 / H\r\n        305 / E\r\n        314 / L\r\n        314 / L\r\n        317 / O\r\n        254 / ,\r\n        240 /\r\n        327 / W\r\n        317 / O\r\n        322 / R\r\n        314 / L\r\n        304 / D\r\n        241 / !\r\nm6,        -15\r\ncount,    0\r\nir1 = 10\r\n$\r\n"
  },
  {
    "id": 66,
    "name": "Assembler (PPC, Darwin)",
    "code": "\n; Hello World in Assembler for the Darwin Power-PC\r\n\r\n.data\r\n.cstring\r\n.align 2\r\nmsg:\r\n.asciz \"Hello world!\\n\"\r\nlen = . - msg\r\n.text\r\n.align 2\r\n.globl _start\r\n_start:\r\nli r0,4\r\nli r3,1\r\nlis r4,ha16(msg)\r\nori r4,r4,lo16(msg)\r\nli r5,len\r\nsc\r\nli r0,1\r\nli r3,0\r\nsc\r\n"
  },
  {
    "id": 67,
    "name": "Assembler (SPARC)",
    "code": "! Hello world in SPARC Assembly Language\n\n\t.section\t\t\t\".data1\"\n\t.align\t\t4\n.L16:\n\t.ascii   \"hello world\\n\\0\"\n\n\t.section  \".text\"\n\t.global  main\nmain:\n\tsave  %sp,-96,%sp\n\tset  .L16,%o0\n\tcall  printf,1\n\tnop\n\trestore"
  },
  {
    "id": 68,
    "name": "Assembler (TAS)",
    "code": "-- Hello world in TAS Assembler for the TR 440 --\n\nHELLO.=SEGM,XBA VB616, SSR 6 16,\nFB616=R&ENDE,\n \nVB616=FB616/AG, 3/H, TEXT/AG, 3/H,\nTEXT=''*020Hello World!'',\nENDE,"
  },
  {
    "id": 69,
    "name": "Assembler (VP)",
    "code": "\n; Hello World in VP Assembler for intent (Amiga Anywhere)\r\n\r\n.include 'tao'\r\n\r\ntool 'home/hello',VP,TF_MAIN,8192,0\r\n\tent (-:-)\r\n\t\tqcall lib/print,(hello_world.p : i~)\r\n\t\tret ()\r\n\tentend\r\n\r\n\tdata\r\n\r\nhello_world:\r\n\tdc.b \"Hello World!\",ASCII_LF,0\r\n\r\ntoolend\r\n"
  },
  {
    "id": 70,
    "name": "Assembler (Win32)",
    "code": "\n; Hello world in Assembler for the Win32 architecture\r\n\r\nTITLE Hello world in win32. Tasm\r\n\r\nVERSION T310\r\nModel use32 Flat,StdCall\r\n\r\nstart_code segment byte public 'code' use32\r\nbegin:\r\n Call MessageBox, 0, offset sHallo, offset caption, 0\r\n Call ExitProcess, 0\r\nstart_code Ends\r\n\r\nstart_data segment byte public 'data' use32\r\n\r\nsHallo  db 'Hello world',0\r\ncaption\tdb \"Hi\",0\r\n\r\nstart_data Ends\r\nEnd begin\r\n"
  },
  {
    "id": 71,
    "name": "Assembler (X1)",
    "code": "\n                  dp zz 0 x 5\n\n                  da 0 zz 0   di\n\t      0   2b 1       a\t\t       set address increment to 1\n\t 3->  1   2a 4 zz 0  c p\t       load next character to A\n\t      2   6y 2 xp    \t\t       print it\n\t      3 y 2t 1 zz 0  a\t\t       loop if not last char\n\t      4   7p   \t  \t\t       and halt\n\t      5 dn + 19\t\t\t       lower case\n\t      6\t  + 28\t\t\t       h\n\t      7\t  + 25\t\t\t       e\n\t      8\t  + 32\t\t\t       l\n\t      9\t  + 32\t\t\t       l\n\t     10\t  + 35\t\t\t       o\n\t     11\t  + 15\t\t\t       comma\n\t     12\t  + 20\t\t\t       space\n\t     13   + 43\t\t\t       w\n\t     14\t  + 35\t\t\t       o\n\t     15\t  + 38\t\t\t       r\n\t     16\t  + 32\t\t\t       l\n\t     17\t  + 24\t\t\t       d\n\t     18\t  - 52\t\t\t       clrf, negative = last char\n\n                  de 0 zz 0\n"
  },
  {
    "id": 72,
    "name": "Assembler (X8)",
    "code": "\" Hello world in Assembler for the Electrologica X8 (ca. 1965)\n\n'BEGIN' TEL='1 000 000',  TTY=8\nM[24]:\n        GOTO(:START)\nM[(64+TTY*4)]:\nTAR:\nM[(64+38*4)]:\nTPAR:\n        \nM['400']:\n        \nSTART:\n        A=:HELLO DESCR                  \" point to I/O descriptor\n        TAR[0]=A                        \" set address of string\n        TAR[1]=-A                       \" set IFT = -1\n        A=D18\n        TAR[2]=A\n        AFON(TTY)                       \" send the message\nLOOP:   GOTO(:LOOP)                     \" spin (since there is no halt)\n        \nD18:    '001 000 000'\n\nHELLO DESCR:\n        0\n        (17*TEL + :DAG[-1])\n        0\n\nDAG:    37                              \" letters, red print\n        5                               \" H\n        16                              \" E\n        9                               \" L\n        9                               \" L\n        3                               \" O\n        27                              \" figures\n        6                               \" comma\n        31                              \" letters\n        4                               \" space\n        25                              \" W\n        3                               \" O\n        10                              \" R\n        9                               \" L\n        18                              \" D\n        2                               \" cr\n        8                               \" nl"
  },
  {
    "id": 73,
    "name": "Assembler (z390)",
    "code": "\n; Hello World for z390 IBM compatible mainframe assembler\r\n\r\nHELLO CSECT\r\n     USING *,15\r\n     WTO 'Hello World'\r\n     BR 14\r\n     END\r\n"
  },
  {
    "id": 74,
    "name": "Assembler (Z80 Console)",
    "code": "\n; This is a \"Hello World\" program for Z80 and TMS9918 / TMS9928 / TMS9929 /\r\n; V9938 or V9958 VDP.\r\n; That means that this should work on SVI, MSX, Colecovision, Memotech,\r\n; and many other Z80 based home computers or game consoles.\r\n;\r\n; Because we don't know what system is used, we don't know where RAM\r\n; is, so we can't use stack in this program.\r\n;\r\n; This version of Hello World was written by Timo \"NYYRIKKI\" Soilamaa\r\n; 17.10.2001\r\n;\r\n;----------------------------------------------------------------------\r\n; Configure this part:\r\n\r\nDATAP: EQU #98 ; VDP Data port #98 works on all MSX models\r\n; (TMS9918/TMS9929/V9938 or V9958)\r\n; #80 works on SVI \r\n; (for other platforms you have to figure this out by your self)\r\n\r\nCMDP: EQU #99 ; VDP Command port #99 works on all MSX models\r\n; (TMS9918/TMS9929/V9938 or V9958)\r\n; #81 works on SVI\r\n; (for other platforms you have to figure this out by your self)\r\n;-----------------------------------------------------------------------\r\n; Program starts here:\r\n\r\nORG 0 ; Z80 starts always from here when power is turned on\r\nDI ; We don't know, how interrupts works in this system, so we disable them.\r\n\r\n; Let's set VDP write address to #0000\r\nXOR A\r\nOUT (CMDP),A\r\nLD A,#40\r\nOUT (CMDP),A\r\n\r\n; Now let's clear first 16Kb of VDP memory\r\nLD B,0\r\nLD HL,#3FFF\r\nLD C,DATAP\r\nCLEAR:\r\nOUT (C),B\r\nDEC HL\r\nLD A,H\r\nOR L\r\nNOP ; Let's wait 8 clock cycles just in case VDP is not quick enough.\r\nNOP\r\nJR NZ,CLEAR\r\n\r\n; Now it is time to set up VDP registers:\r\n;----------------------------------------\r\n; Register 0 to #0\r\n;\r\n; Set mode selection bit M3 (maybe also M4 & M5) to zero and \r\n; disable external video & horizontal interrupt\r\nLD C,CMDP\r\nLD E,#80\r\n\r\nOUT (C),A\r\nOUT (C),E\r\n;---------------------------------------- \r\n; Register 1 to #50\r\n;\r\n; Select 40 column mode, enable screen and disable vertical interrupt\r\n\r\nLD A,#50\r\nINC E\r\nOUT (C),A\r\nOUT (C),E\r\n;---------------------------------------- \r\n; Register 2 to #0\r\n;\r\n; Set pattern name table to #0000\r\n\r\nXOR A\r\nINC E\r\nOUT (C),A\r\nOUT (C),E\r\n;---------------------------------------- \r\n; Register 3 is ignored as 40 column mode does not need color table\r\n;\r\nINC E\r\n;---------------------------------------- \r\n; Register 4 to #1\r\n; Set pattern generator table to #800\r\n\r\nINC A\r\nINC E\r\n\r\nOUT (C),A\r\nOUT (C),E\r\n;---------------------------------------- \r\n; Registers 5 (Sprite attribute) & 6 (Sprite pattern) are ignored \r\n; as 40 column mode does not have sprites\r\n\r\nINC E\r\nINC E\r\n;---------------------------------------- \r\n; Register 7 to #F0\r\n; Set colors to white on black\r\n\r\nLD A,#F0\r\nINC E\r\nOUT (C),A\r\nOUT (C),E\r\n;----------------------------------------\r\n\r\n; Let's set VDP write address to #808 so, that we can write\r\n; character set to memory\r\n; (No need to write SPACE it is clear char already)\r\nLD A,8\r\nOUT (C),A\r\nLD A,#48\r\nOUT (C),A\r\n\r\n; Let's copy character set\r\nLD HL,CHARS\r\nLD B, CHARS_END-CHARS\r\nCOPYCHARS:\r\nLD A,(HL)\r\nOUT (DATAP),A\r\nINC HL\r\nNOP ; Let's wait 8 clock cycles just in case VDP is not quick enough.\r\nNOP\r\nDJNZ COPYCHARS\r\n\r\n; Let's set write address to start of name table\r\nXOR A\r\nOUT (C),A\r\nLD A,#40\r\nOUT (C),A\r\n\r\n; Let's put characters to screen\r\nLD HL,ORDER\r\nLD B,ORDER_END-ORDER\r\nCOPYORDER:\r\nLD A,(HL)\r\nOUT (DATAP),A\r\nINC HL\r\n\r\nJR OVERNMI\r\nNOP\r\nNOP\r\n\r\n; Here is address #66, that is entry for NMI\r\nRETN ;Return from NMI\r\n\r\nOVERNMI:\r\nDJNZ COPYORDER\r\n\r\n; The end\r\nHALT\r\n\r\n; Character set:\r\n; --------------\r\nORDER:\r\nDEFB 1,2,3,3,4,0,5,4,6,3,7\r\nORDER_END:\r\n\r\nCHARS:\r\n\r\n; H\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %11111000\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %00000000\r\n; e\r\nDEFB %00000000\r\nDEFB %00000000\r\nDEFB %01110000\r\nDEFB %10001000\r\nDEFB %11111000\r\nDEFB %10000000\r\nDEFB %01110000\r\nDEFB %00000000\r\n; l\r\nDEFB %01100000\r\nDEFB %00100000\r\nDEFB %00100000\r\nDEFB %00100000\r\nDEFB %00100000\r\nDEFB %00100000\r\nDEFB %01110000\r\nDEFB %00000000\r\n; o\r\nDEFB %00000000\r\nDEFB %00000000\r\nDEFB %01110000\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %01110000\r\nDEFB %00000000\r\n; W\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %10001000\r\nDEFB %10101000\r\nDEFB %10101000\r\nDEFB %11011000\r\nDEFB %10001000\r\nDEFB %00000000\r\n\r\n; r\r\nDEFB %00000000\r\nDEFB %00000000\r\nDEFB %10110000\r\nDEFB %11001000\r\nDEFB %10000000\r\nDEFB %10000000\r\nDEFB %10000000\r\nDEFB %00000000\r\n; d\r\nDEFB %00001000\r\nDEFB %00001000\r\nDEFB %01101000\r\nDEFB %10011000\r\nDEFB %10001000\r\nDEFB %10011000\r\nDEFB %01101000\r\nDEFB %00000000\r\nchars_end:"
  },
  {
    "id": 75,
    "name": "Assembler (Z80, CP/M)",
    "code": "; Hello world in Z80 Assembly for CP/M\n\nBDOS    equ     05h\nWRTLINE equ     09h\n;\n        org     0100h\n        lxi     d,sHello\n        mvi     c,WRTLINE\n        call    BDOS\n        ret\n;\nsHello  db      'Hello, World!$'"
  },
  {
    "id": 76,
    "name": "Assembler (ZX81)",
    "code": "\n; Hello World in Assembler for the ZX81 (Zilog Z80)\r\n\r\n          CALL SPRINT\r\n          DEFM HELLO WORLD.\r\n          DEFB FF\r\n          RET\r\nSPRINT    POP HL\r\n          LD A,(HL)\r\n          INC HL\r\n          PUSH HL\r\n          CP FF\r\n          RET Z\r\n          CALL PRINT\r\n          JR SPRINT\r\n"
  },
  {
    "id": 77,
    "name": "Asterisk",
    "code": ";; Hello world in Asterisk\n\nexten => s,1,NoOp(Hello World)"
  },
  {
    "id": 78,
    "name": "ATS",
    "code": "// Hello world in ATS\n\nimplement main () = begin\n  print (\"Hello, world!\"); print_newline ()\nend"
  },
  {
    "id": 79,
    "name": "AutoHotkey",
    "code": "\n; Hello World in AutoHotkey\r\n\r\nMsgbox Hello, World!\r\n"
  },
  {
    "id": 80,
    "name": "AutoIT3",
    "code": "\n;Hello, World for AutoIT3  http://www.autoitscript.com\r\n\r\nmsgbox(0,\"Hello World\",0)\r\n"
  },
  {
    "id": 81,
    "name": "AviSynth",
    "code": "\n# Hello World for AviSynth video editor\r\nBlankClip()\r\nSubtitle(\"Hello, world!\")\r\n"
  },
  {
    "id": 82,
    "name": "AWK",
    "code": "# Hello world in AWK\n\nBEGIN {\n  print \"Hello World!\"\n}"
  },
  {
    "id": 83,
    "name": "B",
    "code": "\n/* Hello World in B */\r\n\r\nmain() {\r\n  extern a, b, c;\r\n  putchar (a); putchar (b); putchar (c); putchar ('!*n');\r\n}\r\n\r\na 'hell' ;\r\nb 'o, w' ;\r\nc 'orld' ;\r\n"
  },
  {
    "id": 84,
    "name": "BAL",
    "code": "\nHello World in IBM mainframe Basic Assembler Language (BAL)\r\n\r\nHELLO    CSECT\r\n         STM   R14,R12,12(R13)\r\n         LR    R12,R15\r\n         USING HELLO,R12\r\n         LA    R10,SAVEAREA\r\n         ST    R13,4(R10)\r\n         ST    R10,8(R13)\r\n         LR    R13,R10\r\n*\r\n         WTO   'HELLO WORLD',ROUTCDE=1\r\n*\r\n         L     R13,4(R13)\r\n         LM    R14,R12,12(R13)\r\n         SR    R15,R15\r\n         BCR   B'1111',R14\r\n*\r\nSAVEAREA DS    18F\r\n         LTORG\r\nR0       EQU   0\r\nR1       EQU   1\r\nR2       EQU   2\r\nR3       EQU   3\r\nR4       EQU   4\r\nR5       EQU   5\r\nR6       EQU   6\r\nR7       EQU   7\r\nR8       EQU   8\r\nR9       EQU   9\r\nR10      EQU   10\r\nR11      EQU   11\r\nR12      EQU   12\r\nR13      EQU   13\r\nR14      EQU   14\r\nR15      EQU   15\r\n         END   HELLO\r\n"
  },
  {
    "id": 85,
    "name": "BASIC-PICAXE",
    "code": "' Hello World in PICAXE BASIC\r\nSymbol TX_PIN = 0\r\nSymbol TX_BAUD = N2400\r\nSerOut TX_PIN, TX_BAUD, ( \"Hello World\", CR, LF )"
  },
  {
    "id": 86,
    "name": "BASIC",
    "code": "\n10 REM Hello World in BASIC\r\n20 PRINT \"Hello World!\"\r\n"
  },
  {
    "id": 87,
    "name": "Bato",
    "code": "# Hello world in Bato\n\nmag_print \"Hello World!\""
  },
  {
    "id": 88,
    "name": "Batsh",
    "code": "// Hello world in Batsh\n\nprintln(\"Hello world!\");"
  },
  {
    "id": 89,
    "name": "bc",
    "code": "\n#!/usr/bin/bc -q\r\n# Hello World for the Unix \"bc\" calculator\r\n\r\nprint \"Hello World!\\n\"\r\n"
  },
  {
    "id": 90,
    "name": "BCPL",
    "code": "\n// Hello world in BCLP\r\nGET \"libhdr\"\r\n\r\nLET start() = VALOF\r\n$( writes(\"Hello world*N\")\r\n   RESULTIS 0\r\n$)\r\n"
  },
  {
    "id": 91,
    "name": "BeanShell",
    "code": "// Hello World in BeanShell\r\n\r\nprint (\"Hello World!\");"
  },
  {
    "id": 92,
    "name": "Beef",
    "code": "// Hello world in Beef\n\nusing System;\n\nnamespace HelloWorld\n{\n    class Program\n    {\n        static void Main()\n        {\n            Console.WriteLine(\"Hello, world!\");\n        }\n    }\n}\n"
  },
  {
    "id": 93,
    "name": "Befunge",
    "code": "\nv Hello World in Befunge\r\n\r\n>\"dlroW olleH\",,,,,,,,,,,@\r\n"
  },
  {
    "id": 94,
    "name": "Beta",
    "code": "\n{ *** Hello World in BETA ***}\n(#\n  do\n     'Hello World!'->putLine\n#)\n"
  },
  {
    "id": 95,
    "name": "BibTex",
    "code": "%Hello world in BibTex\r\n\r\nENTRY{author}{}{}\r\n\r\nFUNCTION {hello.world}\r\n{ \r\n  \"Hello World!\" write$ newline$\r\n}\r\n\r\nREAD \r\nEXECUTE {hello.world}"
  },
  { "id": 96, "name": "Binary Lambda Calculus", "code": "!Hello, world" },
  {
    "id": 97,
    "name": "BIT",
    "code": "LINENUMBERZEROCODEPRINTZEROGOTOONELINENUMBERONECODEPRINTONEGOTOONEZEROLINENUMBE\nRONEZEROCODEPRINTZEROGOTOONEONELINENUMBERONEONECODEPRINTZEROGOTOONEZEROZEROLINE\nNUMBERONEZEROZEROCODEPRINTONEGOTOONEZEROONELINENUMBERONEZEROONECODEPRINTZEROGOT\nOONEONEZEROLINENUMBERONEONEZEROCODEPRINTZEROGOTOONEONEONELINENUMBERONEONEONECOD\nEPRINTZEROGOTOONEZEROZEROZEROLINENUMBERONEZEROZEROZEROCODEPRINTZEROGOTOONEZEROZ\nEROONELINENUMBERONEZEROZEROONECODEPRINTONEGOTOONEZEROONEZEROLINENUMBERONEZEROON\nEZEROCODEPRINTONEGOTOONEZEROONEONELINENUMBERONEZEROONEONECODEPRINTZEROGOTOONEON\nEZEROZEROLINENUMBERONEONEZEROZEROCODEPRINTZEROGOTOONEONEZEROONELINENUMBERONEONE\nZEROONECODEPRINTONEGOTOONEONEONEZEROLINENUMBERONEONEONEZEROCODEPRINTZEROGOTOONE\nONEONEONELINENUMBERONEONEONEONECODEPRINTONEGOTOONEZEROZEROZEROZEROLINENUMBERONE\nZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROZEROZEROONELINENUMBERONEZEROZEROZEROONE\nCODEPRINTONEGOTOONEZEROZEROONEZEROLINENUMBERONEZEROZEROONEZEROCODEPRINTONEGOTOO\nNEZEROZEROONEONELINENUMBERONEZEROZEROONEONECODEPRINTZEROGOTOONEZEROONEZEROZEROL\nINENUMBERONEZEROONEZEROZEROCODEPRINTONEGOTOONEZEROONEZEROONELINENUMBERONEZEROON\nEZEROONECODEPRINTONEGOTOONEZEROONEONEZEROLINENUMBERONEZEROONEONEZEROCODEPRINTZE\nROGOTOONEZEROONEONEONELINENUMBERONEZEROONEONEONECODEPRINTZEROGOTOONEONEZEROZERO\nZEROLINENUMBERONEONEZEROZEROZEROCODEPRINTZEROGOTOONEONEZEROZEROONELINENUMBERONE\nONEZEROZEROONECODEPRINTONEGOTOONEONEZEROONEZEROLINENUMBERONEONEZEROONEZEROCODEP\nRINTONEGOTOONEONEZEROONEONELINENUMBERONEONEZEROONEONECODEPRINTZEROGOTOONEONEONE\nZEROZEROLINENUMBERONEONEONEZEROZEROCODEPRINTONEGOTOONEONEONEZEROONELINENUMBERON\nEONEONEZEROONECODEPRINTONEGOTOONEONEONEONEZEROLINENUMBERONEONEONEONEZEROCODEPRI\nNTZEROGOTOONEONEONEONEONELINENUMBERONEONEONEONEONECODEPRINTZEROGOTOONEZEROZEROZ\nEROZEROZEROLINENUMBERONEZEROZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROZEROZEROZER\nOONELINENUMBERONEZEROZEROZEROZEROONECODEPRINTONEGOTOONEZEROZEROZEROONEZEROLINEN\nUMBERONEZEROZEROZEROONEZEROCODEPRINTONEGOTOONEZEROZEROZEROONEONELINENUMBERONEZE\nROZEROZEROONEONECODEPRINTZEROGOTOONEZEROZEROONEZEROZEROLINENUMBERONEZEROZEROONE\nZEROZEROCODEPRINTONEGOTOONEZEROZEROONEZEROONELINENUMBERONEZEROZEROONEZEROONECOD\nEPRINTONEGOTOONEZEROZEROONEONEZEROLINENUMBERONEZEROZEROONEONEZEROCODEPRINTONEGO\nTOONEZEROZEROONEONEONELINENUMBERONEZEROZEROONEONEONECODEPRINTONEGOTOONEZEROONEZ\nEROZEROZEROLINENUMBERONEZEROONEZEROZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROZEROO\nNELINENUMBERONEZEROONEZEROZEROONECODEPRINTZEROGOTOONEZEROONEZEROONEZEROLINENUMB\nERONEZEROONEZEROONEZEROCODEPRINTONEGOTOONEZEROONEZEROONEONELINENUMBERONEZEROONE\nZEROONEONECODEPRINTZEROGOTOONEZEROONEONEZEROZEROLINENUMBERONEZEROONEONEZEROZERO\nCODEPRINTZEROGOTOONEZEROONEONEZEROONELINENUMBERONEZEROONEONEZEROONECODEPRINTZER\nOGOTOONEZEROONEONEONEZEROLINENUMBERONEZEROONEONEONEZEROCODEPRINTZEROGOTOONEZERO\nONEONEONEONELINENUMBERONEZEROONEONEONEONECODEPRINTZEROGOTOONEONEZEROZEROZEROZER\nOLINENUMBERONEONEZEROZEROZEROZEROCODEPRINTZEROGOTOONEONEZEROZEROZEROONELINENUMB\nERONEONEZEROZEROZEROONECODEPRINTONEGOTOONEONEZEROZEROONEZEROLINENUMBERONEONEZER\nOZEROONEZEROCODEPRINTONEGOTOONEONEZEROZEROONEONELINENUMBERONEONEZEROZEROONEONEC\nODEPRINTONEGOTOONEONEZEROONEZEROZEROLINENUMBERONEONEZEROONEZEROZEROCODEPRINTZER\nOGOTOONEONEZEROONEZEROONELINENUMBERONEONEZEROONEZEROONECODEPRINTONEGOTOONEONEZE\nROONEONEZEROLINENUMBERONEONEZEROONEONEZEROCODEPRINTONEGOTOONEONEZEROONEONEONELI\nNENUMBERONEONEZEROONEONEONECODEPRINTONEGOTOONEONEONEZEROZEROZEROLINENUMBERONEON\nEONEZEROZEROZEROCODEPRINTZEROGOTOONEONEONEZEROZEROONELINENUMBERONEONEONEZEROZER\nOONECODEPRINTONEGOTOONEONEONEZEROONEZEROLINENUMBERONEONEONEZEROONEZEROCODEPRINT\nONEGOTOONEONEONEZEROONEONELINENUMBERONEONEONEZEROONEONECODEPRINTZEROGOTOONEONEO\nNEONEZEROZEROLINENUMBERONEONEONEONEZEROZEROCODEPRINTONEGOTOONEONEONEONEZEROONEL\nINENUMBERONEONEONEONEZEROONECODEPRINTONEGOTOONEONEONEONEONEZEROLINENUMBERONEONE\nONEONEONEZEROCODEPRINTONEGOTOONEONEONEONEONEONELINENUMBERONEONEONEONEONEONECODE\nPRINTONEGOTOONEZEROZEROZEROZEROZEROZEROLINENUMBERONEZEROZEROZEROZEROZEROZEROCOD\nEPRINTZEROGOTOONEZEROZEROZEROZEROZEROONELINENUMBERONEZEROZEROZEROZEROZEROONECOD\nEPRINTONEGOTOONEZEROZEROZEROZEROONEZEROLINENUMBERONEZEROZEROZEROZEROONEZEROCODE\nPRINTONEGOTOONEZEROZEROZEROZEROONEONELINENUMBERONEZEROZEROZEROZEROONEONECODEPRI\nNTONEGOTOONEZEROZEROZEROONEZEROZEROLINENUMBERONEZEROZEROZEROONEZEROZEROCODEPRIN\nTZEROGOTOONEZEROZEROZEROONEZEROONELINENUMBERONEZEROZEROZEROONEZEROONECODEPRINTZ\nEROGOTOONEZEROZEROZEROONEONEZEROLINENUMBERONEZEROZEROZEROONEONEZEROCODEPRINTONE\nGOTOONEZEROZEROZEROONEONEONELINENUMBERONEZEROZEROZEROONEONEONECODEPRINTZEROGOTO\nONEZEROZEROONEZEROZEROZEROLINENUMBERONEZEROZEROONEZEROZEROZEROCODEPRINTZEROGOTO\nONEZEROZEROONEZEROZEROONELINENUMBERONEZEROZEROONEZEROZEROONECODEPRINTONEGOTOONE\nZEROZEROONEZEROONEZEROLINENUMBERONEZEROZEROONEZEROONEZEROCODEPRINTONEGOTOONEZER\nOZEROONEZEROONEONELINENUMBERONEZEROZEROONEZEROONEONECODEPRINTZEROGOTOONEZEROZER\nOONEONEZEROZEROLINENUMBERONEZEROZEROONEONEZEROZEROCODEPRINTONEGOTOONEZEROZEROON\nEONEZEROONELINENUMBERONEZEROZEROONEONEZEROONECODEPRINTONEGOTOONEZEROZEROONEONEO\nNEZEROLINENUMBERONEZEROZEROONEONEONEZEROCODEPRINTZEROGOTOONEZEROZEROONEONEONEON\nELINENUMBERONEZEROZEROONEONEONEONECODEPRINTZEROGOTOONEZEROONEZEROZEROZEROZEROLI\nNENUMBERONEZEROONEZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROZEROZEROONELIN\nENUMBERONEZEROONEZEROZEROZEROONECODEPRINTONEGOTOONEZEROONEZEROZEROONEZEROLINENU\nMBERONEZEROONEZEROZEROONEZEROCODEPRINTONEGOTOONEZEROONEZEROZEROONEONELINENUMBER\nONEZEROONEZEROZEROONEONECODEPRINTZEROGOTOONEZEROONEZEROONEZEROZEROLINENUMBERONE\nZEROONEZEROONEZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROONEZEROONELINENUMBERONEZER\nOONEZEROONEZEROONECODEPRINTONEGOTOONEZEROONEZEROONEONEZEROLINENUMBERONEZEROONEZ\nEROONEONEZEROCODEPRINTZEROGOTOONEZEROONEZEROONEONEONELINENUMBERONEZEROONEZEROON\nEONEONECODEPRINTZEROGOTOONEZEROONEONEZEROZEROZEROLINENUMBERONEZEROONEONEZEROZER\nOZEROCODEPRINTZEROGOTOONEZEROONEONEZEROZEROONELINENUMBERONEZEROONEONEZEROZEROON\nECODEPRINTZEROGOTOONEZEROONEONEZEROONEZEROLINENUMBERONEZEROONEONEZEROONEZEROCOD\nEPRINTONEGOTOONEZEROONEONEZEROONEONELINENUMBERONEZEROONEONEZEROONEONECODEPRINTZ\nEROGOTOONEZEROONEONEONEZEROZEROLINENUMBERONEZEROONEONEONEZEROZEROCODEPRINTZEROG\nOTOONEZEROONEONEONEZEROONELINENUMBERONEZEROONEONEONEZEROONECODEPRINTZEROGOTOONE\nZEROONEONEONEONEZEROLINENUMBERONEZEROONEONEONEONEZEROCODEPRINTZEROGOTOONEZEROON\nEONEONEONEONELINENUMBERONEZEROONEONEONEONEONECODEPRINTONE"
  },
  {
    "id": 98,
    "name": "Blender",
    "code": "# Hello World as a 3D object in Blender\r\n\r\nimport Blender\r\nfrom Blender import Scene, Text3d\r\n\r\ntxt = Text3d.New(\"Text\")\r\ntxt.setText('Hello, world!')\r\nScene.GetCurrent().objects.new(txt)\r\nBlender.Redraw()"
  },
  {
    "id": 99,
    "name": "BlitzMax",
    "code": "' Hello World for BlitzMax\r\n\r\nGraphics 640,480,16\r\nWhile Not KeyHit(KEY_ESCAPE)\r\n    Cls\r\n    DrawText \"Hello World\",0,0\r\n    Flip\r\nEndWhile"
  },
  {
    "id": 100,
    "name": "BlitzPlus",
    "code": "\n; Hello World in Blitz Plus (graphical mode)\r\n\r\nGraphics 800,600,0,1\r\nText 790, 600, \"Hello World\"\r\nWaitKey\r\n"
  },
  {
    "id": 101,
    "name": "BMC Remedy",
    "code": "char-set: windows-1252\r\n#\r\n#  Hello World in BMC Remedy 7.0\r\n#  File exported Thu May  8 09:36:46 2008\r\n#\r\nbegin active link\r\n   name           : Remedy_HelloWorld\r\n   timestamp      : 1210249958\r\n   export-version : 9\r\n   owner          : Demo\r\n   last-changed   : Demo\r\n   actlink-order  : 0\r\n   wk-conn-type   : 1\r\n   schema-name    : _1\r\n   actlink-mask   : 16\r\n   enable         : 1\r\n   permission     : 0\r\n   action {\r\n      message-type: 0\r\n      message-num : 10000\r\n      message-pane: 1\r\n      message-text: Hello World!!\r\n   }\r\n   object-prop    : 2\\60016\\4\\1\\0\\60017\\4\\1\\0\\\r\nend"
  },
  {
    "id": 102,
    "name": "Boo",
    "code": "\n# Hello World in Boo\r\nprint \"Hello World\"\r\n"
  },
  {
    "id": 103,
    "name": "Brainfuck",
    "code": "Hello World in Brainfuck\r\n\r\n++++++++++[>+++++++>++++++++++>+++<<<-]>++.>+.+++++++\r\n..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+."
  },
  {
    "id": 104,
    "name": "BrightScript",
    "code": "' Hello world in BrightScript\n\nsub Main()\nport = CreateObject(\"roMessagePort\")\nscreen = CreateObject(\"roTextScreen\")\nscreen.SetText(\"Hello World\")\nscreen.setMessagePort(port)\nscreen.Show()\nwhile true\n  msg = wait(0, port)\n  if(msg.isScreenClosed())\n    return -1\n  end if\nend while\nend sub"
  },
  {
    "id": 105,
    "name": "BS2000",
    "code": "\n/BEGIN-PROCEDURE LOGGING=N\n/REMARK \"HELLO WORLD\" IN BS2000 (SDF)\n/ASSIGN-SYSDTA TO-FILE=*SYSCMD\n/WRITE-TEXT 'HELLO WORLD!'\n/SET-JOB-STEP\n/ASSIGN-SYSDTA TO-FILE=*PRIMARY\n/END-PROCEDURE\n"
  },
  {
    "id": 106,
    "name": "BSP",
    "code": "<!— Hello World in  SAP Business Server Pages (BSP)\n<%@page language=\"abap\"%>\n<%@extension name=\"htmlb\" prefix=\"htmlb\"%>\n<html><body>\n<%\n  CONSTANTS lv_hworld TYPE string VALUE `Hello World!`.\n%>\n<%=lv_hworld%>\">\n</body>\n</html>"
  },
  {
    "id": 107,
    "name": "BuddyScript",
    "code": "# Hello World in BuddyScript\r\n\r\n+ =AnythingPerfect\r\n\r\n  - Hello, world!\r\n"
  },
  {
    "id": 108,
    "name": "Buzz",
    "code": "# Hello world in Buzz\n\nlog(\"Hello World!\")"
  },
  {
    "id": 109,
    "name": "Byte Syze",
    "code": "c7 3c 2a 3c 2a 2b 2a 5c 3c 28 5c 2a 2b 2a 5c 3c\r\n28 5c 2a 2b 2a 5c 3c 28 5c 2a 2b 2a 5c 3c 28 5c\r\n2a 2b 2a 5c 3c 28 5c 2a 2b 2a 5c 3c 28 5c 2a 2b\r\n2a 5c 3c 28 5c 2a 2b 2a 5c 3c 28 5c 2a 2b 2a 5c\r\n3c 28 5c 2a 2b 2a 5c 3c 28 5c 2a 2b 2a 5c 3c 28\r\n5c 2a 2b 2a 5c 3c 28 5c 2a 2b 2a 5c 3c 28 5c 2a\r\n2b 2a 00 00 01 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 64 48 65 6c 6c 6f 2c 20 57\r\n6f 72 6c 64 21 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
  },
  {
    "id": 110,
    "name": "C*",
    "code": "/* Hello world in C* */\n\n#include <stdio.h>\n\nmain()\n{\n    printf(\"Hello World!\\n\");\n}"
  },
  {
    "id": 111,
    "name": "C/AL",
    "code": "\nOBJECT Codeunit 50000 HelloWorld\r\n{\r\n  PROPERTIES\r\n  {\r\n    OnRun=BEGIN\r\n            //Hello World in C/AL (Microsoft Business Solutions-Navision)\r\n            MESSAGE(Txt001);\r\n          END;\r\n  }\r\n  CODE\r\n  {\r\n    VAR\r\n      Txt001@1000000000 : TextConst 'ENU=Hello World';\r\n    BEGIN\r\n    END.\r\n  }\r\n}\r\n"
  },
  {
    "id": 112,
    "name": "C♯",
    "code": "\n//Hello World in C#\r\nclass HelloWorld\r\n{\r\n    static void Main()\r\n    {\r\n        System.Console.WriteLine(\"Hello, World!\");\r\n    }\r\n}\r\n"
  },
  {
    "id": 113,
    "name": "C (Amiga Anywhere)",
    "code": "\n/* Hello World in C for Amiga Anywhere 2 (AA2) */\r\n\r\n#include <aa.h>\r\n\r\nint aaMain(int argc, char **argv)\r\n{\r\n   aaOpenDisplay(200, 200, 16, \"Hello World\", FAA_DISPLAY_WINDOW);\r\n   aaDrawString(AA_DISPLAY_PIXMAP, \"Hello, world!\", 20, 20, AA_DEFAULT_FONT, 0xffff00, 0, FAA_FONT_INK, -1);\r\n   aaUpdate();\r\n   aaWaitInput();\r\n   return 0;\r\n}\r\n"
  },
  {
    "id": 114,
    "name": "C (ANSI)",
    "code": "\n/* Hello World in C, Ansi-style */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n  puts(\"Hello World!\");\n  return EXIT_SUCCESS;\n}\n"
  },
  {
    "id": 115,
    "name": "C (Curses)",
    "code": "\n/* Hello World in C for Curses */\n\n#include <curses.h>\nmain()\n{\n  initscr();\n  addstr(\"Hello World!\\n\");\n  refresh();\n  endwin();\n  return 0;\n}\n"
  },
  {
    "id": 116,
    "name": "C (GEM)",
    "code": "\n/* Hello World for C with GEM */\n\n#include <aes.h>\nmain()\n{\n  appl_init();\n  form_alert(1,\"[0][Hello World!][Ok]\");\n  appl_exit();\n  return 0;\n}\n"
  },
  {
    "id": 117,
    "name": "C (Intuition)",
    "code": "\n/* Hello World in C for Intution (Amiga GUI) */\n\n#include <intuition/intuition.h>\n\nstruct IntuitionBase *IntuitionBase = NULL;\n\nstruct IntuiText hello_text = {-1,-1,JAM1,0,0,NULL,\"Hello World!\",NULL };\nstruct IntuiText ok_text    = {-1,-1,JAM1,0,0,NULL,\"Ok\",NULL };\n\nvoid main(void)\n{\n   IntuitionBase = (struct IntuitionBase *)\n                   OpenLibrary(\"intuition.library\", 0);\n   AutoRequest(NULL, &hello_text, NULL, &ok_text, NULL, NULL, 100, 50);\n   CloseLibrary(IntuitionBase);\n}\n"
  },
  {
    "id": 118,
    "name": "C (K&R)",
    "code": "\n/* Hello World in C, K&R-style */\n\nmain()\n{\n  puts(\"Hello World!\");\n  return 0;\n}\n"
  },
  {
    "id": 119,
    "name": "C (OpenGL)",
    "code": "\n/* \"Hello World\" in C using OGL - Open Graphics Library */\r\n\r\n#include <GL/glut.h>\r\n#define font GLUT_BITMAP_HELVETICA_18\r\n#define tx \"Hello World!\"\r\n\r\nvoid text(void)\r\n{\r\n char *p, tex[] = tx;\r\n p = tex;\r\n glColor3d(1.0, 1.0, 0.0);\r\n glRasterPos2d(-.5, 0.);\r\n while(*p) glutBitmapCharacter(font, *p++);\r\n}\r\n\r\nvoid display()\r\n{\r\n glClear(GL_COLOR_BUFFER_BIT);\r\n text();\r\n glFlush();\r\n}\r\n\r\nvoid reshape(int width, int height)\r\n{\r\n glViewport(0, 0, width, height);\r\n glMatrixMode(GL_PROJECTION);\r\n glLoadIdentity();\r\n glOrtho(-1, 1, -1, 1, -1, 1);\r\n glMatrixMode(GL_MODELVIEW);\r\n display();\r\n}\r\n\r\nint main(int argc, char **argv)\r\n{\r\n glutInit(&argc, argv);\r\n glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);\r\n glutInitWindowPosition(50, 50);\r\n glutInitWindowSize(500, 500);\r\n glutCreateWindow(\"Hello World OpenGL\");\r\n glClearColor(0,0,0,0);\r\n glutDisplayFunc(display);\r\n glutReshapeFunc(reshape);\r\n glutMainLoop();\r\n return 0;\r\n}\r\n"
  },
  {
    "id": 120,
    "name": "C (PresentationManager)",
    "code": "\n/* Hello World for C with PresentationManager / OS/2 2.11  */\n\n#define INCL_WIN\n\n#include <os2.h>\n\nint main( void )\n{\n   HMQ   hmq;\n\n   hmq = WinCreateMsgQueue( 0, 0 );\n\n   WinMessageBox( HWND_DESKTOP, HWND_DESKTOP, (PSZ)\"Hello World!\",\n      (PSZ)\"\", 0, MB_OK );\n\n   WinDestroyMsgQueue( hmq );\n\n   return 0;\n}\n"
  },
  {
    "id": 121,
    "name": "C (Windows)",
    "code": "\n/* Hello world in C for MS-Windows */\n\n#include <windows.h>\n\nint PASCAL WinMain(HINSTANCE hInstance,\n  HINSTANCE hPrevInstance, LPSTR CmdLine, int Show)\n{\n  MessageBox(GetActiveWindow(), \"Hello World!\", \"Hello Windows World\", MB_OK);\n  return 0;\n}\n"
  },
  {
    "id": 122,
    "name": "C (X11 Athena)",
    "code": "\n/* Hello World in C with X11 using Athena widgets */\n\n#include <X11/Intrinsic.h>\n#include <X11/StringDefs.h>\n#include <X11/Xaw/Label.h>\n\nmain(int argc,char **argv)\n{\n  XtAppContext app_context;\n  Widget toplevel,hello;\n\n  toplevel = XtVaAppInitialize(&app_context,\"XHello\",NULL,0,\n    &argc,argv,NULL,NULL);\n  hello = XtVaCreateManagedWidget(\"Hello World!\",labelWidgetClass,\n    toplevel,(void*)0);\n\n  XtRealizeWidget(toplevel);\n\n  XtAppMainLoop(app_context);\n  return 0;\n}\n"
  },
  {
    "id": 123,
    "name": "C++",
    "code": "\n// Hello World in C++ (pre-ISO)\n\n#include <iostream.h>\n\nmain()\n{\n    cout << \"Hello World!\" << endl;\n    return 0;\n}\n"
  },
  {
    "id": 124,
    "name": "C++ (.NET CLI)",
    "code": "\n// Hello World in C++/CLI for .NET\r\n\r\nusing namespace System;\r\n\r\nvoid main()\r\n{\r\n    Console::WriteLine(\"Hello World\");\r\n}\r\n"
  },
  {
    "id": 125,
    "name": "C++ (Epoc)",
    "code": "\n// Hello World in C++, Epoc style (for Symbian OS)\r\n\r\n#include <eikapp.h>\r\n#include <eikdoc.h>\r\n#include <eikappui.h>\r\n\r\nclass CHelloWorldAppUi;\r\nclass CEikApplication;\r\nclass CHelloWorldAppView;\r\n\r\nclass CHelloWorldApplication : public CEikApplication\r\n    {\r\n        public:\r\n            TUid AppDllUid() const;\r\n        protected:\r\n            CApaDocument* CreateDocumentL();\r\n    };\r\n\r\nclass CHelloWorldDocument : public CEikDocument\r\n    {\r\n        public:\r\n            static CHelloWorldDocument* NewL(CEikApplication& aApp);\r\n            static CHelloWorldDocument* NewLC(CEikApplication& aApp);\r\n            ~CHelloWorldDocument(){};\r\n        public:\r\n            CEikAppUi* CreateAppUiL();\r\n        private:\r\n            void ConstructL() {};\r\n            CHelloWorldDocument(CEikApplication& aApp){};\r\n    };\r\n\r\nclass CHelloWorldAppUi : public CEikAppUi\r\n    {\r\n        public:\r\n                void ConstructL();\r\n                CHelloWorldAppUi(){};\r\n                ~CHelloWorldAppUi(){};\r\n    };\r\n\r\nstatic const TUid KUidHelloWorldApp = {0x10005B91};\r\n\r\nGLDEF_C TInt E32Dll(TDllReason )\r\n    {\r\n    return KErrNone;\r\n    }\r\n\r\nEXPORT_C CApaApplication* NewApplication() \r\n    {\r\n    return (new CHelloWorldApplication);\r\n    }\r\n\r\nCApaDocument* CHelloWorldApplication::CreateDocumentL()\r\n    {  \r\n    CApaDocument* document = CHelloWorldDocument::NewL(*this);\r\n    return document;\r\n    }\r\n\r\nTUid CHelloWorldApplication::AppDllUid() const\r\n    {\r\n    return KUidHelloWorldApp;\r\n    }\r\n    \r\nCHelloWorldDocument* CHelloWorldDocument::NewL(CEikApplication& aApp)\r\n    {\r\n    CHelloWorldDocument* self = NewLC(aApp);\r\n    CleanupStack::Pop(self);\r\n    return self;\r\n    }\r\n\r\nCHelloWorldDocument* CHelloWorldDocument::NewLC(CEikApplication& aApp)\r\n    {\r\n    CHelloWorldDocument* self = new (ELeave) CHelloWorldDocument(aApp);\r\n    CleanupStack::PushL(self);\r\n    self->ConstructL();\r\n    return self;\r\n    }\r\n\r\nCEikAppUi* CHelloWorldDocument::CreateAppUiL()\r\n    {\r\n    CEikAppUi* appUi = new (ELeave) CHelloWorldAppUi;\r\n    return appUi;\r\n    }\r\n\r\nvoid CHelloWorldAppUi::ConstructL()\r\n    {\r\n    BaseConstructL();\r\n\r\n    _LIT(message,\"Hello!\");\r\n    CAknInformationNote* informationNote = new (ELeave) CAknInformationNote;\r\n    informationNote->ExecuteLD(message);\r\n    }\r\n"
  },
  {
    "id": 126,
    "name": "C++ (FLTK)",
    "code": "\n// Hello World in C++-FLTK\r\n\r\n#include <FL/Fl.H>\r\n#include <FL/Fl_Window.H>\r\n#include <FL/Fl_Box.H>\r\n\r\nint main(int argc, char **argv) {\r\n   Fl_Window *ventana = new Fl_Window(300,180);\r\n   ventana->begin();\r\n   Fl_Box *box = new Fl_Box(20,40,260,100,\"Hello World!\");\r\n   box->labelsize(50);\r\n   ventana->end();\r\n   ventana->show(argc, argv);\r\n   return Fl::run();\r\n}\r\n"
  },
  {
    "id": 127,
    "name": "C++ (Gtk++)",
    "code": "\n// Hello World in C++ for the Gtk+ toolkit\r\n\r\n#include <gtkmm/main.h>\r\n#include <gtkmm/button.h>\r\n#include <gtkmm/window.h>\r\n#include <iostream>\r\n\r\nvoid button_clicked()\r\n{\r\n\tstd::cout << \"Hello, World !\" << std::endl;\r\n}\r\n\r\nint main (int argc, char *argv[])\r\n{\r\n\tGtk::Main kit(argc, argv);\r\n\tGtk::Window hello_window;\r\n\tGtk::Button hello_button(\"Hello World\");\r\n\t\r\n\thello_window.set_border_width(10);\r\n\thello_window.add(hello_button);\r\n\thello_button.signal_clicked().connect(sigc::ptr_fun(&button_clicked));\r\n\thello_button.show();\r\n\t\r\n\tGtk::Main::run(hello_window);\r\n\treturn 0;\r\n}\r\n"
  },
  {
    "id": 128,
    "name": "C++ (ISO)",
    "code": "// Hello World in ISO C++\r\n\r\n#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello World!\" << std::endl;\r\n}"
  },
  {
    "id": 129,
    "name": "C++ (MFC)",
    "code": "\n// Hello World in C++ for Microsoft Foundation Classes\n// (Microsoft Visual C++).\n\n#include <afxwin.h>\n\nclass CHello : public CFrameWnd\n{\npublic:\n    CHello()\n    {\n        Create(NULL,_T(\"Hello World!\"),WS_OVERLAPPEDWINDOW,rectDefault);\n    }\n};\n\nclass CHelloApp : public CWinApp\n{\npublic:\n    virtual BOOL InitInstance();\n};\n\nBOOL CHelloApp::InitInstance()\n{\n    m_pMainWnd = new CHello();\n    m_pMainWnd->ShowWindow(m_nCmdShow);\n    m_pMainWnd->UpdateWindow();\n    return TRUE;\n}\n\nCHelloApp theApp;\n"
  },
  {
    "id": 130,
    "name": "C++ (Qt)",
    "code": "\n// Hello World in C++ for the Qt framework\r\n\r\n#include <qapplication.h>\r\n#include <qlabel.h>\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n  QApplication a(argc, argv);\r\n  QLabel l(\"Hello World!\", 0);\r\n  l.setCaption(\"Test\");\r\n  l.setAlignment(Qt::AlignCenter);\r\n  l.resize(300, 200);\r\n  a.setMainWidget(&l);\r\n  l.show();\r\n  return(a.exec());\r\n}\r\n"
  },
  {
    "id": 131,
    "name": "CA-Easytrieve Plus",
    "code": "* Hello world in CA-Easytrieve Plus\n\nJOB\n    DISPLAY 'HELLO, WORLD!'"
  },
  {
    "id": 132,
    "name": "Caché Object Script",
    "code": "HelloWorld\t;Hello World in Caché Object Script\r\nStart\t;\r\n    Write \"Hello world\"\r\n    Quit"
  },
  {
    "id": 133,
    "name": "CAML-Light",
    "code": "\n(* Hello World in CAML Light *)\n\nlet hello =\n   print_string \"Hello World!\";\n;;\n"
  },
  {
    "id": 134,
    "name": "Carp",
    "code": ";; Hello world in Carp\n\n(println \"hello world\")"
  },
  {
    "id": 135,
    "name": "Casio BASIC",
    "code": "'Hello World in Casio-Basic. [new line symbol here (press EXE)]\r\n\"Hello World!\""
  },
  {
    "id": 136,
    "name": "CDuce",
    "code": "\n(* Hello World in CDuce *)\r\n\r\nprint \"Hello World!\\n\";;\r\n"
  },
  {
    "id": 137,
    "name": "Centura",
    "code": "\n! Hello World in Centura\r\n\r\nFunction: HelloWorld\r\nDescription:\r\nReturns\r\nParameters\r\nStatic Variables\r\nLocal variables\r\nActions\r\n Call SalMessageBox( 'Hello World','Message',MB_Ok)\r\n"
  },
  {
    "id": 138,
    "name": "Ceylon",
    "code": "// Hello world in Ceylon\n\nprint(\"Hello, World!\");"
  },
  {
    "id": 139,
    "name": "ChaiScript",
    "code": "// Hello world in ChaiScript\n\n#include <chaiscript/chaiscript.hpp>\n\nstd::string helloWorld(const std::string &t_name) {\n  return \"Hello \" + t_name + \"!\";\n}\n\nint main() {\n  chaiscript::ChaiScript chai;\n  chai.add(chaiscript::fun(&helloWorld), \"helloWorld\");\n\n  chai.eval(R\"(\n    puts(helloWorld(\"World\"));\n  )\");\n}"
  },
  {
    "id": 140,
    "name": "Chef",
    "code": "\nHello World Souffle.\r\n\r\nThis recipe prints the immortal words \"Hello world!\", in a basically brute force\r\nway. It also makes a lot of food for one person.\r\n\r\nIngredients.\r\n72 g haricot beans\r\n101 eggs\r\n108 g lard\r\n111 cups oil\r\n32 zucchinis\r\n119 ml water\r\n114 g red salmon\r\n100 g dijon mustard\r\n33 potatoes\r\n\r\nMethod.\r\nPut potatoes into the mixing bowl. Put dijon mustard into the mixing bowl. Put\r\nlard into the mixing bowl. Put red salmon into the mixing bowl. Put oil into\r\nthe mixing bowl. Put water into the mixing bowl. Put zucchinis into the mixing\r\nbowl. Put oil into the mixing bowl. Put lard into the mixing bowl. Put lard\r\ninto the mixing bowl. Put eggs into the mixing bowl. Put haricot beans into\r\nthe mixing bowl. Liquefy contents of the mixing bowl. Pour contents of the\r\nmixing bowl into the baking dish.\r\n\r\nServes 1.\r\n"
  },
  {
    "id": 141,
    "name": "Chicken",
    "code": "\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken\nchicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken\n\nchicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken\n\nchicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken\nchicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken\n\nchicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken\n\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken\n\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\nchicken chicken chicken chicken chicken chicken\n"
  },
  {
    "id": 142,
    "name": "CICS-COBOL",
    "code": "-- Hello World in CICS COBOL\r\n\r\n000100        IDENTIFICATION DIVISION.                           \r\n000200        PROGRAM-ID. HELLO.                                 \r\n000300       * HELLO WORLD IN CICS COBOL.                        \r\n000400        AUTHOR. ROBERT GOSLING.                            \r\n000500        ENVIRONMENT DIVISION.                              \r\n000600        DATA DIVISION.                                     \r\n000700        WORKING-STORAGE SECTION.                           \r\n000800        01 WS-DATA-AREA PIC X(80) VALUE \"HELLO WORLD!\".    \r\n000900        PROCEDURE DIVISION.                                \r\n001000            EXEC CICS SEND FROM (WS-DATA-AREA) END-EXEC.   \r\n001100            EXEC CICS RETURN END-EXEC."
  },
  {
    "id": 143,
    "name": "Clarion",
    "code": "\n!Hello World in Clarion \r\n \r\n  PROGRAM\r\n \r\n MAP\r\n END\r\n \r\n CODE\r\n \r\n MESSAGE('Hello World!')\r\n \r\n RETURN\r\n"
  },
  {
    "id": 144,
    "name": "Clean",
    "code": "\n// Hello World in Clean\r\n\r\nmodule hello\r\n\r\nStart :: String\r\nStart = \"Hello World!\\n\"\r\n"
  },
  {
    "id": 145,
    "name": "Clipper",
    "code": "// Hello World in Clipper\r\n\r\n? \"Hello World\""
  },
  {
    "id": 146,
    "name": "Clojure",
    "code": "; Hello world in Clojure\n\n(defn hello []\n  (println \"Hello world!\"))\n\n(hello)"
  },
  {
    "id": 147,
    "name": "CLP",
    "code": "\n/* Hello World in CLP for the IBM AS/400 */\r\nPGM\r\nSNDPGMMSG  MSG('Hello World !') MSGTYPE(*COMP)\r\n \r\nENDPGM\r\n"
  },
  {
    "id": 148,
    "name": "CMake",
    "code": "# Hello World in CMake\r\n\r\nmessage(STATUS \"Hello World!\")\r\n"
  },
  {
    "id": 149,
    "name": "COBOL",
    "code": "       * Hello World in COBOL\n\n*****************************\nIDENTIFICATION DIVISION.\nPROGRAM-ID. HELLO.\nENVIRONMENT DIVISION.\nDATA DIVISION.\nPROCEDURE DIVISION.\nMAIN SECTION.\nDISPLAY \"Hello World!\"\nSTOP RUN.\n****************************"
  },
  {
    "id": 150,
    "name": "Cobra",
    "code": "\"\"\"Hello world in Cobra\"\"\"\n\nclass Hello\n\n    def main\n        print 'Hello, world.'"
  },
  {
    "id": 151,
    "name": "Cocoa",
    "code": "\n// Hello World in Cocoa Obj-C (OS X)\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\nint main (int argc, const char * argv[]) {\r\n    NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];\r\n\r\n    NSLog(@\"Hello, World!\");\r\n    [pool release];\r\n    return 0;\r\n}\r\n"
  },
  {
    "id": 152,
    "name": "Coconut",
    "code": "# Hello world in Coconut\n\n\"hello, world!\" |> print"
  },
  {
    "id": 153,
    "name": "CoDScript",
    "code": "// Hello world in CoDScript\n\nmain(){\n     iPrintLnBold(\"Hello World!\");\n}"
  },
  {
    "id": 154,
    "name": "CoffeeScript",
    "code": "// Hello world in CoffeeScript\n\nalert \"Hello, World!\""
  },
  {
    "id": 155,
    "name": "ColdFusion",
    "code": "\n<!---Hello world in ColdFusion--->\r\n\r\n<cfset message = \"Hello World\">\r\n<cfoutput> #message#</cfoutput>\r\n"
  },
  {
    "id": 156,
    "name": "CommandScript",
    "code": "\n#Hello World in Command Script 3.1\r\n#Meta.Name: \"Hello World\"\r\n\r\n#Block(Main).Start\r\n    echo \"Hello World!\"\r\n#Block(Main).End\r\n"
  },
  {
    "id": 157,
    "name": "Common Lisp",
    "code": ";;; Hello world in Common Lisp\n\n(print \"Hello World\")"
  },
  {
    "id": 158,
    "name": "Console Postscript",
    "code": "\n%% Hello World in Console PostScript\r\n\r\nserverdict begin 0 exitserver\r\n/Courier findfont\r\n48 scalefont setfont\r\n22 22 moveto\r\n(Hello World!) show\r\nshowpage\r\n\r\n%% End\r\n"
  },
  {
    "id": 159,
    "name": "ConTeXt",
    "code": "% Hello world in ConTeXt\n\n\\starttext\nHello World!\n\\stoptext"
  },
  {
    "id": 160,
    "name": "Cool",
    "code": "-- Hello World in Cool\r\n\r\nclass Main inherits IO{\r\n    main():Object{\r\n    out_string(\"Hello, world!\\n\")\r\n    };\r\n};"
  },
  {
    "id": 161,
    "name": "CoolBasic",
    "code": "\n' Hello World in CoolBasic\r\n\r\nprint \"hello world\"\r\nwait key\r\n"
  },
  {
    "id": 162,
    "name": "cpl",
    "code": "title 'Hello world in cpl on a Warrex Centurion'\nsystem zhelloworld      (main,exp=d)\n;\nfile crt:sysipt,class=0,seq\n;\ndefine m00:'hello world'\nformat f00:c132\n;\nentrypoint crt\n;\nentry\n;\nopen io crt\n;\nwrite (crt, f00) m00\nstop 0\n;\nend"
  },
  {
    "id": 163,
    "name": "Crystal",
    "code": "# Hello world in Crystal\n\nputs \"Hello World\""
  },
  {
    "id": 164,
    "name": "CSS",
    "code": "\n/* Hello World in CSS */\r\nbody:before {\r\n    content: \"Hello World\";\r\n}\r\n"
  },
  {
    "id": 165,
    "name": "CUDA",
    "code": "// Hello world in CUDA\n\n#include <stdio.h>\n \nconst int N = 16; \nconst int blocksize = 16; \n \n__global__ \nvoid hello(char *a, int *b) \n{\n\ta[threadIdx.x] += b[threadIdx.x];\n}\n \nint main()\n{\n\tchar a[N] = \"Hello \\0\\0\\0\\0\\0\\0\";\n\tint b[N] = {15, 10, 6, 0, -11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n \n\tchar *ad;\n\tint *bd;\n\tconst int csize = N*sizeof(char);\n\tconst int isize = N*sizeof(int);\n \n\tprintf(\"%s\", a);\n \n\tcudaMalloc( (void**)&ad, csize ); \n\tcudaMalloc( (void**)&bd, isize ); \n\tcudaMemcpy( ad, a, csize, cudaMemcpyHostToDevice ); \n\tcudaMemcpy( bd, b, isize, cudaMemcpyHostToDevice ); \n\t\n\tdim3 dimBlock( blocksize, 1 );\n\tdim3 dimGrid( 1, 1 );\n\thello<<<dimGrid, dimBlock>>>(ad, bd);\n\tcudaMemcpy( a, ad, csize, cudaMemcpyDeviceToHost ); \n\tcudaFree( ad );\n\tcudaFree( bd );\n\t\n\tprintf(\"%s\\n\", a);\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "id": 166,
    "name": "CWEB",
    "code": "\\def\\title{<a href=\"/showArticle.jhtml?documentID=cuj9505wittenbe&pgno=1\">Listing 1</a>}\n\n@*A Simple Example.\nThis is a trivial example of a \\.{CWEB} program.\nIt is, of course, the classic \"hello, world\"\nprogram we all know and love:\n\n@c\n@<Header files needed by the program@>@;\n@#\nmain(void)\n{\n   @<Print the message |\"hello, world\"|@>@;\n}\n\n@ Naturally, we use |printf| to do the dirty work:\n\n@<Print the message |\"hello, world\"|@>=\nprintf(\"hello, world\\n\");\n\n@ The prototype for |printf| is in the standard\nheader, \\.{<stdio.h>}.\n\n@<Header files needed by the program@>=\n#include <stdio.h>\n\n@*Index."
  },
  {
    "id": 167,
    "name": "CYBOL",
    "code": "\n<!-- Hello World in Cybernetics Oriented Language (CYBOL) -->\r\n<model>\r\n    <part name=\"send_message\" channel=\"inline\" abstraction=\"operation\" model=\"send\">\r\n        <property name=\"channel\" channel=\"inline\" abstraction=\"character\" model=\"shell\"/>\r\n        <property name=\"message\" channel=\"inline\" abstraction=\"character\" model=\"Hello, World!\"/>\r\n    </part>\r\n    <part name=\"exit_application\" channel=\"inline\" abstraction=\"operation\" model=\"exit\"/>\r\n</model>\r\n"
  },
  {
    "id": 168,
    "name": "D",
    "code": "\n// Hello World in D\r\n\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n   writefln(\"Hello World!\");\r\n}\r\n"
  },
  {
    "id": 169,
    "name": "D4",
    "code": "// Hello World as a relation-variable in D4\r\n\r\nselect row { \"Hello World\" AMessage }"
  },
  {
    "id": 170,
    "name": "Dafny",
    "code": "// Hello world in Dafny\n\nmethod Main() {\n  print \"Hello, World!\\n\";\n}"
  },
  {
    "id": 171,
    "name": "Darkbasic",
    "code": "\n` Hello World in Darkbasic\r\n\r\nprint \"Hello World!\"\r\nwait key\r\n"
  },
  {
    "id": 172,
    "name": "Dart",
    "code": "// Hello world in Dart\n\nmain() {\n   print('Hello world!');\n}"
  },
  {
    "id": 173,
    "name": "Databasic",
    "code": "\nPROGRAM HELLO.B\r\n# Hello World in Databasic\r\nCRT \"HELLOW WORLD\"\r\nEND\r\n"
  },
  {
    "id": 174,
    "name": "Dataflex",
    "code": "\n// Hello World in Dataflex Procedural\r\n\r\n/tela\r\n\r\nHello world\r\n\r\n/*\r\n\r\nclearscreen\r\n\r\npage tela\r\n"
  },
  {
    "id": 175,
    "name": "dBase",
    "code": "\n* Hello World in dBase IV\n\n? \"Hello World!\"\n"
  },
  {
    "id": 176,
    "name": "dc",
    "code": "\n#!/usr/bin/dc\r\n# Hello world! in dc (Unix desk calculator)\r\n[Hello world!]p\r\n"
  },
  {
    "id": 177,
    "name": "DCL",
    "code": "\n$! Hello world in Digital/Compaq/HP DCL (Digital Command Language)\r\n$ write sys$output \"Hello World\"\r\n"
  },
  {
    "id": 178,
    "name": "Delphi",
    "code": "\n// Hello World in Delphi\r\nProgram Hello_World;\r\n\r\n{$APPTYPE CONSOLE}\r\n\r\nBegin\r\n  WriteLn('Hello World');\r\nEnd.\r\n"
  },
  {
    "id": 179,
    "name": "Dialect",
    "code": "\n# Hello World in Dialect\r\n\r\nprint \"Hello World\"\r\n"
  },
  {
    "id": 180,
    "name": "DM",
    "code": "\n// Hello World in DM (Dream Maker)\r\n\r\nmob\r\n    Login()\r\n        ..()\r\n\r\n        world << \"Hello World!\"\r\n"
  },
  {
    "id": 181,
    "name": "DML",
    "code": "\n! Hello World in DML (Gembase database language)\r\n\r\nPROCEDURE_FORM MAIN\r\n        PRINT/NOWAIT (\"Hello world\")\r\nEND_FORM\r\n"
  },
  {
    "id": 182,
    "name": "Draco",
    "code": "/* Hello world in Draco */\n\nproc main()void:\n    writeln(\"Hello world!\");\ncorp;"
  },
  { "id": 183, "name": "DWIM", "code": "DWIM" },
  {
    "id": 184,
    "name": "Dylan",
    "code": "\nmodule:\t\t\thello-world\nauthor:\t\t\tHomer\ncopyright:\t\t(c) 1994 Homer\nversion:\t\t1.0\n\n// Hello World in DYLAN\n\ndefine method main (#rest args)\n  princ(\"Hello world!\");\nend;\n\nmain();\n"
  },
  {
    "id": 185,
    "name": "DynaMorph",
    "code": "\n<<!! Hello World in DynaMorph >>\r\n<#setString foo {Hello World!}#>\r\n<html>\r\n<head>\r\n\t<title>DynaMorph</title>\r\n</head>\r\n<body>\r\n<#getString foo#>\r\n</body>\r\n</html>\r\n"
  },
  {
    "id": 187,
    "name": "easm",
    "code": "\n// Hello World in easm (Win32).\r\n\r\nsubsystem cui\r\n\r\nsection imports\r\n\r\n    from msvcr70.dll import printf\r\n    from kernel32.dll import ExitProcess\r\n\r\nsection data\r\n\r\n    string pszOutput = \"Hello World!\"\r\n\r\nsection code\r\n\r\n    call printf (&pszOutput)\r\n    call ExitProcess (00h)\r\n"
  },
  {
    "id": 188,
    "name": "Ecstasy",
    "code": "// Hello world in Ecstasy\n\nmodule HelloWorld\n    {\n    void run()\n        {\n        @Inject Console console;\n        console.println(\"Hello World!\");\n        }\n    }"
  },
  {
    "id": 189,
    "name": "Ecstatic",
    "code": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  },
  {
    "id": 190,
    "name": "Eiffel",
    "code": "\nnote \"Hello World in Eiffel\"\nclass HELLO\ncreate run\nfeature run\n       do\n               print (\"Hello World!%N\")\n       end\nend\n"
  },
  {
    "id": 191,
    "name": "Elan",
    "code": "\n(* Hello World in ELAN *)\n\nputline (\"Hello World!\");\n"
  },
  {
    "id": 192,
    "name": "ELENA 3.0",
    "code": "// Hello world in ELENA 3.0\n\nprogram =\n[\n    console writeLine:\"Hello world!\".\n]."
  },
  {
    "id": 193,
    "name": "ELENA 4.0",
    "code": "// Hello world in ELENA 4.0\n\npublic program()\n{\n    console.writeLine(\"Hello world!\")\n}\n"
  },
  {
    "id": 194,
    "name": "Elixir",
    "code": "# Hello world in Elixir\n\ndefmodule HelloWorld do\n  IO.puts \"Hello, World!\"\nend"
  },
  {
    "id": 195,
    "name": "Elliott",
    "code": "\n:: Hello World in Elliott Autocode\r\nSETF PUNCH\r\nSETR 1\r\n1)TELEPRINTER\r\nLINE\r\nTITLE Hello World.;\r\nSTOP\r\nSTART 1\r\n"
  },
  {
    "id": 196,
    "name": "Elm",
    "code": "-- Hello world in Elm\n\nimport Text\n\nmain = Text.plainText \"Hello, world!\""
  },
  {
    "id": 197,
    "name": "Emojicode",
    "code": "👴 Hello world in Emojicode\n\n🐇 🐼 🍇\n  🐇🐖 🏁 ➡️ 🚂 🍇\n    😀 🔤Hello world!🔤\n    🍎 0\n  🍉\n🍉"
  },
  {
    "id": 198,
    "name": "Emoticon",
    "code": "** Hello world in Emoticon **\n\nhello world :-Q S:-P :-Q"
  },
  {
    "id": 199,
    "name": "EOS 2",
    "code": "// Hello world in EOS 2\n\nFenster:Fenster\nText:Textfeld\n\nFenster.zeichne(Text)\nText.zeileHinzufügen(\"Hello, World!\")\n"
  },
  {
    "id": 200,
    "name": "Erlang",
    "code": "\n%% Hello World in Erlang\n\n-module(hello).\n\n-export([hello/0]).\n\nhello() ->\n   io:format(\"Hello World!~n\", []).\n"
  },
  {
    "id": 201,
    "name": "ERRE",
    "code": "! Hello world in ERRE\n\nPROGRAM HELLO\nBEGIN\n  PRINT(\"Hello World!\")\nEND PROGRAM"
  },
  {
    "id": 202,
    "name": "Eta",
    "code": "-- Hello world in Eta\n\nmain = putStrLn $ \"Hello World!\""
  },
  {
    "id": 203,
    "name": "Euphoria",
    "code": "\n-- Hello World in Euphoria\n\nputs(1, \"Hello World!\\n\")\n"
  },
  {
    "id": 204,
    "name": "Eve",
    "code": "# Hello world in Eve\n\nbind @browser\n  [tag: \"div\", text: \"Hello, world\"]"
  },
  {
    "id": 205,
    "name": "Ezhil",
    "code": "# Hello world in Ezhil\n\nபதிப்பி \"வணக்கம்!\"\nபதிப்பி \"உலகே வணக்கம்\"\nபதிப்பி \"******* நன்றி!. *******\"\nexit()"
  },
  {
    "id": 206,
    "name": "F#",
    "code": "(* Hello World in F# *)\r\n\r\nprintf \"Hello World!\\n\""
  },
  {
    "id": 207,
    "name": "F",
    "code": "! Hello world in F\n\nprogram hello\n   print *, \"Hello world!\"\nend program hello"
  },
  {
    "id": 208,
    "name": "Falcon",
    "code": "// Hello World in Falcon\r\n\r\n> \"Hello World!\""
  },
  {
    "id": 209,
    "name": "FALSE",
    "code": "{ Hello World in FALSE }\r\n\"Hello world!\r\n\"\r\n"
  },
  {
    "id": 210,
    "name": "Felix",
    "code": "// Hello world in Felix\n\nprintln$ \"Hello World\";"
  },
  {
    "id": 211,
    "name": "Fennel",
    "code": "// Hello world in Fennel\n\n(print \"Hello world!\")"
  },
  {
    "id": 212,
    "name": "Ferite",
    "code": "\n/**\r\n *   start script -- Hello world in Ferite ( www.ferite.org )\r\n */\r\nuses \"console\";\r\nConsole.println(\"Hello World\");\r\n/* end script */\r\n"
  },
  {
    "id": 213,
    "name": "Fetlang",
    "code": "(Hello world in Fetlang)\n\nMake slave scream \"Hello World!\""
  },
  {
    "id": 214,
    "name": "Filemaker",
    "code": "\n#Hello World in Filemaker Script\r\nShow Custom Dialog [\"Hello World\" ; \"Hello World\"]\r\n"
  },
  {
    "id": 215,
    "name": "Fjölnir",
    "code": ";; Hello World in Fjölnir (Icelandic programming language)\r\n\r\n\"hello\" < main\r\n{\r\n   main ->\r\n   stef(;)\r\n   stofn\r\n       skrifastreng(;\"Halló Veröld!\"),\r\n   stofnlok\r\n}\r\n*\r\n\"GRUNNUR\"\r\n;"
  },
  {
    "id": 216,
    "name": "Flaming Thunder",
    "code": "\n# Write \"Hello world\" in Flaming Thunder.\r\n\r\nWrite \"Hello world\".\r\n"
  },
  {
    "id": 217,
    "name": "Focal",
    "code": "\n1.01 COMMENT HELLO WORLD IN FOCAL\r\n1.02 TYPE \"HELLO WORLD\", !\r\n1.03 QUIT\r\n"
  },
  {
    "id": 218,
    "name": "FOCUS",
    "code": "\n-* Hello World in FOCUS\r\n\r\n-TYPE Hello world\r\n"
  },
  {
    "id": 219,
    "name": "Forth",
    "code": "' Hello world in Forth\n\n.\" Hello World\" CR"
  },
  {
    "id": 220,
    "name": "Fortran",
    "code": "\nC     Hello World in Fortran\n\n      PROGRAM HELLO\n      WRITE (*,100)\n      STOP\n  100 FORMAT (' Hello World! ' /)\n      END\n"
  },
  {
    "id": 221,
    "name": "Fortran77",
    "code": "\nC     Hello World in Fortran 77\n\n      PROGRAM HELLO\n      PRINT*, 'Hello World!'\n      END\n"
  },
  {
    "id": 222,
    "name": "Fortran90",
    "code": "\n! Hello World in Fortran 90 and 95\r\n\r\nPROGRAM HelloWorld\r\n     WRITE(*,*)  \"Hello World!\"\r\nEND PROGRAM\r\n"
  },
  {
    "id": 223,
    "name": "FortranIV",
    "code": "\n       PROGRAM HELLO\nc\nC      Hello World in Fortran IV (supposedly for a TR440)\nc\n       WRITE (6,'('' Hello World!'')')\n       END\n"
  },
  {
    "id": 224,
    "name": "Fortress",
    "code": "\n(* Hello World in Fortress *)\r\n\r\nexport Executable\r\nrun(args) = print \"Hello, world!\"\r\n"
  },
  {
    "id": 225,
    "name": "FreeBASIC",
    "code": "\n'Hello World in FreeBASIC\r\n\r\nprint \"Hello World\"\r\n"
  },
  {
    "id": 226,
    "name": "Frink",
    "code": "\n// Hello World in Frink\r\n\r\nprintln[\"Hello World!\"]\r\n"
  },
  {
    "id": 227,
    "name": "G-code",
    "code": "\r\n%\r\nO1000\r\n(PROGRAM NAME - HELLOWORLD)\r\n(DATE=DD-MM-YY - 30-06-05 TIME=HH:MM - 19:37)\r\nN10G20\r\nN20G0G17G40G49G80G90\r\n/N30G91G28Z0.\r\n/N40G28X0.Y0.\r\n/N50G92X0.Y0.Z0.\r\n( 1/16 FLAT ENDMILL TOOL - 1 DIA. OFF. - 1 LEN. - 1 DIA. - .0625)\r\n(CONTOUR)\r\nN60T1M6\r\nN70G0G90X0.Y1.A0.S5000M3\r\nN80G43H1Z.5\r\nN90Z.25\r\nN100G1Z-.005F2.\r\nN110Y0.F20.\r\nN120G0Z.5\r\nN130X.5\r\nN140Z.25\r\nN150G1Z-.005F2.\r\nN160Y1.F20.\r\nN170G0Z.5\r\nN180Y.6106\r\nN190Z.25\r\nN200G1Z-.005F2.\r\nN210X0.F20.\r\nN220G0Z.5\r\nN230X.6157Y.4712\r\nN240Z.25\r\nN250G1Z-.005F2.\r\nN260X.6039Y.4135F20.\r\nN270X.6Y.351\r\nN280X1.1\r\nN290G3X1.0098Y.6202R.4333\r\nN300X.8941Y.6971R.2625\r\nN310X.7255Y.6538R.1837\r\nN320X.6157Y.4712R.332\r\nN330G0Z.5\r\nN340X.6Y.351\r\nN350Z.25\r\nN360G1Z-.005F2.\r\nN370X.6039Y.2885F20.\r\nN380G3X.7255Y.0481R.385\r\nN390X.9745R.1853\r\nN400X1.0843Y.2308R.332\r\nN410G0Z.5\r\nN420X1.2039Y0.\r\nN430Z.25\r\nN440G1Z-.005F2.\r\nN450Y1.F20.\r\nN460G0Z.5\r\nN470X1.3098\r\nN480Z.25\r\nN490G1Z-.005F2.\r\nN500Y0.F20.\r\nN510G0Z.5\r\nN520X1.4706Y.125\r\nN530Z.25\r\nN540G1Z-.005F2.\r\nN550X1.502Y.0817F20.\r\nN560G3X1.6176Y.0048R.2625\r\nN570X1.7863Y.0481R.1837\r\nN580X1.9118Y.351R.3957\r\nN590X1.8216Y.6202R.4333\r\nN600X1.7059Y.6971R.2625\r\nN610X1.5373Y.6538R.1837\r\nN620X1.4157Y.4135R.358\r\nN630X1.4706Y.125R.4611\r\nN640G0Z.5\r\nN650X1.9853Y0.\r\nN660Z.25\r\nN670G1Z-.005F2.\r\nN680X2.0422Y.1442F20.\r\nN690G0Z.5\r\nN700X2.5706Y1.\r\nN710Z.25\r\nN720G1Z-.005F2.\r\nN730X2.6961Y0.F20.\r\nN740X2.8216Y1.\r\nN750X2.9451Y0.\r\nN760X3.0706Y1.\r\nN770G0Z.5\r\nN780X3.2961Y.6538\r\nN790Z.25\r\nN800G1Z-.005F2.\r\nN810X3.2608Y.6202F20.\r\nN820G3X3.1745Y.2885R.4408\r\nN830X3.2961Y.0481R.385\r\nN840X3.5451R.1853\r\nN850X3.6706Y.351R.3957\r\nN860X3.5804Y.6202R.4333\r\nN870X3.4647Y.6971R.2625\r\nN880X3.2961Y.6538R.1837\r\nN890G0Z.5\r\nN900X3.7461Y.7019\r\nN910Z.25\r\nN920G1Z-.005F2.\r\nN930Y0.F20.\r\nN940G0Z.5\r\nN950Y.3654\r\nN960Z.25\r\nN970G1Z-.005F2.\r\nN980X3.7637Y.4663F20.\r\nN990G2X3.8422Y.6587R.4948\r\nN1000X3.9167Y.7019R.0929\r\nN1010G1X4.0755\r\nN1020G2X4.15Y.6587R.0929\r\nN1030X4.1951Y.5769R.246\r\nN1040G0Z.5\r\nN1050X4.3255Y1.\r\nN1060Z.25\r\nN1070G1Z-.005F2.\r\nN1080Y0.F20.\r\nN1090G0Z.5\r\nN1100X4.9275\r\nN1110Z.25\r\nN1120G1Z-.005F2.\r\nN1130Y1.F20.\r\nN1140G0Z.5\r\nN1150X5.0314\r\nN1160Z.25\r\nN1170G1Z-.005F2.\r\nN1180Y.2981F20.\r\nN1190G0Z.5\r\nN1200X4.9275Y.274\r\nN1210Z.25\r\nN1220G1Z-.005F2.\r\nN1230X4.8941Y.1731F20.\r\nN1240G2X4.7627Y.0192R.3255\r\nN1250X4.5529Y.0481R.1862\r\nN1260X4.4314Y.2885R.358\r\nN1270X4.5176Y.6202R.4408\r\nN1280X4.6333Y.6971R.2625\r\nN1290X4.802Y.6538R.1837\r\nN1300X4.8941Y.5288R.3457\r\nN1310G1X4.9275Y.4279\r\nN1320G0Z.5\r\nN1330X5.0314Y.149\r\nN1340Z.25\r\nN1350G1Z-.005F2.\r\nN1360Y0.F20.\r\nN1370G0Z.5\r\nN1380M5\r\nN1390G91G28Z0.\r\nN1400G28X0.Y0.A0.\r\nN1410M30\r\n%\r\n"
  },
  {
    "id": 228,
    "name": "Gambas",
    "code": "\n'************************************\r\n' Hello world in Gambas\r\n'************************************\r\nPUBLIC SUB Main()\r\n\r\n   PRINT \"Hello World\"\r\n\r\nEND\r\n"
  },
  {
    "id": 229,
    "name": "GameMonkey Script",
    "code": "\n// Hello World in GameMonkey Script\r\n\r\nprint(\"Hello World\");\r\n"
  },
  {
    "id": 230,
    "name": "Genero BDL",
    "code": "-- Hello world in Genero BDL\n\nmain\n   display \"hello world\"\nend main"
  },
  {
    "id": 231,
    "name": "Genie",
    "code": "// Hello world in Genie\n\ninit\n\tprint \"Hello world!\"\n"
  },
  {
    "id": 232,
    "name": "Gentee-simple",
    "code": "\n// Hello World in Gentee (simple version)\r\n\r\nfunc hello<main> : @\"Hello, World!\"\r\n"
  },
  {
    "id": 233,
    "name": "Gentee",
    "code": "\n// Hello World in Gentee\r\n\r\nfunc hello <main>\r\n{\r\n   print( \"Hello, World!\" )\r\n   getch()\r\n}\r\n"
  },
  {
    "id": 234,
    "name": "GLBasic",
    "code": "// Hello World in GLBasic\r\n\r\nPRINT \"Hello World\",1,1\r\nSHOWSCREEN\r\nMOUSEWAIT"
  },
  {
    "id": 235,
    "name": "GML",
    "code": "\n// Hello World in GML (Game Maker Language)\r\ndraw_text(10,10,\"Hello World\")\r\nscreen_refresh()\r\nkeyboard_wait()\r\n"
  },
  {
    "id": 236,
    "name": "Go",
    "code": "// Hello world in Go\r\n\r\npackage main\r\nimport \"fmt\"\r\nfunc main() {\r\n fmt.Printf(\"Hello World\\n\")\r\n}"
  },
  {
    "id": 237,
    "name": "Gofer",
    "code": "\n-- Hello World in Gofer\n-- Simple version\n\nhelloWorld:: String\nhelloWorld = \"Hello World!\\n\"\n\n\n-- Hello World in Gofer\n-- Dialog version\n\nhelloWorld :: Dialogue\nhelloWorld resps = [AppendChan stdout \"Hello world!\"]\n"
  },
  {
    "id": 238,
    "name": "GoogleGadgets",
    "code": "\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?> \r\n<!-- Hello World as a Google gadget -->\r\n\r\n<Module>\r\n  <ModulePrefs title=\"hello world example\" /> \r\n  <Content type=\"html\">\r\n     <![CDATA[ \r\n       Hello, world!\r\n     ]]>\r\n  </Content> \r\n</Module>\r\n"
  },
  {
    "id": 239,
    "name": "Gosu",
    "code": "// Hello world in Gosu\n\nprint ( \"Hello World!\" )"
  },
  {
    "id": 240,
    "name": "GRAMophone",
    "code": "\n//Hello World in GRAMophone\r\n\r\ncomposition \"Hello, World!\" of \"Composer\"\r\n{\r\n %\r\n player player1 {\r\n    grammar lindenmayer\r\n    %\r\n    axiom->print(\"Hello, World!\");\r\n }\r\n\r\n player player2 {\r\n    grammar chomsky\r\n    %\r\n       @composition->print(\"Hello, World!\");\r\n }\r\n}\r\n"
  },
  {
    "id": 241,
    "name": "Gravity",
    "code": "// Hello world in Gravity\n\nfunc main() {\n    System.print(\"Hello World!\");\n}\n"
  },
  {
    "id": 242,
    "name": "Gri",
    "code": "\n# Hello World in Gri\r\nshow \"hello world\"\r\n"
  },
  {
    "id": 243,
    "name": "Groovy",
    "code": "\n// Hello World in Groovy\r\n\r\nprintln \"Hello World\"\r\n"
  },
  {
    "id": 244,
    "name": "Guile",
    "code": "; Hello world in Guile\n\n(define do-hello (lambda () (display \"Hello world.\") (newline)))"
  },
  {
    "id": 245,
    "name": "GynkoSoft",
    "code": "\n; Hello World in GynkoSoft\n; Simple version\n0.00 Protocol \"Hello, World!\"\n\n\n; Hello World in GynkoSoft\n; Dialog box output\n0.00 Message \"Hello, World!\"\n"
  },
  {
    "id": 246,
    "name": "Hack",
    "code": "\n<?hh\n// Hello world in Hack\necho 'Hello World';"
  },
  {
    "id": 247,
    "name": "Harbour",
    "code": "// Hello world in Harbour\n\n? \"Hello World\""
  },
  {
    "id": 248,
    "name": "Haskell",
    "code": "\n-- Hello World in Haskell\r\n \r\nmain = putStrLn \"Hello World\"\r\n"
  },
  {
    "id": 249,
    "name": "Have",
    "code": "// Hello world in Have\n\nfunc main() {\n    print(\"Hello, world!\")\n}"
  },
  {
    "id": 250,
    "name": "Haxe",
    "code": "// Hello world in Haxe\n\nclass Hello {\n    static public function main() {\n        trace(\"Hello world!\");\n    }\n}"
  },
  {
    "id": 251,
    "name": "HDX",
    "code": "\n# Hello World as bdehaldia.exe external command\r\n\r\nproc hdx_info {} {\r\n  set ::Titel [TRA \"&Hello World\"]\r\n  set ::Menu GMA\r\n}\r\n\r\nproc hdx_run {} {\r\n  tk_messageBox -type ok -message [TRA \"Hello World!\"]\r\n  destroy .\r\n}\r\n"
  },
  {
    "id": 252,
    "name": "HolyC",
    "code": "// Hello World in HolyC, the language of TempleOS\n\n\"Hello world\";"
  },
  {
    "id": 253,
    "name": "Hoon",
    "code": ":: Hello world in Hoon\n\n!:(\"Hello World\")"
  },
  {
    "id": 254,
    "name": "HP-41C",
    "code": "\nHello World for the HP 41C. No comment character exists.\n\n01 LBL \"HELLO\"\n02 \"HELLO WORLD\"\n03 AVIEW\n"
  },
  {
    "id": 255,
    "name": "HP-48",
    "code": "\n<<\n@ Hello World for the HP-48\n@ << and >> are one char each\n\"HELLO WORLD\"\n>>\n"
  },
  {
    "id": 256,
    "name": "HQ9+",
    "code": "\nHello World in HQ9+ and HQ9++. No comment character exists.\r\n\r\nH\r\n"
  },
  {
    "id": 257,
    "name": "HTML",
    "code": "\n<HTML>\n<!-- Hello World in HTML -->\n<HEAD>\n<TITLE>Hello World!</TITLE>\n</HEAD>\n<BODY>\nHello World!\n</BODY>\n</HTML>\n"
  },
  {
    "id": 258,
    "name": "Hubot",
    "code": "# Hello world as a Hubot script\n\nmodule.exports = (robot) ->\n  robot.respond /hello/i, (msg) ->\n    msg.send 'Hello World!'"
  },
  {
    "id": 259,
    "name": "HyperTalk",
    "code": "\n-- Hello World in HyperTalk\r\n\r\nanswer \"Hello, world!\"\r\n"
  },
  {
    "id": 260,
    "name": "IBM-Exec",
    "code": "\nHello World for IBM EXEC (under VM/CMS)\r\n\r\n&CONTROL\r\n*\r\n&TYPE Hello World!\r\n*\r\n&EXIT 0\r\n"
  },
  {
    "id": 261,
    "name": "IBM-Exec2",
    "code": "\nHello World for IBM EXEC2 (under VM/CMS)\r\n\r\n&TRACE OFF\r\n*\r\n&TYPE Hello World!\r\n*\r\n&EXIT 0\r\n"
  },
  {
    "id": 262,
    "name": "ici",
    "code": "\n# Hello World in ici (http://www.zeta.org.au/~atrn/ici/)\nprintf(\"Hello World!\\n\");\n"
  },
  {
    "id": 263,
    "name": "ICL SCL",
    "code": "\n@ HELLO WORLD IN ICL SCL\r\nBEGIN\r\n    SEND_MESSAGE(\"HELLO WORLD\")\r\nEND\r\n"
  },
  {
    "id": 264,
    "name": "Icon",
    "code": "\n# Hello world in Icon (http://www.cs.arizona.edu/icon/)\n\nprocedure main()\n    write(\"Hello world\")\nend\n"
  },
  {
    "id": 265,
    "name": "IDC",
    "code": "\n// Hello World in IDC-script language for IDA disaasembler\r\n\r\n#include <idc.idc>\r\n\r\nstatic main(void)\r\n{\r\n  Message(\"Hello World!\");\r\n}\r\n"
  },
  {
    "id": 266,
    "name": "IDL",
    "code": "\nIDL> ; Hello World in IDL (Interactive Data Language)\r\nIDL> print, \"Hello World\"\r\n"
  },
  {
    "id": 267,
    "name": "Idris",
    "code": "-- Hello world in Idris\n\nmodule Main\n\nmain : IO ()\nmain = putStrLn \"Hello world\""
  },
  {
    "id": 268,
    "name": "Imba",
    "code": "// Hello world in Imba\n\nconsole.log \"hello world\"\n\n$$(body).append <h1> \"Hello world\""
  },
  {
    "id": 269,
    "name": "Inform",
    "code": "\n!  \"Hello world\" in Inform\r\n[ Main;\r\n  print \"Hello world^\";\r\n];\r\n"
  },
  {
    "id": 270,
    "name": "Informix 4GL",
    "code": "\n# Hello World in Informix 4GL\n\nMAIN\n\n  DISPLAY \"Hello World\"\n\nEND MAIN\n"
  },
  {
    "id": 271,
    "name": "Ingres ABF",
    "code": "\n/* Hello World in Ingres ABF */\r\nprocedure hello =\r\nbegin\r\n  message 'Hello, World' with style=popup;\r\nend\r\n"
  },
  {
    "id": 272,
    "name": "InstallScript",
    "code": "\n// Hello World in InstallScript\n// (Scripting language of InstallShield, a Windows install generator)\n\nprogram\n\tMessageBox(\"Hello World!\",INFORMATION);\nendprogram\n"
  },
  {
    "id": 273,
    "name": "Intercal",
    "code": "Hello World in Intercal\n\nDO ,1 <- #13\nPLEASE DO ,1 SUB #1 <- #234\nDO ,1 SUB #2 <- #112\nDO ,1 SUB #3 <- #112\nDO ,1 SUB #4 <- #0\nDO ,1 SUB #5 <- #64\nDO ,1 SUB #6 <- #194\nDO ,1 SUB #7 <- #48\nPLEASE DO ,1 SUB #8 <- #22\nDO ,1 SUB #9 <- #248\nDO ,1 SUB #10 <- #168\nDO ,1 SUB #11 <- #24\nDO ,1 SUB #12 <- #16\nDO ,1 SUB #13 <- #214\nPLEASE READ OUT ,1\nPLEASE GIVE UP"
  },
  {
    "id": 274,
    "name": "Io",
    "code": "\n// Hello World in io programming language\r\n\"Hello world!\" print\r\n"
  },
  {
    "id": 275,
    "name": "Iptscrae",
    "code": "\n; Hello World in Iptscrae.\r\n; 1. from the chat prompt:\r\n\r\n/ \"Hello World!\" SAY\r\n\r\n; 2. in a cyborg:\r\n\r\nON OUTCHAT {\r\n    {  \"Hello World!\" SAY\r\n    } CHATSTR \"say it\" == IF\r\n}\r\n\r\n; 3. in a room script:\r\n\r\nON SELECT {\r\n    \"Hello World!\" SAY\r\n}\r\n"
  },
  {
    "id": 276,
    "name": "J",
    "code": "NB. Hello World in J\r\n'Hello World' 1!:2(2)"
  },
  {
    "id": 277,
    "name": "Jade",
    "code": "// Hello World in JADE\r\nwrite \"Hello World\";"
  },
  {
    "id": 278,
    "name": "Jako",
    "code": "\n# Hello World in Jako\r\n\r\nuse sys;\r\n\r\nsys::print(\"Hello, world!\\n\");\r\n"
  },
  {
    "id": 279,
    "name": "Janet",
    "code": "# Hello world in Janet\n\n(print \"hello, world!\")"
  },
  {
    "id": 280,
    "name": "Jason",
    "code": "// Hello World in Jason\r\n\r\n!greeting.\r\n+!greeting : true <- .print(\"Hello World\")."
  },
  {
    "id": 281,
    "name": "Java",
    "code": "\n// Hello World in Java\n\nclass HelloWorld {\n  static public void main( String args[] ) {\n    System.out.println( \"Hello World!\" );\n  }\n}\n"
  },
  {
    "id": 282,
    "name": "Java (Mobile)",
    "code": "\n// Hello World on a mobile Java device\r\n\r\npackage helloworld;\r\n\r\nimport javax.microedition.midlet.*;\r\nimport javax.microedition.lcdui.*;\r\n\r\npublic class HelloWorld extends MIDlet {\r\n\r\n  public HelloWorld()\r\n  {\r\n    Form form = new Form(\"Hello World\");\r\n    form.append(\"Hello world!\");\r\n    Display.getDisplay(this).setCurrent(form);\r\n  }\r\n\r\n  protected void pauseApp() {  }\r\n  protected void startApp() throws\r\n    javax.microedition.midlet.MIDletStateChangeException {  }\r\n  protected void destroyApp(boolean parm1) throws\r\n    javax.microedition.midlet.MIDletStateChangeException {  }\r\n}\r\n"
  },
  {
    "id": 283,
    "name": "Java (Servlet)",
    "code": "\nimport javax.servlet.*;\r\nimport javax.servlet.http.*;\r\nimport java.io.*;\r\n\r\n//\r\n// Hello World Java Servlet\r\n//\r\npublic class HelloWorld extends HttpServlet {\r\npublic void service(HttpServletRequest request,\r\nHttpServletResponse response)\r\nthrows IOException {\r\n\r\nresponse.setContentType(\"text/html\");\r\nPrintWriter out = response.getWriter();\r\n\r\nout.println(\"<html><body>\");\r\nout.println(\"Hello World!\");\r\nout.println(\"</body></html>\");\r\n}\r\n}\r\n"
  },
  {
    "id": 284,
    "name": "Java (Swing)",
    "code": "\n// Hello World in Java using Swing GUI\r\n\r\nclass HelloWorldSwing {\r\n  static public void main(String args[]) {\r\n    javax.swing.JOptionPane.showMessageDialog(null,\"Hello world!\");\r\n  }\r\n}\r\n"
  },
  {
    "id": 285,
    "name": "Java Server Pages",
    "code": "\n<!-- Hello World for Java Server Pages -->\r\n\r\n<%@ page language='java' %>\r\n<%=\"Hello World!\" %>\r\n"
  },
  {
    "id": 286,
    "name": "JavaScript",
    "code": "// Hello world in JavaScript\n\nconsole.log(\"Hello World\");"
  },
  {
    "id": 287,
    "name": "JCL",
    "code": "\n//HERIB    JOB  ,'HERIBERT OTTEN',PRTY=12\n//* HELLO WORLD FOR MVS            \n //HALLO    EXEC PGM=IEBGENER       \n //SYSIN    DD DUMMY                \n //SYSPRINT DD SYSOUT=*             \n //SYSUT2   DD SYSOUT=T             \n //SYSUT1   DD *                    \n HELLO WORLD!                       \n /*                                 \n //    \n"
  },
  {
    "id": 288,
    "name": "Jess",
    "code": "; Hello World in JESS\r\n\r\n(printout t \"Hello World\")"
  },
  {
    "id": 289,
    "name": "Jorf",
    "code": "| Hello world in Jorf\n\nHello:Start\n  Msg:Add(\"Hello\", \"Ok\")\n    Hello World!\n  Return"
  },
  {
    "id": 290,
    "name": "JSFuck",
    "code": "// Hello world in JSFuck\n\n[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+(!+[]+!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]])+[])+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+[[]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]([[]])+[]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(+(!+[]+!+[]+!+[]+[!+[]+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]])+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([][[]]+[])[!+[]+!+[]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+(!+[]+!+[]+[+!+[]])+[])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+[!+[]+!+[]+!+[]]+(+(+!+[]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+[]])))()"
  },
  {
    "id": 291,
    "name": "JudoScript",
    "code": "\n// Hello World in JudoScript (a Java scripting layer)\r\n\r\n. \"Hello World\";\r\n"
  },
  {
    "id": 292,
    "name": "Julia",
    "code": "# Hello world in Julia\n\nprintln(\"Hello, World!\")"
  },
  { "id": 293, "name": "K", "code": "/ Hello world in K\n\n\"Hello world!\"" },
  {
    "id": 294,
    "name": "K3",
    "code": "/ Hello World in K3\r\n\r\n`0:\"Hello World!\\n"
  },
  {
    "id": 295,
    "name": "K4",
    "code": "/ Hello World in K4/Q/KDB\r\n\r\n1\"Hello World\\n\""
  },
  {
    "id": 296,
    "name": "K5",
    "code": "/ Hello World in K5\r\n\r\n1'\"Hello World\\n\""
  },
  {
    "id": 297,
    "name": "Kitten",
    "code": "// Hello world in Kitten\n\n\"Hello World!\" say"
  },
  {
    "id": 298,
    "name": "Kix",
    "code": "; Hello World in Kix\r\n  \r\nRun( \"Notepad.exe\" )\r\nSleep 1\r\nSetFocus( \"Untitled - Notepad\" )\r\n$ReturnCode = SendKeys(\"Hello World\")\r\nSleep( 2 )\r\n$ReturnCode = SendKeys(\"~{F4}Y\")"
  },
  {
    "id": 299,
    "name": "Kotlin",
    "code": "// Hello world in Kotlin\n\nfun main(args : Array<String>) {\n    println(\"Hello, world!\")\n}"
  },
  {
    "id": 300,
    "name": "Kumir",
    "code": "алг\nнач\n             вывод “Hello world”\nкон"
  },
  {
    "id": 301,
    "name": "Kylix",
    "code": "\n{Hello World in Kylix} \r\n\r\nprogram Hello_World;\r\n \r\n uses\r\n    QDialogs;\r\n \r\n begin\r\n   ShowMessage('Hello World');\r\n end.\r\n"
  },
  {
    "id": 302,
    "name": "LÖVE",
    "code": "-- Hello world in LÖVE\n\nfunction love.draw()\n    love.graphics.print('Hello World!', 400, 300)\nend"
  },
  {
    "id": 303,
    "name": "L",
    "code": "// Hello World in L\r\n\r\nnamespace Hello is\r\n    class Main is\r\n        void init is()\r\n            IO.Std.out.println(\"Hello World!\");\r\n        end\r\n    end\r\nend"
  },
  {
    "id": 304,
    "name": "L33t",
    "code": "// Hello world in L33t\n\nGr34t l33tN3$$?\nM3h...\niT 41n't s0 7rIckY.\n\nl33t sP33k is U8er keWl 4nD eA5y wehn u 7hink 1t tHr0uGh.\n1f u w4nn4be UB3R-l33t u d3f1n1t3lY w4nt in 0n a b4d4sS h4xX0r1ng s1tE!!! ;p\nw4r3Z c0ll3cT10n2 r 7eh l3Et3r!\n\nQu4k3 cL4nS r 7eh bE5t tH1ng 1n teh 3nTIr3 w0rlD!!!\ng4m3s wh3r3 u g3t to 5h00t ppl r 70tAl1_y w1cK1d!!\nI'M teh fr4GM4stEr aN I'lL t0t41_1Ly wIpE teh phr34k1ng fL00r ***j3d1 5tYlE*** wItH y0uR h1dE!!!! L0L0L0L!\nt3lEphR4gG1nG l4m3rs wit mY m8tes r34lLy k1kK$ A$$\n\nl33t hAxX0r$ CrE4t3 u8er- k3wL 5tUff lIkE n34t pR0gR4mm1nG lAnguidGe$...\ns0m3tIm3$ teh l4nGu4gES l00k jUst l1k3 rE41_ 0neS 7o mAkE ppl Th1nk th3y'r3 ju$t n0rMal lEE7 5pEEk but th3y're 5ecRetLy c0dE!!!!\nn080DY unDer5tAnD$ l33t SpEaK 4p4rT fr0m j3d1!!!!!\n50mE kId 0n A me$$4gEb04rD m1ghT 8E a r0xX0r1nG hAxX0r wH0 w4nT2 t0 bR34k 5tuFf, 0r mAyb3 ju5t sh0w 7eh wAy5 l33t ppl cAn 8E m0re lIkE y0d4!!! hE i5 teh u8ER!!!!\n1t m1ght 8E 5omE v1rus 0r a Pl4ySt4tI0n ch34t c0dE.\n1t 3v3n MiTe jUs7 s4y \"H3LL0 W0RLD!!!\" u ju5t cAn'T gu3s5.\ntH3r3's n3v3r anY p0iNt l00KiNg sC3pT1c4l c0s th4t, be1_1Ev3 iT 0r n0t, 1s whAt th1s 1s!!!!!\n\n5uxX0r5!!!L0L0L0L0L!!!!!!!"
  },
  {
    "id": 305,
    "name": "Lasso",
    "code": "// Hello world in Lasso\n\nHello world!"
  },
  {
    "id": 306,
    "name": "LaTeX",
    "code": "\n% Hello World! in LaTeX\r\n\\documentclass{article}\r\n\\begin{document}\r\nHello World!\r\n\\end{document}\r\n"
  },
  {
    "id": 307,
    "name": "Latino",
    "code": "# Hello world in Latino\n\nescribir(\"Hello World!\")"
  },
  {
    "id": 309,
    "name": "Lily",
    "code": "# Hello world in Lily\n\nprint(\"Hello World\")"
  },
  {
    "id": 310,
    "name": "LilyPond",
    "code": "\n% Hello World in LilyPond\r\n\r\n\\markup { Hello World! }\r\n"
  },
  {
    "id": 311,
    "name": "Limbo",
    "code": "\nHello World in Limbo.\nLimbo is the programming language of the Inferno OS\n(from Lucent Bell Labs).\n\n\nimplement Cmd;\n\ninclude \"sys.m\";\ninclude \"draw.m\";\n\nCmd : module {\n    init : fn (ctxt : ref Draw->Context, args : list of string);\n};\n\ninit(nil : ref Draw->Context, nil : list of string)\n{\n    sys := load Sys Sys->PATH;\n    sys->print(\"Hello World\\n\");\n}\n"
  },
  {
    "id": 312,
    "name": "LIMS Basic",
    "code": "\n'Hello World in LIMS Basic\r\nmsgbox(\"hello world\")\r\n"
  },
  {
    "id": 313,
    "name": "Lingo",
    "code": "\nHello World in Lingo (Macromedia Director)\r\n\r\non startmovie\r\n  alert \"Hello World\" \r\nend\r\n"
  },
  {
    "id": 314,
    "name": "Linotte",
    "code": "// Hello World in Linotte\r\n\r\nBonjourLeMonde:\r\n   début\r\n     affiche \"Hello World!\""
  },
  {
    "id": 315,
    "name": "Lisaac",
    "code": "// Hello World in Lisaac\r\nSection Header\r\n\r\n  + name        := HELLO_WORLD;\r\n\r\nSection Inherit\r\n\r\n  - parent_object:OBJECT := OBJECT;\r\n\r\nSection Public\r\n\r\n  - main <-\r\n  (\r\n    \"Hello world !\\n\".print;\r\n  );"
  },
  {
    "id": 316,
    "name": "Lisp-Emacs",
    "code": "\n;;; Hello World in Emacs Lisp.\r\n\r\n(defun hello-world()\r\n  \"Display the string hello world.\"\r\n  (interactive)\r\n  (message \"hello world\"))\r\n"
  },
  {
    "id": 317,
    "name": "LiveCode",
    "code": "-- Hello world in LiveCode (formerly called Revolution, formerly called Transcript)\n\nanswer \"Hello World!\""
  },
  {
    "id": 318,
    "name": "LLVM",
    "code": "; Hello world in LLVM Assembly\n\n@.str = internal constant [14 x i8] c\"hello, world\\0A\\00\"\n\ndeclare i32 @printf(i8*, ...)\n\ndefine i32 @main(i32 %argc, i8** %argv) nounwind {\nentry:\n    %tmp1 = getelementptr [14 x i8]* @.str, i32 0, i32 0\n    %tmp2 = call i32 (i8*, ...)* @printf( i8* %tmp1 ) nounwind\n    ret i32 0\n}"
  },
  {
    "id": 319,
    "name": "Logo",
    "code": "\n; Hello World in Logo\n\nDRUCKEZEILE [Hello World!]\n"
  },
  {
    "id": 320,
    "name": "Logo (graphical)",
    "code": "\n; Hello World in LOGO, graphical output.\r\n\r\ngo 20 , left 180,\r\ngo 40 , left 180,\r\ngo 20 , right 90,\r\ngo 20 , left 90 ,\r\ngo 20 , left 180,\r\ngo 40 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , right 90 ,\r\ngo 20 , right 90 ,\r\ngo 10 , right 90 ,\r\ngo 20 , left 90 ,\r\ngo 10 , left 90 ,\r\ngo 30 , left 90 ,\r\ngo 40 , left 180,\r\ngo 40 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 40 , left 180,\r\ngo 40 , left 90 ,\r\ngo 40 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 60 , left 90 ,\r\ngo 40 , left 180,\r\ngo 40 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 180,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 40 , left 180,\r\ngo 40 , left 90 ,\r\ngo 40 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 40 , left 90 ,\r\ngo 20 , right 90,\r\ngo 20 , right 90,\r\ngo 5 , left 90  ,\r\ngo 5 , left 90  ,\r\ngo 25 , left 180,\r\ngo 40 , left 90 ,\r\ngo 40 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 20 , left 90 ,\r\ngo 40 , left 180,\r\ngo 40 ,\r\n"
  },
  {
    "id": 321,
    "name": "LOLCODE",
    "code": "BTW Hello world in LOLCODE\nHAI 1.2\nCAN HAS STDIO?\nVISIBLE \"HAI WORLD!!!1!\"\nKTHXBYE\n"
  },
  {
    "id": 322,
    "name": "Loli",
    "code": "# Hello world in Loli\n\nsayln(\"Hello, world!\")"
  },
  {
    "id": 323,
    "name": "LOTOS",
    "code": "\n(* Hello World in LOTOS (Language Of Temporal Ordering Specifications) *)\r\n \r\nprocess HelloWorld [v]: exit :=\r\n  v! \"Hello World!\";\r\n  exit\r\nendproc\r\n"
  },
  {
    "id": 324,
    "name": "Lotus Note Formula",
    "code": "\nREM \"Lotus Note Formula Language\";\r\n@Prompt([ok];\"Hi there\";\"Hello World\");\r\n"
  },
  {
    "id": 325,
    "name": "Lotus Script",
    "code": "\n' Hello World in Lotus Script\r\nSub Initialize\r\n        Msgbox \"Hello world\", 0, \"Hi there!\"\r\nEnd Sub\r\n"
  },
  {
    "id": 326,
    "name": "LPC",
    "code": "// Hello World in LPC\r\n\r\nvoid create()\r\n{\r\n       message(\"info\",\"Hello World!\",this_user());\r\n}"
  },
  {
    "id": 327,
    "name": "LS-DYNA",
    "code": "\n$ \"Hello World\" for LS-DYNA\n*KEYWORD\n*PART\n                                                                                \n         1         1         1\n*SECTION_BEAM\n         1         1       1.0         2         1\n       1.0       1.0       0.0       0.0         1         1\n*MAT_ELASTIC\n         1    1.0E-9    1000.0       0.3\n*ELEMENT_BEAM\n       1       1       2       3       1\n       2       1       3       4       1\n       3       1       3       6       1\n       4       1       6       5       1\n       5       1       8      11       1\n       6       1      11      12       1\n       7       1      12       9       1\n       8       1       9       8       1\n       9       1       8       7       1\n      10       1       7      10       1\n      11       1      14      16       1\n      12       1      16      15       1\n      13       1      13      15       1\n      14       1      15      17       1\n      15       1      19      21       1\n      16       1      21      20       1\n      17       1      18      20       1\n      18       1      20      22       1\n      19       1      23      24       1\n      20       1      24      26       1\n      21       1      26      25       1\n      22       1      25      23       1\n      23       1      27      28       1\n      24       1      28      29       1\n      25       1      29      30       1\n      26       1      30      31       1\n      27       1      32      33       1\n      28       1      33      35       1\n      29       1      35      34       1\n      30       1      34      32       1\n      31       1      36      37       1\n      32       1      37      38       1\n      33       1      40      42       1\n      34       1      42      41       1\n      35       1      39      41       1\n      36       1      41      43       1\n      37       1      44      45       1\n      38       1      45      47       1\n      39       1      48      47       1\n      40       1      47      46       1\n      41       1      46      44       1\n*NODE\n       1             0.0             0.0             1.0\n       2\n       3             0.0             2.0\n       4             0.0             4.0\n       5             2.0\n       6             2.0             2.0\n       7             3.0\n       8             3.0             1.0\n       9             3.0             2.0\n      10             5.0\n      11             5.0             1.0\n      12             5.0             2.0\n      13             6.0\n      14             6.0             4.0\n      15             7.0\n      16             7.0             4.0\n      17             8.0\n      18             9.0\n      19             9.0             4.0\n      20            10.0\n      21            10.0             4.0\n      22            11.0\n      23            12.0\n      24            12.0             2.0\n      25            14.0\n      26            14.0             2.0\n      27            16.0             2.0\n      28            16.5\n      29            17.0             1.0\n      30            17.5\n      31            18.0             2.0\n      32            19.0\n      33            19.0             2.0\n      34            21.0\n      35            21.0             2.0\n      36            22.0\n      37            22.0             2.0\n      38            24.0             2.0\n      39            25.0\n      40            25.0             4.0\n      41            26.0\n      42            26.0             4.0\n      43            27.0\n      44            28.0\n      45            28.0             2.0\n      46            30.0\n      47            30.0             2.0\n      48            30.0             4.0\n*END\n"
  },
  {
    "id": 328,
    "name": "LSL",
    "code": "\n// Hello World in Linden Scripting Language (LSL)\r\n\r\ndefault\r\n{\r\n    state_entry()\r\n    {\r\n        llSay(0, \"Hello World\");\r\n    }\r\n}\r\n"
  },
  {
    "id": 329,
    "name": "Lua",
    "code": "\n# Hello World in Lua\r\n\r\nprint \"Hello world\"\r\n"
  },
  {
    "id": 330,
    "name": "m4",
    "code": "\n# Hello World for the m4 macro processor\r\nHello\r\n"
  },
  {
    "id": 331,
    "name": "MACRO-10",
    "code": "\nTITLE HELLO WORLD\r\n; HELLO WORLD IN MACRO 10 FOR TOPS-10\r\nENTRY OUTPUT\r\nSEARCH UUOSYM\r\n\r\nLAB:    ASCIZ /HELLO WORLD\r\n/\r\nOUTPUT: OUTSTR LAB              ; OUTPUT MESSAGE\r\n        MONRT.                  ; RETURN TO MONITOR          \r\n        END OUTPUT\r\n"
  },
  {
    "id": 332,
    "name": "MACRO-11",
    "code": "\n;       \"Hello, world!\" in MACRO-11 for RT-11\r\n\r\n        .MCALL  .EXIT,.PRINT\r\nSTART:  .PRINT  #$1\r\n        .EXIT\r\n$1:     .ASCIZ  /Hello, world!/\r\n        .END    START\r\n"
  },
  {
    "id": 333,
    "name": "Macromedia-Flex",
    "code": "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<mx:Application xmlns:mx=\"http://www.macromedia.com/2003/mxml\">\r\n     <!-- Hello Word in Macromedia Flex -->\r\n     <mx:Label text=\"Hello World\"/>\r\n</mx:Application>\r\n"
  },
  {
    "id": 334,
    "name": "MAD",
    "code": "         R Hello world in MAD\n\nPRINT FORMAT HELLOW\nVECTOR VALUES HELLOW=$13h0Hello, world*$\nEND OF PROGRAM"
  },
  {
    "id": 335,
    "name": "make",
    "code": "# Hello world as a makefile\n\nall:\n    @echo \"Hello world!\""
  },
  {
    "id": 336,
    "name": "Malbolge",
    "code": "\nHello World in Malbolge. No comment character exists.\r\n\r\n(=<`$9]7<5YXz7wT.3,+O/o'K%$H\"'~D|#z@b=`{^Lx8%$Xmrkpohm-kNi;gsedcba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?>=<;:9876543s+O<oLm\r\n"
  },
  {
    "id": 337,
    "name": "MAMASH",
    "code": "\n/* Hello World in MAMASH */\r\n\r\nTQWD LGYEA NXKIA HELLO_WORLD )1(\r\n \r\nDWLH CXBZ_YKX\r\n \r\nID& HELLO_WORLD YED 'HELLO WORLD' .\r\n"
  },
  {
    "id": 338,
    "name": "Maple",
    "code": "\n# Hello World in Maple\r\n\r\n>> printf(\"Hello World!\");\r\n"
  },
  {
    "id": 339,
    "name": "Marmelade",
    "code": "/ Hello world in Marmelade\n\nsayln \"Hello, world!\""
  },
  {
    "id": 340,
    "name": "Mathematica",
    "code": "(* Hello world in Mathematica *)\n\nPrint[\"Hello, World!\"]\n"
  },
  {
    "id": 341,
    "name": "MATLAB",
    "code": "\n% Hello World in MATLAB.\r\n\r\ndisp('Hello World');\r\n"
  },
  {
    "id": 342,
    "name": "Matrix",
    "code": "| Hello world in Matrix\n \nSystem:Hello_World\n \n    Type\n        BaseType\n            String\n                Text : 12\n \n    Matrix:Model:Application\n        Silo:M1:Software_Application\n            Realm:Analysis_Of_Application\n                Domain:Friend\n                    Entity:Greeting\n                        State\n                            Dataset:Hail\n                                Text : Message\n                            DynamicDataState:Display:Hail\n                                StateAction\n                                    Template\n                                        <<|>><<#Message>>\n                                        <<:>>\n                                Transition\n                                    EventState\n                                        Wave -> Display\n \n        Silo:M0:Real_World_Objects\n            RealmObject:Objects_Of_Application\n                DomainObject:Friend\n                    EntityObject:Greeting\n                        Object\n                            | Identity | State\n                            ID001      : Display\n                        ObjectEvent\n                            | Identity | Event | Message\n                            ID001      : Wave  : \"Hello World!\""
  },
  {
    "id": 343,
    "name": "Maxima",
    "code": "/*  Hello World in Maxima */\r\n\r\ndisp(\"hello, world\");"
  },
  {
    "id": 344,
    "name": "MAXScript",
    "code": "\n/*Hello World in MAXScript (the script language of 3ds Max).\r\nHello World is both printed as text and in full 3D.*/\r\n\r\nPrint \"Hello World\"\r\nText text:\"Hello World\"\r\n"
  },
  {
    "id": 345,
    "name": "MCSBL",
    "code": "; Hello world in MCSBL\n\n\"Hello, world!\" println"
  },
  {
    "id": 346,
    "name": "MDM Zinc",
    "code": "// Hello world in MDM Zinc\n\nmdm.Dialogs.prompt(\"Hello World\");\nmdm.Application.exit();"
  },
  {
    "id": 347,
    "name": "MEL",
    "code": "\n// Hello World in MEL scripting language for Alias Maya\r\n\r\nproc helloWorld () {\r\n   print \"Hello World!\\n\";\r\n}\r\n\r\nhelloWorld;\r\n"
  },
  {
    "id": 348,
    "name": "MetaPost",
    "code": "% Hello World in MetaPost\r\nbeginfig(0);\r\n  label(\"Hello, world!\", (10,10));\r\nendfig;\r\n"
  },
  {
    "id": 349,
    "name": "MEX",
    "code": "// \"Hello, World!\" in MEX for Maximus BBS\r\n\r\nvoid main()\r\n{\r\n  print(COLOR_WHITE,\"Hello, World!\\n\");\r\n}"
  },
  {
    "id": 350,
    "name": "Microtik",
    "code": "\n#Hello World in Mikrotik RouterOS Scripting Host; :put (\"Hello, World!\");\r\n"
  },
  {
    "id": 351,
    "name": "MiniScript",
    "code": "// Hello world in MiniScript\n\nprint \"Hello world!\"\n"
  },
  {
    "id": 352,
    "name": "mIRC-Alias",
    "code": "\n;Hello World for mIRC (alias section)\r\n\r\nhelloworld: /echo -a Hello World!\r\n"
  },
  {
    "id": 353,
    "name": "mIRC-Commandline",
    "code": "\n; Hello World! for mIRC (command line version)\r\n\r\necho Hello World!\r\n"
  },
  {
    "id": 354,
    "name": "mIRC-Script",
    "code": "\n;Hello World for mIRC script\r\n\r\nalias helloworld {\r\n  /echo -a Hello World!\r\n}\r\n"
  },
  {
    "id": 355,
    "name": "MivaScript",
    "code": "\n<MvCOMMENT>Hello World in Miva Script</MvCOMMENT>\r\n<MvEVAL EXPR=\"{'Hello World'}\">\r\n"
  },
  {
    "id": 356,
    "name": "MML-AXE10",
    "code": "\n! Hello world program in MML for Ericsson's AXE10 telephone exchange\r\nIOTXP:Hello World;\r\n"
  },
  {
    "id": 357,
    "name": "Modula-2",
    "code": "\n(* Hello World in Modula-2 *)\n\nMODULE HelloWorld;\nFROM InOut IMPORT WriteString,WriteLn;\nBEGIN\n  WriteString(\"Hello World!\");\n  WriteLn;\nEND HelloWorld.\n"
  },
  {
    "id": 358,
    "name": "Modula-3",
    "code": "(* Hello World in Modula-3 *)\r\n\r\nMODULE Hello EXPORTS Main;\r\n\r\nIMPORT IO;\r\n\r\nBEGIN\r\n IO.Put(\"Hello World!\\n\");\r\nEND Hello."
  },
  {
    "id": 359,
    "name": "MoHAA-Script",
    "code": "\n// Hello World in the Medal of Honor Allied Assault scripting language\r\n\r\niprintln \"Hello World!\"\r\n"
  },
  {
    "id": 360,
    "name": "MOO",
    "code": "\"Hello World in MOO\";\r\n\r\nplayer.location:announce_all(\"Hello, world!\");"
  },
  {
    "id": 361,
    "name": "Mouse",
    "code": "\n~ Hello World in Mouse\r\n\r\n\"HELLO, WORLD.\"\r\n$\r\n"
  },
  {
    "id": 362,
    "name": "MPD",
    "code": "\n# Hello World in MPD.\r\n\r\nresource helloworld()\r\n  write(\"Hello World\")\r\nend\r\n"
  },
  {
    "id": 363,
    "name": "MPLAB IDE",
    "code": "; Hello world in MPLAB IDE\n\nload_HELLO_W\nlfsr2,0x100\nmovlwd'11'\nmovwfPOSTINC2\nmovlw\"H\"\nmovwfPOSTINC2\nmovlw\"E\"\nmovwfPOSTINC2\nmovlw\"L\"\nmovwfPOSTINC2\nmovwfPOSTINC2\nmovlw\"O\"\nmovwfPOSTINC2\nmovlw\" \"\nmovwfPOSTINC2\nmovlw\"W\"\nmovwfPOSTINC2\nmovlw\"O\"\nmovwfPOSTINC2\nmovlw\"R\"\nmovwfPOSTINC2\nmovlw\"L\"\nmovwfPOSTINC2\nmovlw\"D\"\nmovwfPOSTINC2\nSEND_HELLO_WORLD\nlfsr1,0x100\nmovf    POSTINC1,w\nmovwfstr_length\nSLmovf       POSTINC1,w\nmovwfTXREG\nTX_wait\nbtfss      TXSTA,TRMT\nbraTX_wait\ndecfszstr_length,f\nbraSL\nDONE_MESSAGE\nnop"
  },
  {
    "id": 364,
    "name": "MS Small Basic",
    "code": "' Hello World in Microsoft Small Basic\r\n\r\nTextWindow.WriteLine(\"Hello, World\")"
  },
  {
    "id": 365,
    "name": "MSDOS",
    "code": "\n@ECHO OFF\nREM Hello World for DOS batch\n\nECHO Hello World!\n"
  },
  {
    "id": 366,
    "name": "MSIL",
    "code": "\n//Hello World in MSIL (.NET assembler)\r\n\r\n.assembly helloworld {}\r\n.class helloworld\r\n{\r\n .method static void Main() cil managed\r\n {\r\n  .entrypoint\r\n  ldstr \"Hello World!\"\r\n  call void [mscorlib]System.Console::WriteLine(string)\r\n  ret\r\n }\r\n}\r\n"
  },
  {
    "id": 367,
    "name": "MuLisp",
    "code": "\n; Hello, World! in MuLisp\r\n\r\n(print 'Hello\\,\\ world\\!)"
  },
  {
    "id": 368,
    "name": "Mumps",
    "code": "\n; Hello World in Mumps-M\r\n w !,\"Hello World\"\r\n"
  },
  {
    "id": 369,
    "name": "MySQL FUNCTION",
    "code": "-- Hello world in MySQL FUNCTION\n\nDELIMITER $$\nCREATE FUNCTION hello_world() RETURNS TEXT COMMENT 'Hello World'\nBEGIN\n  RETURN 'Hello World';\nEND;\n$$\nDELIMITER ;\n \nSELECT hello_world();"
  },
  {
    "id": 370,
    "name": "Mythryl",
    "code": "#!/usr/bin/mythryl\r\n# Hello World in Mythryl\r\nprintf \"Hello, world!\\n\";"
  },
  {
    "id": 371,
    "name": "Natural",
    "code": "\n * Hello World in Natural (by Software AG)\r\nWrite \"Hello, World!\".\r\n"
  },
  {
    "id": 372,
    "name": "Nemerle",
    "code": "\n// Hello World in Nemerle (a functional programming language for .NET)\r\n\r\nSystem.Console.WriteLine(\"Hello World\");\r\n"
  },
  {
    "id": 373,
    "name": "newLISP",
    "code": "\n;; Hello World in newLISP\r\n\r\n(println \"Hello World\")\r\n"
  },
  {
    "id": 374,
    "name": "NewtonScript",
    "code": "\n// Hello World in NewtonScript\n\nbaseview :=\n   {viewBounds: {left: -3, top: 71, right: 138, bottom: 137},\n    viewFlags: 581,\n    declareSelf: 'base,\n    _proto: protoFloatNGo,\n    debug: \"baseview\"\n   };\n\ntextview := * child of baseview *\n   {text: \"Hello World!\",\n    viewBounds: {left: 33, top: 24, right: 113, bottom: 46},\n    viewFlags: 579,\n    _proto: protoStaticText,\n    debug: \"textview\"\n   };\n"
  },
  {
    "id": 375,
    "name": "Nice",
    "code": "\n//Hello World in Nice\r\n\r\nvoid main(String[] args){ \r\n   println(\"hello world\"); \r\n}\r\n"
  },
  {
    "id": 376,
    "name": "Nim",
    "code": "# Hello world in Nim\n\necho \"Hello World\""
  },
  {
    "id": 377,
    "name": "Nit",
    "code": "# Hello world in Nit\n\nprint \"Hello, World!\""
  },
  {
    "id": 378,
    "name": "Node.js",
    "code": "/* Hello world in Node.js */\n\nvar sys = require('sys');\nsys.puts('Hello World');"
  },
  { "id": 379, "name": "Noor", "code": "اطبع \"Hello World\"" },
  {
    "id": 380,
    "name": "NSIS",
    "code": "\n; Hello World in Nullsoft Software Install Script (NSIS)\r\n\r\nCaption \"Hello World!\"\r\nOutFile \".\\HelloWorld.exe\"\r\nSilentInstall silent\r\n\r\nSection \"\"\r\n        MessageBox MB_OK \"Hello World!\"\r\nSectionEnd\r\n"
  },
  {
    "id": 381,
    "name": "NXC",
    "code": "/* Hello World in NXC (\"Not Exactly C\") */\r\n    \r\n#include \"NXCDefs.h\"\r\n \r\ntask main()\r\n{\r\n TextOut(0, LCD_LINE1, \"Hello World!\");\r\n}"
  },
  {
    "id": 382,
    "name": "Oberon.oberon",
    "code": "\nMODULE HelloWorld;\n\n(* Hello World in Oberon for the Oberon System *)\n\n  IMPORT Oberon, Texts;\n\n  VAR\n      W: Texts.Writer;\n\n  PROCEDURE Do*;\n    BEGIN\n        Texts.WriteString(W,\"Hello World!\");\n            Texts.WriteLn(W);\n                Texts.Append(Oberon.Log,W.buf)\n                  END Do;\n\nBEGIN Texts.OpenWriter(W)\nEND HelloWorld.\n"
  },
  {
    "id": 383,
    "name": "Oberon.std",
    "code": "\n(* Hello World in Oberon for standard operating systems *)\n\nMODULE HelloWorld;\nIMPORT Out;\nBEGIN\n  Out.String(\"Hello World!\");\n  Out.Ln;\nEND HelloWorld;\n"
  },
  {
    "id": 384,
    "name": "Objective-C",
    "code": "\n/* Hello World in Objective-C.\n** Since the standard implementation is identical to K&R C,\n** a version that says hello to a set of people passed on\n** the command line is shown here.\n*/\n\n#include <stdio.h>\n#include <objpak.h>\nint main(int argc,char **argv)\n{\n    id set = [Set new];\n    argv++;while (--argc) [set add:[String str:*argv++]];\n    [set do:{ :each | printf(\"hello, %s!\\n\",[each str]); }];\n    return 0;\n}\n"
  },
  {
    "id": 385,
    "name": "OCaml",
    "code": "\n(* Hello World in OCaml *)\r\n\r\nprint_string \"Hello World!\\n\";;\r\n"
  },
  {
    "id": 386,
    "name": "Occam",
    "code": "\nPROGRAM Hello\n-- Hello world in Occam\n#USE ioconv\n\nSEQ\n  write.full.string(screen,\"Hello World!\")\n"
  },
  {
    "id": 387,
    "name": "Octave",
    "code": "\n#Hello World in Octave (http://www.octave.org/)\r\nprintf(\"Hello World\\n\");\r\n"
  },
  {
    "id": 388,
    "name": "Omnimark",
    "code": "\n; Hello World in Omnimark\r\n\r\n\r\nprocess\r\n     output \"Hello World!%n\"\r\n"
  },
  {
    "id": 389,
    "name": "Ook",
    "code": "\nHello World in Ook. No comments possible.\r\n\r\nOok. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook.\r\nOok! Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook?\r\nOok! Ook! Ook? Ook! Ook? Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook.\r\nOok. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.\r\nOok? Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.\r\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\r\nOok! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook. Ook! Ook? Ook! Ook! Ook? Ook!\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook! Ook.\r\n"
  },
  {
    "id": 390,
    "name": "OpenVMS",
    "code": "\n$! Hello World in OpenVMS DCL\r\n\r\n$ write sys$output \"Hello World\"\r\n"
  },
  {
    "id": 391,
    "name": "OPL.dialog",
    "code": "\nREM Hello World for OPL (Psion Organizer 3a)\nREM More complex version with menues and dialog boxes\n\nPROC HELLO:\n  LOCAL M%\n  DO\n    REM Display menu bar\n    mINIT\n    mCARD \"Sprache\",\"Deutsch\",%d,\"English\",%e\n    mCARD \"Extras\",\"Beenden\",%x,\"Info\",%i\n    M%=MENU\n    REM process choosen function\n    IF M%=%d\n      REM Display german dialog box\n      REM with an ENTER button to continue\n      dBOX:(\" \",\"Hallo Welt\",\" \",\"weiter\",13)\n    ELSEIF M%=%e\n      REM Display english dialog box\n      REM with an ENTER button to continue\n      dBOX:(\" \",\"Hello World\",\" \",\"continue\",13)\n    ELSEIF M%=%i\n      REM Display copyright information ;-)\n      dBOX:(\"Info\",\"(C) Klaus M&uuml;ller 0196\",\"FrankfurtMain, Germany\",\"\",13)\n    ENDIF\n  UNTIL M%=%x\nENDP\n\nPROC dBOX:(Z1$,Z2$,Z3$,Z4$,BUTTON%)\n  dINIT Z1$\n  dTEXT \"\",\" \",0\n  dTEXT \"\",Z2$\",$102\n  dTEXT \"\",Z3$,$202\n  dBUTTONS Z4$,BUTTON%\n  DIALOG\nENDP\n"
  },
  {
    "id": 392,
    "name": "OPL.simple",
    "code": "\nREM Hello World for OPL (Psion Organizer 3a)\nREM Simple version\n\nPROC HELLO:\n  PRINT \"Hello World!\"\n  GET\nENDP\n"
  },
  {
    "id": 393,
    "name": "Oz",
    "code": "% Hello World in Oz\n\nfunctor\nimport\n  System\n  Application\ndefine\n  {System.showInfo \"Hello World!\"}\n  {Application.exit 0}\nend"
  },
  {
    "id": 394,
    "name": "ParaSail",
    "code": "// Hello world in ParaSail\n\nfunc Hello_World(var IO) is\n    IO.Println(\"Hello, World\");\nend func Hello_World;"
  },
  {
    "id": 395,
    "name": "Parser",
    "code": "# Hello World in Parser\r\n\r\nHello world!"
  },
  {
    "id": 396,
    "name": "Pascal (Windows)",
    "code": "\n{ Hello World in Borland Pascal 7 for MS-Windows}\n\nPROGRAM HelloWorld;\n\nUSES\n  WinCRT;\n\nBEGIN\n  InitWinCRT;\n  WriteLn('Hello World!');\n  ReadLn;\n  DoneWinCRT;\nEND.\n"
  },
  {
    "id": 397,
    "name": "Pascal",
    "code": "{Hello world in Pascal}\n\nprogram HelloWorld(output);\nbegin\n  WriteLn('Hello World!');\nend."
  },
  {
    "id": 398,
    "name": "Pawn",
    "code": "\n/* Hello World in Pawn */\r\n\r\nmain()\r\n{\r\n    printf \"Hello World!\"\r\n}\r\n"
  },
  {
    "id": 399,
    "name": "PBASIC",
    "code": "\n' Hello World in PBASIC (for the Boe-Bot Robot)\r\n\r\n' {$STAMP BS2}\r\n' {$PBASIC 2.5}\r\n\r\nDEBUG \"Hello World!\"\r\n\r\nEND\r\n"
  },
  {
    "id": 400,
    "name": "PDF",
    "code": "\n%Hello World in Portable Document Format (PDF)\r\n%PDF-1.2\r\n1 0 obj\r\n<<\r\n/Type /Page\r\n/Parent 5 0 R\r\n/Resources 3 0 R\r\n/Contents 2 0 R\r\n>>\r\nendobj\r\n2 0 obj\r\n<<\r\n/Length 51\r\n>>\r\nstream\r\nBT\r\n/F1 24 Tf\r\n1 0 0 1 260 600 Tm\r\n(Hello World)Tj\r\nET\r\nendstream\r\nendobj\r\n3 0 obj\r\n<<\r\n/ProcSet[/PDF/Text]\r\n/Font <</F1 4 0 R >>\r\n>>\r\nendobj\r\n4 0 obj\r\n<<\r\n/Type /Font\r\n/Subtype /Type1\r\n/Name /F1\r\n/BaseFont /Arial\r\n>>\r\nendobj\r\n5 0 obj\r\n<<\r\n/Type /Pages\r\n/Kids [ 1 0 R ]\r\n/Count 1\r\n/MediaBox\r\n[ 0 0 612 792 ]\r\n>>\r\nendobj\r\n6 0 obj\r\n<<\r\n/Type /Catalog\r\n/Pages 5 0 R\r\n>>\r\nendobj\r\ntrailer\r\n<<\r\n/Root 6 0 R\r\n>>\r\n"
  },
  {
    "id": 401,
    "name": "PEARL",
    "code": "\nMODULE (HELLO);\r\n/* Hello World in PEARL (Process and Experiment Automation Realtime Language) */\r\n  SYSTEM;\r\n   TERMINAL:DIS<->SDVLS(2);\r\n  PROBLEM;\r\n   SPC TERMINAL DATION INOUT\r\n         ALPHIC DIM(,) TFU MAX\r\n         FORWARD CONTROL (ALL);\r\n   MAIN:TASK;\r\n     DCL TEXT INV CHAR(30)\r\n          INIT('HELLO WORLD!');\r\n    OPEN TERMINAL;\r\n    PUT TEXT TO TERMINAL;\r\n    CLOSE TERMINAL;\r\n   END;\r\nMODEND;\r\n"
  },
  {
    "id": 402,
    "name": "PeopleCode",
    "code": "\n/* Hello World in PeopleCode 8.45\r\n\r\n&MsgText = MsgGetText(66666666, 999999999, \"Hello World!\");\r\n"
  },
  {
    "id": 403,
    "name": "Perl",
    "code": "\n# Hello world in perl\n\nprint \"Hello World!\\n\";\n"
  },
  {
    "id": 404,
    "name": "Perl 6",
    "code": "# Hello world in Perl 6\n\nsay 'Hello World!';"
  },
  {
    "id": 405,
    "name": "Pharo",
    "code": "\"Hello world in Pharo\"\n\nTranscript show: 'hello world'; cr."
  },
  {
    "id": 406,
    "name": "PHP+GD",
    "code": "\n<?\r\n// Hello World in PHP + GD library\r\nheader(\"Content-type: image/gif\");\r\n$rscImage    = imagecreatetruecolor(80, 25);\r\n$intFontC    = imagecolorallocate($rscImage, 255, 255, 255);\r\n$intBGC        = imagecolorallocate($rscImage, 0, 0, 0);\r\nimagestring($rscImage, 2, 5, 5, \"Hello World!\", $intFontC);\r\nimagegif($rscImage);\r\nimagedestroy($rscImage);\r\n?>\r\n"
  },
  {
    "id": 407,
    "name": "PHP",
    "code": "<?php\n  // Hello world in PHP\n  echo 'Hello World!';\n?>"
  },
  {
    "id": 408,
    "name": "Picat",
    "code": "% Hello world in Picat\n\nmain =>\n     print(\"Hello, World!\\n\")."
  },
  {
    "id": 409,
    "name": "Pike",
    "code": "\n// Hello world in Pike (pike.roxen.com)\r\n\r\nint main(){\r\n        write(\"Hello World!\\n\");\r\n}\r\n"
  },
  {
    "id": 410,
    "name": "PILOT",
    "code": "R:Hello world in PILOT\nT:Hello World!\n"
  },
  {
    "id": 411,
    "name": "PL-SQL",
    "code": "\n-- Hello World in Oracle PL/SQL (sqlplus)\r\n\r\nset serveroutput on\r\n\r\nbegin\r\n  dbms_output.enable(10000);\r\n  dbms_output.put_line('Hello World');\r\nend;\r\n/\r\n"
  },
  {
    "id": 412,
    "name": "PL1",
    "code": "\n/* Hello World in PL/1 */\n\nHello: procedure options(main);\n       put skip list('Hello World!');\nend Hello;\n"
  },
  {
    "id": 413,
    "name": "Plankalkül",
    "code": "R1.1(V0[:sig]) => R0\nR1.2(V0[:m x sig]) => R0\n0 => i | m + 1 => j\n[W [ i < j -> [ R1.1(V0[i: m x sig]) => R0 | i + 1 => i ] ] ]\nEND\nR1.3() => R0\n'H';'e';'l';'l';'o';',';' ';'w';'o';'r';'l';'d';'!' => Z0[: m x sig] R1.2(Z0) => R0\nEND"
  },
  {
    "id": 414,
    "name": "Pocket Calculator",
    "code": "\nHello World for standard pocket calculators (7-segment display).\nType in and turn calculator upside down.\n\n0.7734\n"
  },
  {
    "id": 415,
    "name": "Pop11",
    "code": "\r\n;;; Hello World in POP-11\r\n\r\n: vars outputtext;\r\n: \"Hello World\" -> outputtext;\r\n: outputtext =>\r\n\r\n** Hello World\r\n"
  },
  {
    "id": 416,
    "name": "Portugol",
    "code": "// Hello world in Portugol\n\nalgoritmo \"Hello World\"\nvar\ninicio\nescreva (\"Hello World!\")\nfimalgoritmo"
  },
  {
    "id": 417,
    "name": "PostgreSQL",
    "code": "\n-- Hello World in PL/pgSQL (PostgreSQL Procedural Language)\r\n-- In old versions replace '$$' by double qoutes\r\n\r\nCREATE FUNCTION hello_world() RETURNS text AS $$\r\nBEGIN\r\nRETURN 'Hello World';\r\nEND\r\n$$ LANGUAGE plpgsql;\r\n\r\nSELECT hello_world();\r\n"
  },
  {
    "id": 418,
    "name": "Postscript",
    "code": "\n% Hello World in Postscript\n%!PS\n/Palatino-Roman findfont\n100 scalefont\nsetfont\n100 100 moveto\n(Hello World!) show\nshowpage\n"
  },
  {
    "id": 419,
    "name": "POV-Ray",
    "code": "\r\n#include \"skies.inc\"\r\n\r\ncamera{location <0,1,-5> look_at y}\r\nlight_source{<2,4,-7>,2}\r\nsky_sphere{S_Cloud1}\r\nplane{y 0 pigment{checker rgb 1,0} finish{reflection .5}}\r\ntext{ttf \"timrom.ttf\" \"Hello World!\" .3,0\r\n  pigment {agate scale .2} translate -2.5*x\r\n}\r\n"
  },
  {
    "id": 420,
    "name": "PowerBASIC",
    "code": "#COMPILE EXE\r\n#COMPILER PBCC 6\r\n\r\nFUNCTION PBMAIN () AS LONG\r\n  CON.PRINT \"Hello world!\"\r\n  CON.WAITKEY$\r\nEND FUNCTION"
  },
  {
    "id": 421,
    "name": "Powerflex",
    "code": "\n// \"Hello World\" in PowerFlex\r\n\r\nshowln \"Hello World\"\r\nsystem\r\n"
  },
  {
    "id": 422,
    "name": "PowerScript",
    "code": "\n// Hello World in PowerScript\r\n\r\nMessageBox(\"\",\"Hello World!\")\r\n"
  },
  {
    "id": 423,
    "name": "Powershell",
    "code": "\n# Hello World in Microsoft Powershell\r\n\r\n'Hello World!'\r\n"
  },
  {
    "id": 424,
    "name": "PPL",
    "code": "\n;Hello World in PPL (PCBoard Programming Language)\r\nPRINTLN \"Hello, World!\"\r\n"
  },
  {
    "id": 425,
    "name": "PQN-PROC",
    "code": "\nPQN\r\nC Hello World in PQN/PROC\r\nO Hello World\r\n"
  },
  {
    "id": 426,
    "name": "PRAAT",
    "code": "\n# Hello World in praat (www.praat.org)\r\necho Hello World!\r\n"
  },
  {
    "id": 427,
    "name": "ProC",
    "code": "\n/* Hello World in Pro*C, the Oracle's embedded SQL environment */\r\n\r\n#include <stdio.h>\r\n\r\nEXEC SQL INCLUDE SQLCA;\r\n\r\nint main() {\r\n   char hello[15];\r\n   char *user = \"the_user\";\r\n   char *password = \"the_password\";\r\n   char *sid = \"the_sid\";\r\n\r\n   EXEC SQL CONNECT :user IDENTIFIED BY :password USING :sid;\r\n\r\n   EXEC SQL\r\n      SELECT 'Hello World' INTO :hello\r\n      FROM DUAL;\r\n\r\n   printf(\"%s\\n\", hello);\r\n\r\n   EXEC SQL COMMIT RELEASE;\r\n \r\n   return 0;\r\n}\r\n"
  },
  {
    "id": 428,
    "name": "Processing",
    "code": "// Hello world in Processing\r\n\r\nprintln( \"Hello world!\" );"
  },
  {
    "id": 429,
    "name": "Profan",
    "code": "\n' Hello World in Profan (http://www.profan.de/)\r\n\r\ncls\r\nprint \"Hello World!\"\r\nwaitkey\r\n"
  },
  {
    "id": 430,
    "name": "Progress",
    "code": "\n/* Hello World in Progress */\r\n\r\nmessage \"Hello World\" view-as alert-box.\r\n"
  },
  {
    "id": 431,
    "name": "Prolog",
    "code": "\n% Hello World in Prolog\n\nhello :- display('Hello World!') , nl .\n"
  },
  {
    "id": 432,
    "name": "Punyforth",
    "code": "\\ Hello world in Punyforth\n\nprintln: \"Hello world!\""
  },
  {
    "id": 433,
    "name": "PureBasic (Console)",
    "code": "\n; Hello World in PureBasic (console program)\r\n\r\nOpenConsole()\r\n   ConsoleTitle (\"Hello World!\")\r\n   PrintN (\"Hello World!\")\r\nCloseConsole()\r\n"
  },
  {
    "id": 434,
    "name": "PureBasic (Messagebox)",
    "code": "\n; Hello World in PureBasic (message box)\r\n\r\nMessageRequester(\"Hello World Messagebox\",\"Hello World!\")\r\n"
  },
  {
    "id": 435,
    "name": "PureBasic (Window)",
    "code": "\n; Hello World in PureBasic (Window)\r\n\r\nIf OpenWindow(0, 216, 0, 268, 133,  #PB_Window_SystemMenu | #PB_Window_TitleBar | #PB_Window_ScreenCentered , \"Hello World Window\")\r\n If CreateGadgetList(WindowID())\r\n   TextGadget(1, 100, 60, 60, 20, \"Hello World!\")\r\n EndIf\r\nEndIf\r\n\r\nRepeat    ; Message Loop\r\nUntil WaitWindowEvent() = #PB_EventCloseWindow\r\n"
  },
  {
    "id": 436,
    "name": "Python 2",
    "code": "# Hello world in Python 2\n\nprint \"Hello World\""
  },
  {
    "id": 437,
    "name": "Python 3",
    "code": "# Hello world in Python 3 (aka Python 3000)\n\nprint(\"Hello World\")"
  },
  {
    "id": 438,
    "name": "Q",
    "code": "/* Hello world in Q */\n\nhello            = writes \"Hello, world!\\n\";"
  },
  {
    "id": 439,
    "name": "Qalb",
    "code": "; Hello world in قلب\n\n‫(قول \"مرحبا يا عالم!\")"
  },
  {
    "id": 440,
    "name": "QCL",
    "code": "// Hello world in QCL\n\nprint \"Hello World\";"
  },
  {
    "id": 441,
    "name": "qore",
    "code": "\n#!/usr/local/bin/qore\r\n# Hello World in qore\r\n\r\nclass HelloWorld\r\n{\r\n    constructor()\r\n    {\r\n\tbackground $.output(\"Hello, world!\");\r\n    }\r\n    output($arg)\r\n    {\r\n\tprintf(\"%s\\n\", $arg);\r\n    }\r\n}\r\n\r\nnew HelloWorld();\r\n"
  },
  {
    "id": 442,
    "name": "QuakeC",
    "code": "\n// Hello World in QuakeC. This should be put somewhere, for instance\r\n// PutClientInServer() in Client.qc.\r\n\r\nbprint(\"Hello World\\n\");\r\n"
  },
  {
    "id": 443,
    "name": "QuickBASIC",
    "code": "\nREM Hello World in QuickBASIC\r\nPRINT \"Hello World!\"\r\nEND\r\n"
  },
  {
    "id": 444,
    "name": "Quorum",
    "code": "// Hello world in Quorum\n\noutput \"Hello World!\""
  },
  {
    "id": 445,
    "name": "R",
    "code": "\n# Hello World in R\r\ncat(\"Hello world\\n\")\r\n"
  },
  {
    "id": 446,
    "name": "Racket",
    "code": ";; Hello world in Racket\n\n#lang racket/base\n\"Hello, World!\""
  },
  {
    "id": 447,
    "name": "Rapira",
    "code": "\\ Hello world in Rapira\n\nПРОЦ СТАРТ()\n    ВЫВОД: 'Hello World!'\nКОН ПРОЦ"
  },
  {
    "id": 448,
    "name": "RATFOR",
    "code": "\r\n# hello.world.in.ratfor\r\nprint *, 'hello, world'\r\nend\r\n"
  },
  {
    "id": 449,
    "name": "Rational Rose",
    "code": "' Hello World in Rational Rose scripting language\r\nSub Main\r\n    RoseApp.WriteErrorLog \"Hello, World!\"\t\r\nEnd Sub"
  },
  {
    "id": 450,
    "name": "React-VR",
    "code": "// Hello world in React-VR\n\nimport React from 'react';\nimport { AppRegistry, asset, Text, View,} from 'react-vr';\n \nexport default class HelloWorld extends React.Component {\n  render() { return (\n      <View>\n        <Text\n          style={{transform: [{translate: [0, 0, -3]}],}}>\n          Hello World\n        </Text>\n      </View>\n    );   } };\nAppRegistry.registerComponent('HelloWorld', () => HelloWorld);"
  },
  {
    "id": 451,
    "name": "REALbasic",
    "code": "\n' Hello World in REALbasic (http://www.realsoftware.com/)\r\n\r\nmsgBox \"Hello World!\"\r\n"
  },
  {
    "id": 452,
    "name": "RealText",
    "code": "\n<window width=\"320\" height=\"160\">\r\n<!-- Hello World in RealText  -->\r\n\t<font size=\"12\" name=\"Arial\">\r\n\t<center>Hello World!</center>\r\n\t</font>\r\n</window>\r\n"
  },
  {
    "id": 453,
    "name": "Reason",
    "code": "/* Hello world in Reason */\n\nJs.log(\"Hello World!\")\n"
  },
  {
    "id": 454,
    "name": "Rebol-view",
    "code": "\nHello World in Rebol-view.\r\n\r\nrebol[]\r\nview layout[\r\ntext \"Hello World!\"\r\n]\r\n"
  },
  {
    "id": 455,
    "name": "REBOL",
    "code": "; Hello World in REBOL\r\n\r\nprint \"Hello World!\""
  },
  {
    "id": 456,
    "name": "Redcode",
    "code": "\n; Hello World in Redcode\r\n; Should work with any MARS >= ICWS-86\r\n; (with 128x64 gfx core support, of course!)\r\n;\r\nStart   MOV     0,2455\r\n        MOV     0,2458\r\n        MOV     0,2459\r\n        MOV     0,2459\r\n        MOV     0,2459\r\n        MOV     0,2459\r\n        MOV     0,2459\r\n        MOV     0,2460\r\n        MOV     0,2465\r\n        MOV     0,2471\r\n        MOV     0,2471\r\n        MOV     0,2471\r\n        MOV     0,2479\r\n        MOV     0,2482\r\n        MOV     0,2484\r\n        MOV     0,2484\r\n        MOV     0,2484\r\n        MOV     0,2486\r\n        MOV     0,2486\r\n        MOV     0,2486\r\n        MOV     0,2486\r\n        MOV     0,2488\r\n        MOV     0,2493\r\n        MOV     0,2493\r\n        MOV     0,2493\r\n        MOV     0,2493\r\n        MOV     0,2497\r\n        MOV     0,2556\r\n        MOV     0,2559\r\n        MOV     0,2560\r\n        MOV     0,2565\r\n        MOV     0,2570\r\n        MOV     0,2575\r\n        MOV     0,2578\r\n        MOV     0,2585\r\n        MOV     0,2588\r\n        MOV     0,2589\r\n        MOV     0,2592\r\n        MOV     0,2593\r\n        MOV     0,2596\r\n        MOV     0,2597\r\n        MOV     0,2603\r\n        MOV     0,2605\r\n        MOV     0,2608\r\n        MOV     0,2667\r\n        MOV     0,2670\r\n        MOV     0,2671\r\n        MOV     0,2676\r\n        MOV     0,2681\r\n        MOV     0,2686\r\n        MOV     0,2689\r\n        MOV     0,2696\r\n        MOV     0,2699\r\n        MOV     0,2700\r\n        MOV     0,2703\r\n        MOV     0,2704\r\n        MOV     0,2707\r\n        MOV     0,2708\r\n        MOV     0,2714\r\n        MOV     0,2716\r\n        MOV     0,2719\r\n        MOV     0,2778\r\n        MOV     0,2778\r\n        MOV     0,2778\r\n        MOV     0,2778\r\n        MOV     0,2778\r\n        MOV     0,2779\r\n        MOV     0,2779\r\n        MOV     0,2779\r\n        MOV     0,2782\r\n        MOV     0,2787\r\n        MOV     0,2792\r\n        MOV     0,2795\r\n        MOV     0,2802\r\n        MOV     0,2805\r\n        MOV     0,2806\r\n        MOV     0,2809\r\n        MOV     0,2810\r\n        MOV     0,2810\r\n        MOV     0,2810\r\n        MOV     0,2810\r\n        MOV     0,2812\r\n        MOV     0,2818\r\n        MOV     0,2820\r\n        MOV     0,2823\r\n        MOV     0,2882\r\n        MOV     0,2885\r\n        MOV     0,2886\r\n        MOV     0,2891\r\n        MOV     0,2896\r\n        MOV     0,2901\r\n        MOV     0,2904\r\n        MOV     0,2911\r\n        MOV     0,2912\r\n        MOV     0,2913\r\n        MOV     0,2914\r\n        MOV     0,2917\r\n        MOV     0,2918\r\n        MOV     0,2919\r\n        MOV     0,2922\r\n        MOV     0,2928\r\n        MOV     0,2930\r\n        MOV     0,2933\r\n        MOV     0,2992\r\n        MOV     0,2995\r\n        MOV     0,2996\r\n        MOV     0,3001\r\n        MOV     0,3006\r\n        MOV     0,3011\r\n        MOV     0,3014\r\n        MOV     0,3021\r\n        MOV     0,3022\r\n        MOV     0,3023\r\n        MOV     0,3024\r\n        MOV     0,3027\r\n        MOV     0,3028\r\n        MOV     0,3030\r\n        MOV     0,3032\r\n        MOV     0,3038\r\n        MOV     0,3040\r\n        MOV     0,3103\r\n        MOV     0,3106\r\n        MOV     0,3107\r\n        MOV     0,3107\r\n        MOV     0,3107\r\n        MOV     0,3107\r\n        MOV     0,3107\r\n        MOV     0,3108\r\n        MOV     0,3108\r\n        MOV     0,3108\r\n        MOV     0,3108\r\n        MOV     0,3108\r\n        MOV     0,3109\r\n        MOV     0,3109\r\n        MOV     0,3109\r\n        MOV     0,3109\r\n        MOV     0,3109\r\n        MOV     0,3111\r\n        MOV     0,3111\r\n        MOV     0,3111\r\n        MOV     0,3120\r\n        MOV     0,3121\r\n        MOV     0,3124\r\n        MOV     0,3124\r\n        MOV     0,3124\r\n        MOV     0,3126\r\n        MOV     0,3129\r\n        MOV     0,3130\r\n        MOV     0,3130\r\n        MOV     0,3130\r\n        MOV     0,3130\r\n        MOV     0,3130\r\n        MOV     0,3131\r\n        MOV     0,3131\r\n        MOV     0,3131\r\n        MOV     0,3131\r\n        MOV     0,3135\r\n        JMP     0\r\n"
  },
  {
    "id": 457,
    "name": "REFAL-2",
    "code": "\n* Hello, World! in REFAL-2\r\nstart\r\nentry go\r\nextrn PROUT\r\ngo = <prout 'Hello, world!'>\r\nend\r\n"
  },
  {
    "id": 458,
    "name": "Refal",
    "code": "* Hello world in Refal\n\n$ENTRY Go { = <Hello>;}\nHello {\n   = <Prout 'Hello world'>;\n}"
  },
  {
    "id": 459,
    "name": "Regular Expression",
    "code": "\nHello World as a regular expression.\r\nReplaces everything with \"Hello World\".\r\nFor use with vi, sed, etc.\r\n\r\nSearch String :  ^.*$\r\nReplace String: 'Hello World'\r\n"
  },
  {
    "id": 460,
    "name": "Rexx (simple)",
    "code": "\n/* Hello World in Rexx, simple version (writes to standard output) */\n\nsay 'Hello World!'\nexit\n"
  },
  {
    "id": 461,
    "name": "Rexx (window)",
    "code": "\n/* Hallo World in Rexx, opens window */\n\ncall RxFuncAdd 'SysLoadFuncs', 'RexxUtil', 'SysLoadFuncs'\ncall SysLoadFuncs\ncall RxMessageBox 'Hello World!', 'Hello World Window', 'OK', 'EXCLAMATION'\nexit\n"
  },
  {
    "id": 462,
    "name": "Rey",
    "code": "//beginning Hello World in Rey:\r\n \r\nkorzystaj \"Konsola\";\r\n \r\nprogram\r\n{\r\n    PiszLinia(\"Hello World\");\r\n}\r\n//end Hello World in Rey"
  },
  {
    "id": 463,
    "name": "rhine",
    "code": ";; Hello world in rhine\n\n(println \"Hello World\")"
  },
  {
    "id": 464,
    "name": "RPG IV v3-4",
    "code": "H* Hello world in RPG IV versions 3 and 4\n\nD msg             S             32    inz(*blank)\nD wait            S              1\n\nC                   eval      msg = 'Hello World'\n\nC     msg           dsply                   wait\n\n\nC                   eval      *inlr = *on"
  },
  {
    "id": 465,
    "name": "RPG IV v5",
    "code": "// Hello world in RPG IV version 5\n\nD wait           S              1\n\n  /Free\n   dsply ( 'Hello World!') ' ' wait;\n\n   *inlr = *on;    \n"
  },
  {
    "id": 466,
    "name": "RPG IV v7.1",
    "code": "// Hello world in RPG IV version 7.1\n\ndcl-s wait char(1);\n\ndsply ( 'Hello World!') ' ' wait;\n\n*inlr = *on;"
  },
  {
    "id": 467,
    "name": "RPL",
    "code": "\nHello World in RPL for the HP-28, HP-48, HP-49 and HP-50 series pocket calculators. No comments possible.\r\n\r\n<<\r\n    \"HELLO WORLD\"\r\n    1 DISP\r\n    60 FREEZE\r\n>>\r\n"
  },
  {
    "id": 468,
    "name": "RSL",
    "code": "\n// Hello World in RSL (RS-Bank Language)\r\n\r\n[Hello World!];\r\n"
  },
  {
    "id": 469,
    "name": "Ruby",
    "code": "\n# Hello World in Ruby\r\nputs \"Hello World!\"\r\n"
  },
  {
    "id": 470,
    "name": "Rust",
    "code": "// Hello world in Rust\n\nfn main() {\n    println!(\"Hello World!\");\n}"
  },
  {
    "id": 471,
    "name": "S-Plus",
    "code": "\n# Hello World for S-Plus\r\ncat(\"Hello world\\n\")\r\n"
  },
  {
    "id": 472,
    "name": "SAKO",
    "code": "K) HELLO WORLD IN SAKO\n\n   LINIA\n   TEKST:\n   HELLO WORLD\n   KONIEC"
  },
  {
    "id": 473,
    "name": "SAL",
    "code": "\n// Hello World in SAL\n\nproc main()\n    MsgBox(\"Hello from SAL\", \"Hello, World!\")\nend\n"
  },
  {
    "id": 474,
    "name": "SApp",
    "code": "\ncomment: Hello World in SApp\r\npopup \"Hello ## World!\" ,\r\n"
  },
  {
    "id": 475,
    "name": "SAS",
    "code": "/* Hello world in SAS */\n\n* Writes as output title;\nTITLE \"Hello World!\";\n* writes to the log;\ndata _null_;\n    PUT \"Hello world!\";\nrun;"
  },
  {
    "id": 476,
    "name": "Sather",
    "code": "\n-- Hello World in Sather\n\n    class HELLO is\n       main is #OUT + \"Hello World!\\n\" end\n    end\n"
  },
  {
    "id": 477,
    "name": "Sawzall",
    "code": "# Hello world in Sawzall\n\nemit stdout <- \"Hello, World!\";"
  },
  {
    "id": 478,
    "name": "Scala",
    "code": "// Hello world in Scala\n\nobject HelloWorld extends App {\n  println(\"Hello world!\")\n}"
  },
  {
    "id": 479,
    "name": "Scheme",
    "code": "; Hello World in Scheme\r\n\r\n(display \"Hello, world!\")\r\n(newline)"
  },
  {
    "id": 480,
    "name": "Scilab",
    "code": "// Hello World in SciLab.\r\n\r\ndisp('Hello World');"
  },
  {
    "id": 481,
    "name": "Seed7",
    "code": "\n# Hello World in Seed7\r\n\r\n$ include \"seed7_05.s7i\";\r\n\r\nconst proc: main is func\r\n  begin\r\n    writeln(\"Hello World!\");\r\n  end func;\r\n"
  },
  {
    "id": 482,
    "name": "Self",
    "code": "\n(|  \"Hello World in Self\"\n\n  hello = (| | 'Hello World!' print)\n|)\n"
  },
  {
    "id": 483,
    "name": "SenseTalk",
    "code": "\nHello World in SenseTalk.\r\n\r\non run put \"Hello World!\" end run "
  },
  {
    "id": 484,
    "name": "Setl2",
    "code": "\n-- Hello World in Setl2\n\nprocedure Hello();\n   print \"Hello World!\";\nend Hello;\n"
  },
  {
    "id": 485,
    "name": "Shakespeare",
    "code": "\nThe Infamous Hello World Program in Shakespeare.\r\n\r\nRomeo, a young man with a remarkable patience.\r\nJuliet, a likewise young woman of remarkable grace.\r\nOphelia, a remarkable woman much in dispute with Hamlet.\r\nHamlet, the flatterer of Andersen Insulting A/S.\r\n\r\n\r\n                    Act I: Hamlet's insults and flattery.\r\n\r\n                    Scene I: The insulting of Romeo.\r\n\r\n[Enter Hamlet and Romeo]\r\n\r\nHamlet:\r\n You lying stupid fatherless big smelly half-witted coward!\r\n You are as stupid as the difference between a handsome rich brave\r\n hero and thyself! Speak your mind!\r\n\r\n You are as brave as the sum of your fat little stuffed misused dusty\r\n old rotten codpiece and a beautiful fair warm peaceful sunny summer's\r\n day. You are as healthy as the difference between the sum of the\r\n sweetest reddest rose and my father and yourself! Speak your mind!\r\n\r\n You are as cowardly as the sum of yourself and the difference\r\n between a big mighty proud kingdom and a horse. Speak your mind.\r\n\r\n Speak your mind!\r\n\r\n[Exit Romeo]\r\n\r\n                    Scene II: The praising of Juliet.\r\n\r\n[Enter Juliet]\r\n\r\nHamlet:\r\n Thou art as sweet as the sum of the sum of Romeo and his horse and his\r\n black cat! Speak thy mind!\r\n\r\n[Exit Juliet]\r\n\r\n                    Scene III: The praising of Ophelia.\r\n\r\n[Enter Ophelia]\r\n\r\nHamlet:\r\n Thou art as lovely as the product of a large rural town and my amazing\r\n bottomless embroidered purse. Speak thy mind!\r\n\r\n Thou art as loving as the product of the bluest clearest sweetest sky\r\n and the sum of a squirrel and a white horse. Thou art as beautiful as\r\n the difference between Juliet and thyself. Speak thy mind!\r\n\r\n[Exeunt Ophelia and Hamlet]\r\n\r\n\r\n                    Act II: Behind Hamlet's back.\r\n\r\n                    Scene I: Romeo and Juliet's conversation.\r\n\r\n[Enter Romeo and Juliet]\r\n\r\nRomeo:\r\n Speak your mind. You are as worried as the sum of yourself and the\r\n difference between my small smooth hamster and my nose. Speak your\r\n mind!\r\n\r\nJuliet:\r\n Speak YOUR mind! You are as bad as Hamlet! You are as small as the\r\n difference between the square of the difference between my little pony\r\n and your big hairy hound and the cube of your sorry little\r\n codpiece. Speak your mind!\r\n\r\n[Exit Romeo]\r\n\r\n                    Scene II: Juliet and Ophelia's conversation.\r\n\r\n[Enter Ophelia]\r\n\r\nJuliet:\r\n Thou art as good as the quotient between Romeo and the sum of a small\r\n furry animal and a leech. Speak your mind!\r\n\r\nOphelia:\r\n Thou art as disgusting as the quotient between Romeo and twice the\r\n difference between a mistletoe and an oozing infected blister! Speak\r\n your mind!\r\n\r\n[Exeunt]\r\n"
  },
  {
    "id": 486,
    "name": "Shen",
    "code": "\\\\ Hello world in Shen\n\n(0-) (pr \"hello world\")"
  },
  {
    "id": 487,
    "name": "SilverBasic",
    "code": "\n//Hello World in SilverBasic\r\n\r\nPRINT \"Hello World!\"\r\n"
  },
  {
    "id": 488,
    "name": "SIMPLE",
    "code": "\n[::PROGRAM:Hello World program in SIMPLE\r\nA EQL @0\r\nMSG A\r\nEND\r\n]\r\n{::DATA:Data part\r\n@0:T\r\nHello World$$M\r\n$$@\r\n}\r\n"
  },
  {
    "id": 489,
    "name": "Simula",
    "code": "\n! Hello World in Simula;\r\n\r\nBEGIN\r\n    OutText(\"Hello World!\");\r\n    OutImage;\r\nEND\r\n"
  },
  {
    "id": 490,
    "name": "SinclairBasic",
    "code": "\n10 REM Hello World in Sinclair BASIC\r\n20 PRINT \"Hello World\"\r\n"
  },
  {
    "id": 491,
    "name": "Skip",
    "code": "// Hello world in Skip\n\nfun main(): void {\n  print_raw(\"Hello world!\")\n}"
  },
  {
    "id": 492,
    "name": "Smalltalk (simple)",
    "code": "\n\"Hello World in Smalltalk (simple version)\"\n\nTranscript show: 'Hello World!'.\n"
  },
  {
    "id": 493,
    "name": "Smalltalk (window)",
    "code": "\n\"Hello World in Smalltalk (in an own window)\"\n\"(to be entered in a special browser)\"\n\nVisualComponent subclass: #HelloWorldView\n\tinstanceVariableNames: ''\n\tclassVariableNames: ''\n\tpoolDictionaries: ''\n\tcategory: 'test'\n\ndisplayOn: aGraphicsContext\n\n\t'Hello World!' asComposedText displayOn: aGraphicsContext.\n\nopen\n\n\t|window|\n\twindow := ScheduledWindow new.\n\twindow label: 'Hello World Demo:'.\n\twindow component: self new.\n\twindow open.\n"
  },
  {
    "id": 494,
    "name": "Smalltalk MT",
    "code": "\"Hello World in Smalltalk MT\r\n\r\nFrameWindow new\r\n   title: 'Hello World';\r\n   open"
  },
  {
    "id": 495,
    "name": "SMIL",
    "code": "\n<!-- Hello World in SMIL -->\r\n<smil>\r\n <head>\r\n  <layout>\r\n   <root-layout width=\"300\" height=\"160\" background-color=\"white\"/>\r\n   <region id=\"text_region\" left=\"115\" top=\"60\"/>\r\n  </layout>\r\n </head>\r\n <body>\r\n  <text src=\"data:,Hello%20World!\" region=\"text_region\">\r\n   <param name=\"fontFace\" value=\"Arial\"/>\r\n  </text>\r\n </body>\r\n</smil>\r\n"
  },
  {
    "id": 496,
    "name": "SML",
    "code": "\n(* Hello World in SML *)\n\nfun hello() = output(std_out, \"Hello World!\");\n"
  },
  {
    "id": 497,
    "name": "Snobol",
    "code": "\n* Hello World in Snobol\n\n        OUTPUT = \"Hello World!\"\n"
  },
  {
    "id": 498,
    "name": "Spin",
    "code": "' Hello World in Spin\r\n\r\nCON\r\n  _CLKMODE = XTAL1 + PLL16x\r\n  _XINFREQ = 5_000_000\r\n  TV_PIN = 12\r\n\r\nOBJ\r\n  Tv: \"TV_Text\"\r\n\r\nPUB Main\r\n  Tv.Start( TV_PIN )\r\n  Tv.Str( String( \"Hello World\" ) )"
  },
  {
    "id": 499,
    "name": "Spiral",
    "code": "\nHello World in Spiral. No comment character exists.\r\n\r\ne0v ***   *eXlv**   *lX      *2X       **oXi\r\nv * * *   *     *   * 2      * o      **   v*\r\n* * * *   * *****   * v      * v      * *iX *\r\n* * * *   * *       * ^      v *      * * w *\r\n* *** *   * *****   * v      * *      * * v *\r\n*     *   *     ^   * ^      * *      * * * *\r\n* *** *   * ****v   * v      * *      v * * *\r\n* * * *   * *       * *      * *      ^ * * *\r\n* * * *   * *****   * *****  * *****  * *** *\r\n* * * *   *     *   *     *  *     *  **   **\r\n*** ***   *******   *****v^  *******   *****\r\n\r\n*wX ***    **3Xp    *rX4..   d5*      qd**  \r\n* 3 * *   **   v^   *    ..  * *      *  ***\r\n* v * ^   * #pX v   * ..  .  * *      *    **\r\n* *** v   * # r #   * ..  .  * *      * !q* *\r\n* * * *   * # v #   * 54 ..  * *      * * * *\r\n* * * *   * # * #   *   @X   * *      * * * *\r\n* * * *   * # * #   *   v    * *      * * * *\r\n* * * *   * # * #   * * **   * *      * * * *\r\n*  *  *   * # * #   * ** **  * *      * *** *\r\n*  *  *   * #v* ^   * *** *  * *****  *    **\r\n** * **   **   *v   * * * *  *     *  *  ***\r\n *****     *v^**    *** ***  *******  **** \r\n"
  },
  {
    "id": 500,
    "name": "SPL4",
    "code": "\n HELLO: PROCEDURE OPTIONS(MAIN);\n*\n /* Hello World in SPL4 (Siemens) */\n*\n DCL PRINTC ENTRY;\n*\n CALL PRINTC('Hello World!', 12);\n RETURN;\n*\n END HELLO;\n"
  },
  {
    "id": 501,
    "name": "Splunk SPL",
    "code": "| makeresults `comment(\"Hello world in Splunk SPL\")` | eval mystring=\"Hello, World!\""
  },
  {
    "id": 502,
    "name": "Spry",
    "code": "# Hello world in Spry\n\necho \"Hello World\""
  },
  {
    "id": 503,
    "name": "SPSS",
    "code": "\n* SPSS Syntax\r\n* \"Hello World\" title in the Output Window of SPSS via SPSS Syntax.\r\n\r\nTITLE 'Hello World'.\r\n"
  },
  {
    "id": 504,
    "name": "SQL (Advantage)",
    "code": "\n-- Hello World in SQL for Advantage Database\r\n \r\nselect 'Hello World' from system.iota\r\n"
  },
  {
    "id": 505,
    "name": "SQL (DB2)",
    "code": "\n-- Hello World in SQL for DB2\r\nVALUES('hello world')\r\n"
  },
  {
    "id": 506,
    "name": "SQL (Oracle)",
    "code": "\n# Hello World in SQL for Oracle\r\n\r\nSELECT 'Hello World' FROM dual;\r\n"
  },
  {
    "id": 507,
    "name": "SQL",
    "code": "\n# Hello World in SQL\r\n\r\nSELECT 'Hello World';\r\n"
  },
  {
    "id": 508,
    "name": "sqlplus",
    "code": "\n-- Hello World in Oracle SQL*Plus\r\n\r\nprompt Hello World!\r\n"
  },
  {
    "id": 509,
    "name": "SQR",
    "code": "! Hello World in SQR\r\nbegin-program\r\n   print 'Hello, World.' (1,1)\r\nend-program"
  },
  {
    "id": 510,
    "name": "Squeak",
    "code": "\"Hello world in Squeak\"\n\nTranscript show: 'Hello World'"
  },
  {
    "id": 511,
    "name": "Squirrel",
    "code": "#!/usr/bin/squirrelsh\n// Hello world in Squirrel\nprintl(\"Hello, world!\");"
  },
  {
    "id": 512,
    "name": "SSI",
    "code": "<html><body><p>\n<!-- Hello world as Server Side Includes, embedded in HTML. -->\n<!--#set var=\"hello\" value=\"Hello, world!\" -->\n<!--#echo var=\"hello\" -->\n</p></body></html>"
  },
  {
    "id": 513,
    "name": "ST-Guide",
    "code": "\n## Hello World for ST-Guide\n\n@node \"Hello World!\"\n\nHello World!\n\n@endnode\n"
  },
  {
    "id": 514,
    "name": "Stata",
    "code": "/* Hello world in Stata */\n\n .program hello\n  1. display \"Hello, World!\"\n  2. end\n.hello\n"
  },
  {
    "id": 515,
    "name": "Sucro",
    "code": "Hello World in Sucro\r\n{R}Hello World!{end}"
  },
  {
    "id": 516,
    "name": "SuperCollider",
    "code": "// Hello World in SuperCollider\r\n\r\n\"Hello, world!\".postln;"
  },
  {
    "id": 517,
    "name": "SVG",
    "code": "\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<!-- Hello World in SVG -->\r\n\r\n<svg width=\"240\" height=\"100\" viewBox=\"0 0 240 100\" zoomAndPan=\"disable\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"  xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n  <title>Hello World</title>\r\n    <g>\r\n      <text x=\"10\" y=\"50\">Hello World</text>\r\n      <animate attributeName='opacity' values='0;1' dur='4s' fill='freeze' begin=\"0s\"/>\r\n    </g>\r\n</svg>\r\n"
  },
  {
    "id": 518,
    "name": "Swift",
    "code": "// Hello world in Swift\n\nprintln(\"Hello, world!\")"
  },
  {
    "id": 519,
    "name": "SyMAL",
    "code": "// Hello world in SyMAL\n\n'Hello, world!'\n"
  },
  {
    "id": 520,
    "name": "Symsyn",
    "code": "| Hello world in Symsyn\n\n 'hello world' []"
  },
  {
    "id": 521,
    "name": "szl",
    "code": "# Hello world in szl\n\n$global msg {Hello, world!}"
  },
  {
    "id": 522,
    "name": "T-SQL",
    "code": "\n-- Hello World in T-SQL\r\nPRINT 'Hello World'\r\n"
  },
  { "id": 523, "name": "T", "code": "; Hello world in T\n\n\"Hello World!\"" },
  {
    "id": 524,
    "name": "T9",
    "code": "\nHow to enter Hello World on a standard T9 numeric\r\nkeypad of an SMS-enabled mobile phone.\r\nT9 predictive text has to be off.\r\n\r\n44 33 555 555 666 0 9 666 777 555 3 11111\r\n"
  },
  {
    "id": 525,
    "name": "TACL",
    "code": "Comment -- Hello World for TACL (Tandem Advanced Command Language)\r\n\r\n?tacl macro\r\n\r\n#OUTPUT Hello world"
  },
  {
    "id": 526,
    "name": "TAL",
    "code": "\n!     Hello world in Tandem TAL (Transaction Application Language)\r\n      proc Hello^World main;\r\n            begin\r\n            int    .term[0:12] := [ 12 * [ \"  \" ] ],\r\n .out [0:19];\r\n            string .sout := @out << 1, .sp;\r\n \r\n            call myterm ( term[1] );\r\n            call open ( term[1], term );\r\nif <> then call abend;\r\n \r\nsout := \"Hello World\" -> @sp;\r\n            call write ( term, out, @sp-@sout );\r\nif <> then call abend;\r\nend;\r\n"
  },
  {
    "id": 527,
    "name": "Tcl",
    "code": "\n#!/usr/local/bin/tclsh\n# Hello World in Tcl\n\nputs \"Hello World!\"\n"
  },
  {
    "id": 528,
    "name": "TECO",
    "code": "\n!Hello World in TECO\r\n!The $ symbol below wouldn't actually be a printing character -\r\n!it's the [escape] character, \\u001b!\r\nFTHello World$\r\n"
  },
  {
    "id": 529,
    "name": "TeX",
    "code": "\n% Hello World in plain \\TeX\n\\immediate\\write16{Hello World!}\n\\end\n"
  },
  {
    "id": 530,
    "name": "Texinfo",
    "code": "\n\\input texinfo\n@c Hello World for Texinfo\n\n@setfilename hello\n@settitle Hello World\n\n@node Top, Hello, (dir), (dir)\n\n@menu\n* Hello:: Hello World\n@end menu\n\n@node Hello, , Top, Top\n\nHello World!\n\n@contents\n@bye\n"
  },
  { "id": 531, "name": "Thue", "code": "a::=~Hello World!\r\n::=\r\na" },
  {
    "id": 532,
    "name": "TI BASIC",
    "code": "\n10 REM Hello World in TI BASIC\r\n20 REM for the TI99 series computer\r\n100 CALL CLEAR\r\n110 PRINT \"HELLO WORLD\"\r\n120 GOTO 120\r\n"
  },
  {
    "id": 533,
    "name": "TI Extended BASIC",
    "code": "\n10 REM Hello World in Extended BASIC\r\n20 REM for the TI99 series computer\r\n100 CALL CLEAR :: DISPLAY AT(10,5):\"Hello World\" :: ACCEPT AT(20,4):A$\r\n"
  },
  {
    "id": 534,
    "name": "TI-59",
    "code": "\n      Code        Comment\n\n      LBL A       Start of program: label A\n      OP 00       Clear the four print registers\n      23          \"H\"\n      17          \"E\"\n      OP 02       Write into print register 2\n      27          \"L\"\n      27          \"L\"\n      32          \"O\"\n      00          \" \"\n      43          \"W\"\n      OP 03       Write into print register 3\n      32          \"O\"\n      35          \"R\"\n      27          \"L\"\n      16          \"D\"\n      73          \"!\"\n      OP 04       Write into print register 4\n      OP 05       Start printing\n      ADV         Line feed (optional)\n      R/S         End program\n"
  },
  {
    "id": 535,
    "name": "TI-8x",
    "code": "\nHello World for TI 8x/9x basic (tested on a TI-83)\r\n\r\n:ClrHome\r\n:Disp \"HELLO WORLD\"\r\n"
  },
  {
    "id": 536,
    "name": "TinyFugue",
    "code": ";Hello World in TinyFugue\r\n\r\n/_echo Hello, World!"
  },
  {
    "id": 537,
    "name": "Tk",
    "code": "\n#!/usr/local/bin/wish -f\n# Hello World in Tk\n\nlabel .l -text \"Hello World!\"\npack .l\n"
  },
  {
    "id": 538,
    "name": "Toy",
    "code": "\n# Hello World code in Toy Programming Language (generic way)\r\n\r\n<< \"Hello World\";\r\n"
  },
  {
    "id": 539,
    "name": "Trans",
    "code": "\n// Hello World in Trans (Transmuter Programming Language)\r\nimport Console\r\nConsole.write(\"Hello World!\")\r\n"
  },
  {
    "id": 540,
    "name": "troff",
    "code": "\n\\\"\t\"Hello, world!\" in troff\r\n\r\nHello, world!\r\n"
  },
  {
    "id": 541,
    "name": "TSO CLIST",
    "code": "\nPROC 0\n/* Hello World in TSO CLIST */\nwrite Hello World!\n"
  },
  {
    "id": 542,
    "name": "Turing Machine",
    "code": "\nHello World as a Turing machine.\n\nState   Read   |   Write     Step    Next state\n---------------|---------------------------------\n1       empty  |   H         >       2\n2       empty  |   e         >       3\n3       empty  |   l         >       4\n4       empty  |   l         >       5\n5       empty  |   o         >       6\n6       empty  |   blank     >       7\n7       empty  |   W         >       8\n8       empty  |   o         >       9\n9       empty  |   r         >       10\n10      empty  |   l         >       11\n11      empty  |   d         >       12\n12      empty  |   !         >       STOP\n"
  },
  {
    "id": 543,
    "name": "Turing",
    "code": "\n% Hello World in Turing\r\nput \"Hello World!\"\r\n"
  },
  {
    "id": 544,
    "name": "TypeScript",
    "code": "// Hello world in TypeScript\n\nalert('Hello world!');"
  },
  {
    "id": 545,
    "name": "Ubercode",
    "code": "// Hello world in Ubercode\n\n  Ubercode 1 class Hello\n\n  public function main()\n  code\n    call Msgbox(\"Hello\", \"Hello World!\")\n  end function\n\n  end class"
  },
  {
    "id": 546,
    "name": "UniComal",
    "code": "\n// Hello World in UniComal\r\n\r\nPRINT \"Hello World\"\r\n"
  },
  {
    "id": 547,
    "name": "Unix Shell",
    "code": "# Hello world for the Unix shells (sh, ksh, csh, zsh, bash, fish, xonsh, ...)\n\necho Hello World"
  },
  {
    "id": 548,
    "name": "Unlambda",
    "code": "`r```````````````.G.o.o.d.b.y.e.,. .W.o.r.l.d.!i\r\n"
  },
  {
    "id": 549,
    "name": "UnrealScript",
    "code": "\n// Hello World for UnrealScript\r\n\r\nclass HelloWorldHUD extends HudBase;\r\n\r\nsimulated function DrawHudPassC (Canvas C)\r\n{\r\n  C.SetPos( 0.50*C.ClipX , 0.50*C.ClipY);\r\n  C.DrawText(\"Hello World!\");\r\n}\r\n\r\ndefaultproperties\r\n{\r\n}\r\n"
  },
  {
    "id": 550,
    "name": "Ursala",
    "code": "\n# hello world in Ursala\r\n\r\n#executable&\r\n\r\nf = -[hello world]-!\r\n"
  },
  {
    "id": 551,
    "name": "Vala",
    "code": "// Hello World in Vala\r\n\r\nusing GLib;\r\n\r\nint main(string[] args) {\r\n   stdout.printf(\"Hello world!\\n\");\r\n   return 0;\r\n}"
  },
  {
    "id": 552,
    "name": "var'aq",
    "code": "(* Hello world in var'aq *)\n\n\"Hello, world!\" cha'"
  },
  {
    "id": 553,
    "name": "Vatical",
    "code": "+ Hello world in Vatical\n\nLITURGY:\n\tPRAY \"Hello World!\"\nAMEN.\n"
  },
  {
    "id": 554,
    "name": "VAX Macro",
    "code": "\nHello World in VAX Macro.\r\n\r\n        .title  helloworld\r\n        .ident  /hello world/\r\n;\r\n        .library        /sys$library:lib/\r\n        $libdef\r\n        $lib$routinesdef\r\n\r\n\r\n        .psect  $data,wrt,noshr,noexe,long\r\n\r\nhello:  .ascid  /Hello World!/\r\n\r\n        .psect  $code,nowrt,shr,exe,long\r\n\r\n        .entry  helloworld,^m<r9,r10,r11>\r\n\r\n        pushaq  hello                   ; output the\r\nmessage\r\n        calls   #1,g^lib$put_output     ;\r\n\r\n        ret                             ; GTFOH\r\n        .end    helloworld              ;\r\n"
  },
  {
    "id": 555,
    "name": "VAX-11 Macro",
    "code": "\n; Hello World in VAX-11 MACRO\r\n\r\n        .title hello\r\nterm_name:      .ascid /SYS$INPUT/\r\nterm_chan:      .blkw 1\r\nout_iosb:       .blkq 1\r\nmsg:    .asciz  /Hello, world!/\r\n\r\n        .entry start,0\r\n\r\n        ; establish a channel for terminal I/O\r\n        $assign_s devnam=term_name,-\r\n                chan=term_chan\r\n        blbc r0,error\r\n\r\n        ; queue the I/O request\r\n        $qio_s chan=term_chan,-\r\n                func=#io$_writevblk,-\r\n                iosb=out_iosb,-\r\n                p1=msg,-\r\n                p2=#13\r\n        blbc r0,error\r\n\r\n        $exit_s ; normal exit\r\n\r\nerror:  halt ; error condition\r\n\r\n        .end start\r\n"
  },
  {
    "id": 556,
    "name": "VBA (Excel)",
    "code": "' Hello world in Visual Basic for Applications, Excel version\n\nPrivate Sub Workbook_Open()\n    MsgBox \"Hello world!\"\nEnd Sub"
  },
  {
    "id": 557,
    "name": "VBA (Word)",
    "code": "' Hello world in Visual Basic for Applications, Word version\n\nPrivate Sub Document_Open()\n    MsgBox \"Hello world!\"\nEnd Sub"
  },
  {
    "id": 558,
    "name": "VBScript",
    "code": "\n' Hello World in VBScript (Windows Scripting Host)\r\nmsgbox \"Hello, World!\"\r\n"
  },
  {
    "id": 559,
    "name": "Velocity",
    "code": "\n<HTML>\r\n<!-- Hello World in Velocity -->\r\n<BODY>\r\n  #set( $foo = \"Hello World\" )\r\n  $foo\r\n</BODY>\r\n</HTML>\r\n"
  },
  {
    "id": 560,
    "name": "Verilog",
    "code": "\n/* Hello World in Verilog. */\r\n\r\nmodule main;\r\n\r\n initial\r\n   begin\r\n     $display(\"Hello, World\");\r\n     $finish ;\r\n   end\r\n\r\n endmodule\r\n"
  },
  {
    "id": 561,
    "name": "Vexi",
    "code": "<!-- Hello World in Vexi. -->\r\n\r\n<vexi xmlns:ui=\"vexi://ui\">\r\n    <ui:box framewidth=\"200\" frameheight=\"100\">\r\n        <ui:box text=\"Hello World!\" />\r\n        vexi.ui.frame = thisbox;\r\n    </ui:box>\r\n</vexi>\r\n/<"
  },
  {
    "id": 562,
    "name": "VHDL",
    "code": "\n--Hello World in VHDL\r\n\r\nENTITY helloworld IS\r\nEND helloworld;\r\n\r\nARCHITECTURE hw OF helloworld IS\r\n\r\nBEGIN\r\n\r\nASSERT FALSE\r\nREPORT \"HELLO, WORLD!\"\r\nSEVERITY NOTE;\r\n\r\nEND hw;\r\n"
  },
  { "id": 563, "name": "Vim Script", "code": "echo \"Hello world!\\n\"\r\n" },
  {
    "id": 564,
    "name": "Visual Basic",
    "code": "\nREM Hello World in Visual Basic for Windows\n\nVERSION 2.00\nBegin Form Form1\n   Caption         =   \"Form1\"\n   ClientHeight    =   6096\n   ClientLeft      =   936\n   ClientTop       =   1572\n   ClientWidth     =   6468\n   Height          =   6540\n   Left            =   876\n   LinkTopic       =   \"Form1\"\n   ScaleHeight     =   6096\n   ScaleWidth      =   6468\n   Top             =   1188\n   Width           =   6588\n   Begin Label Label1\n      Caption         =   \"Hello World!\"\n      Height          =   372\n      Left            =   2760\n      TabIndex        =   0\n      Top             =   2880\n      Width           =   972\n   End\nEnd\nOption Explicit\n"
  },
  {
    "id": 565,
    "name": "Visual Basic .NET",
    "code": "\n'Hello World in Visual Basic .NET (VB.NET)\r\n\r\nImports System.Console\r\n\r\nClass HelloWorld\r\n\r\n    Public Shared Sub Main()\r\n        WriteLine(\"Hello, world!\")\r\n    End Sub\r\n\r\nEnd Class\r\n"
  },
  {
    "id": 566,
    "name": "Visual Basic 6",
    "code": "\n' Hello World in Visual Basic 6\r\n\r\nPrivate Sub Form_Load()\r\nPrint \"Hello World\"\r\nEnd Sub\r\n"
  },
  {
    "id": 567,
    "name": "Visual FoxPro",
    "code": "\n*Hello World in Microsoft Visual FoxPro 5-9\r\n? \"Hello World!\"\r\n"
  },
  {
    "id": 568,
    "name": "Visual Prolog",
    "code": "/* Hello World in Visual Prolog */\r\n\r\ngoal\r\n    console::init(),\r\n    stdio::write(\"Hello World!\").\r\n"
  },
  {
    "id": 569,
    "name": "VisualWorks Smalltalk",
    "code": "\n\"Hello World! in VisualWorks Smalltalk\"\r\n\r\nDialog warn: 'Hello World!'.\r\n"
  },
  {
    "id": 570,
    "name": "VMS-DCL",
    "code": "\n$ ! Hello World in Digital Command Language for the VMS operating system\n\n$ WRITE SYS$OUTPUT \"Hello World!\"\n"
  },
  {
    "id": 571,
    "name": "VRML",
    "code": "\n#VRML V2.0 utf8\r\n# Hello World in VRML\r\n\r\nShape\r\n        {\r\n        geometry Text\r\n                {string \"Hello World!\"}\r\n        }\r\n"
  },
  {
    "id": 572,
    "name": "VSL",
    "code": "\n/* \"hello, world\" in VSL (the script language of Virtools),\r\nto be used in a \"Run VSL\" building block */\r\n \r\nvoid main()\r\n{\r\n    bc.OutputToScreen(\"hello, world\");\r\n}\r\n"
  },
  {
    "id": 573,
    "name": "wenyan",
    "code": "\n注曰。「「 Hello world in wenyan 」」。\n吾有一言。曰「「問天地好在。」」。書之。\n"
  },
  {
    "id": 574,
    "name": "Whenever",
    "code": "/* Hello world in Whenever */\n\n1 print(\"Hello world!\");"
  },
  {
    "id": 575,
    "name": "Whirl",
    "code": "110001100111000111110000010001111100011000000000110000011100000110000010000\r\n011000111100000111110000011100001111100100011001110000111111100001001111100\r\n011000000000110000011000111110001000000000000000000001001111110000111111000\r\n100000000000000000000000000011111000100100000000111111000100000000000001001\r\n000011111000001110000111110010001100011000000100010000011000000000000000001\r\n100000111001111100111111000100111001111000011100010011111110000111000110000\r\n000000000000000000000000000001000100001111100000111000011111001100011100000\r\n111000000010001111100000111110001000000000111000110000000000000000000000000\r\n000000100100001111100000111000011100010000000000000100010000111110001110001\r\n111100111111000011100001100111000111000000000001111100000111000110000110110\r\n001000000000010000001111100000111000011111000000010001110000000000000000000\r\n000000000000100000011111000001100"
  },
  {
    "id": 576,
    "name": "Whitespace",
    "code": "\nHello #World #in #Whitespace\t* # #\t* # # #\r\n+\t*[Space]\r\n+ #is #marked #with\"#\" # #[tab]\t#with\"*\"\t*line-feed #with #\"+\"\t* #\t*so\r\n+it\t#would\r\n+be #easier #to #write #again... #All\t*the\t*non-whitespace-characters #are\t*ignored...\t* # #\r\n+\t*\r\n+ # # # # #\t*\t* #\t*\t* # #\r\n+\t*\r\n+ # # # # #\t*\t* #\t*\t*\t*\t*\r\n+\t*\r\n+ # # # # #\t* # # # # #\r\n+\t*\r\n+ # # # # #\t* #\t* #\t*\t*\t*\r\n+\t*\r\n+ # # # # #\t*\t* #\t*\t*\t*\t*\r\n+\t*\r\n+ # # # # #\t*\t*\t* # #\t* #\r\n+\t*\r\n+ # # # # #\t*\t* #\t*\t* # #\r\n+\t*\r\n+ # # # # #\t*\t* # #\t* # #\r\n+\t*\r\n+ # # # # #\t* # # # #\t*\r\n+\t*\r\n+ # # # # #\t* #\t* #\r\n+\t*\r\n+ # #\r\n+\r\n+\r\n+"
  },
  {
    "id": 577,
    "name": "wml",
    "code": "\n# Hello World in Wesnoth Markup Language (wml)\r\n#define HELLOWORLD\r\n  [message]\r\n    speaker=\"narrator\"\r\n    message=_\"Hello World\"\r\n  [/message]\r\n#enddef\r\n"
  },
  {
    "id": 578,
    "name": "Wolfram",
    "code": "(* Hello world in Wolfram Language *)\n\nCloudDeploy[\"Hello World\"]"
  },
  {
    "id": 579,
    "name": "WSH",
    "code": "\n// Hello World for the Windows Scripting Host\r\nWScript.Echo(\"Hello World!\");\r\n"
  },
  {
    "id": 580,
    "name": "X++",
    "code": "\n// Hello World in X++ (Microsoft Axapta)\r\n\r\nclass classHelloWorld\r\n{\r\n}\r\n\r\nstatic void main(args Args)\r\n{\r\n    dialog   dialog;\r\n    ;\r\n    dialog = new dialog();\r\n    dialog.addText(\"Hello World!\");\r\n    dialog.run();\r\n}\r\n"
  },
  {
    "id": 581,
    "name": "Xbase++",
    "code": "Hello World in Xbase++\r\nfunc Main()\r\n  Qout(\"Hello World!\")\r\nreturn 1"
  },
  {
    "id": 582,
    "name": "xblite",
    "code": "\n' Hello World in xblite, Windows GUI mode\r\n\r\n\tIMPORT \"gdi32\"\r\n\tIMPORT \"user32\"\r\n\r\nDECLARE FUNCTION Entry ()\r\n\r\nFUNCTION Entry ()\r\n\tMessageBoxA (0, &\"Hello World!\", &\"Hello World Window\", $$MB_OK)\r\nEND FUNCTION\r\nEND PROGRAM\r\n"
  },
  {
    "id": 583,
    "name": "XHTML",
    "code": "\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\r\n   \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n<!-- Hello World in XHTML -->\r\n<html\r\n xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\r\n <head>\r\n   <title>\r\n     Hello World!\r\n   </title>\r\n </head>\r\n <body>\r\n   <h1>Hello World!</h1>\r\n </body>\r\n</html>\r\n"
  },
  {
    "id": 584,
    "name": "XLogo",
    "code": "#Hello World in XLogo\r\n\r\nto helloworld\r\n resetall\r\n hideturtle\r\n fd 20 left 180\r\n fd 40 left 180\r\n fd 20 right 90\r\n fd 20 left 90\r\n fd 20 left 180\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 right 90\r\n fd 20 right 90\r\n fd 10 right 90\r\n fd 20 left 90\r\n fd 10 left 90\r\n fd 30 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 60 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 180\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 40 left 90\r\n fd 20 right 90\r\n fd 20 right 90\r\n fd 5  left 90  \r\n fd 5  left 90  \r\n fd 25 left 180\r\n fd 40 left 90\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 40 left 180\r\n fd 40\r\nend"
  },
  {
    "id": 585,
    "name": "XPL0",
    "code": "\n\\Hello World in XPL0\r\ncode Text=12;\r\nText(0, \"Hello World!\r\n\")\r\n"
  },
  {
    "id": 586,
    "name": "XQuery",
    "code": "\n(: Hello World with XQuery :)\r\nlet $i := \"Hello World\"\r\nreturn $i\r\n"
  },
  {
    "id": 587,
    "name": "XSL-FO",
    "code": "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!-- Hello World in XSL-FO -->\r\n<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\r\n    <fo:layout-master-set>\r\n        <fo:simple-page-master master-name=\"LetterPage\" page-width=\"8.5in\" page-height=\"11in\">?\r\n            <fo:region-body region-name=\"PageBody\" margin=\"0.7in\"/>\r\n        </fo:simple-page-master>\r\n    </fo:layout-master-set>\r\n    <fo:page-sequence master-reference=\"LetterPage\">\r\n        <fo:flow flow-name=\"PageBody\">\r\n            <fo:block font-size=\"12pt\" font-family=\"courier\">Hello, World</fo:block>\r\n        </fo:flow>\r\n    </fo:page-sequence>\r\n</fo:root>\r\n"
  },
  {
    "id": 588,
    "name": "XSLT",
    "code": "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!-- Hello World in XSLT -->\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n    <xsl:template match=\"/\">\r\n        <xsl:text>Hello World!</xsl:text>\r\n    </xsl:template>\r\n</xsl:stylesheet>\r\n"
  },
  {
    "id": 589,
    "name": "Yacas",
    "code": "Hello World in Yacas\r\n\r\nWriteString(\"Hello World\")"
  },
  {
    "id": 590,
    "name": "Zig",
    "code": "// Hello world in Zig\n\nconst io = @import(\"std\").io;\n\npub fn main(args: [][]u8) -> %void {\n    %%io.stdout.printf(\"Hello, world!\\n\");\n}\n"
  },
  {
    "id": 591,
    "name": "ZIM",
    "code": "\n% Hello World in ZIM (database and development language)\r\n\r\nout \"Hello World\"\r\n"
  },
  {
    "id": 592,
    "name": "Vale",
    "code": "import stdlib.*;\r\n\r\nexported func main() {\r\n  println(\"Hello world!\");\r\n}"
  },
  {
    "id": 593,
    "name": "Carbon",
    "code": "package sample api;\r\nfn Main() -> i32 {\r\nPrint(\"Hello World in Carbon\");\r\nreturn 0;\r\n}"
  },
  {
    "id": 594,
    "name": "Bosque",
    "code": "namespace NSMain;\r\n\r\nfunction increase(arg: Int): Int {\r\n    arg = arg + 1;\r\n    return arg;\r\n}\r\n\r\nentrypoint function main(num: Int): Int {\r\n    return increase(num);\r\n}"
  },
  {
    "id": 595,
    "name": "Cairo",
    "code": "fn main() {\r\n    println!(\"Hello, World!\");\r\n}"
  },
  {
    "id": 596,
    "name": "Gleam",
    "code": "import gleam/io\r\n\r\npub fn main() {\r\n  io.println(\"Hello, Joe!\")\r\n}\r\n"
  },
  {
    "id": 597,
    "name": "Hylo",
    "code": "public fun main() {\r\n  print(\"Hello, World!\")\r\n}\r\n"
  },
  {
    "id": 598,
    "name": "Ætherlang",
    "code": "@ THIS INCLUDES THE TWO NEEDED LIBRARIES\r\nuse :base\r\nuse :io :io.\r\n@ THIS PRINTS THE TEXT\r\nio.println \"Hello, World!\"\r\n\r\n@ Or\r\nUSE :IO\r\nGREETING = \"Hello, World!\"\r\nPRINTLN GREETING"
  },
  {
    "id": 601,
    "name": "Mercury",
    "code": " :- module hello.\r\n :- interface.\r\n :- import_module io.\r\n :- pred main(io::di, io::uo) is det.\r\n\r\n :- implementation.\r\n main(!IO) :-\r\n \tio.write_string(\"Hello, World!\\n\", !IO)."
  },
  {
    "id": 602,
    "name": "A#",
    "code": "with Ada.Text_IO;\r\nuse Ada.Text_IO;\r\nprocedure Hello_Dotnet is\r\nbegin\r\n Put_Line(Item => “Hello, world!”);\r\nend Hello_Dotnet;"
  },
  {
    "id": 603,
    "name": "ABAP",
    "code": "REPORT TEST.\r\nWRITE 'Hello, World!'."
  },
  { "id": 604, "name": "Bash", "code": "echo \"Hello, world!\"" },
  {
    "id": 605,
    "name": "Solidity",
    "code": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.0 <0.9.0;\r\n\r\ncontract HelloWorld {\r\n    function helloWorld() external pure returns (string memory) {\r\n        return \"Hello, World!\";\r\n    }\r\n}"
  },
  {
    "id": 606,
    "name": "WebAssembly",
    "code": "(module\r\n    (import \"wasi_unstable\" \"fd_write\"\r\n        (func $fd_write (param i32 i32 i32 i32) (result i32))\r\n    )\r\n\r\n    (memory 1)\r\n    (export \"memory\" (memory 0))\r\n\r\n    (data (i32.const 0) \"\\08\\00\\00\\00\\0c\\00\\00\\00Hello World\\n\")\r\n\r\n    (func $main (export \"_start\")\r\n        i32.const 1\r\n        i32.const 0\r\n        i32.const 1\r\n        i32.const 20\r\n        call $fd_write\r\n        drop\r\n    )\r\n)"
  },
  {
    "id": 611,
    "name": "C#",
    "code": "//Hello World in C#\r\nclass HelloWorld\r\n{\r\n    static void Main()\r\n    {\r\n        System.Console.WriteLine(\"Hello, World!\");\r\n    }\r\n}"
  },
  {
    "id": 612,
    "name": "PureScript",
    "code": "module Main where\r\n\r\nimport Effect.Console (log)\r\n\r\nmain :: Effect Unit\r\nmain = log \"Hello, World!\""
  },
  { "id": 613, "name": "ReScript", "code": "Js.log(\"Hello World\")" },
  {
    "id": 614,
    "name": "Odin",
    "code": "package main\r\n\r\nimport \"core:fmt\"\r\n\r\nmain :: proc() {\r\n    fmt.printf(\"Hello, world!\\n\");\r\n}"
  },
  {
    "id": 615,
    "name": "Red",
    "code": "Red [Title: \"Hello World in Red\"]\r\nprint \"Hello, World!\""
  },
  {
    "id": 616,
    "name": "Mojo",
    "code": "def main():\r\n    print(\"Hello, World!\")"
  },
  { "id": 617, "name": "Starlark", "code": "print(\"Hello World\")" },
  {
    "id": 618,
    "name": "Flow",
    "code": "// Print \"Hello, World!\"\r\nprintln(\"Hello, World!\");"
  },
  { "id": 619, "name": "Standard ML", "code": "print \"Hello, world!\\n\";" },
  {
    "id": 620,
    "name": "F*",
    "code": "module Hello\r\n\r\nlet main = FStar.IO.print_string \"Hello World\\n\""
  },
  {
    "id": 621,
    "name": "V",
    "code": "fn main() {\r\n\tprintln('Hello, World!')\r\n}"
  },
  {
    "id": 622,
    "name": "Pony",
    "code": "actor Main\r\n  new create(env: Env) =>\r\n    env.out.print(\"Hello, World!\")"
  },
  {
    "id": 623,
    "name": "Ballerina",
    "code": "import ballerina/io;\r\n\r\npublic function main() {\r\n    io:println(\"Hello World\");\r\n}"
  },
  {
    "id": 624,
    "name": "C3",
    "code": "import std::io;\r\n\r\nfn void main() {\r\n    io::printn(\"Hello, World!\");\r\n}"
  },
  {
    "id": 625,
    "name": "Factor",
    "code": "USING: io ;\r\n\"Hello World\" print"
  },
  { "id": 626, "name": "Flux", "code": "out(\"Hello, World!\")" },
  { "id": 627, "name": "Wren", "code": "System.print(\"Hello, World!\")" },
  {
    "id": 628,
    "name": "Cython",
    "code": "cdef void hello():\r\n    print(\"Hello, World!\")\r\n\r\nhello()"
  },
  {
    "id": 629,
    "name": "Wa",
    "code": "(module\r\n  (import \"console\" \"log\" (func $log (param i32)))\r\n  (memory 1)\r\n  (data (i32.const 0) \"Hello, World!\\00\")\r\n  (func $main\r\n    i32.const 0\r\n    call $log\r\n  )\r\n  (export \"main\" (func $main))\r\n)\r\n"
  },
  {
    "id": 630,
    "name": "Luna",
    "code": "import Std.Base\r\n\r\ndef main:\r\n    print \"Hello world\"\r\n    print (2 + 2)"
  },
  { "id": 631, "name": "Micropython", "code": "print(\"Hello, World!\")" },
  { "id": 632, "name": "Moonscript", "code": "print \"Hello, World!\"" },
  { "id": 633, "name": "Cubescript", "code": "echo \"Hello, World!\"" },
  {
    "id": 634,
    "name": "Koka",
    "code": "fun main() {\r\n  println(\"Hello, World!\")\r\n}"
  },
  {
    "id": 635,
    "name": "Zephir",
    "code": "namespace Test;\r\n\r\nclass Hello {\r\n    public function say() {\r\n        echo \"Hello, World!\";\r\n    }\r\n}"
  },
  {
    "id": 636,
    "name": "Enso",
    "code": "hello = \"Hello, World!\"\r\nprint hello"
  },
  {
    "id": 637,
    "name": "Frege",
    "code": "module Hello where\r\n\r\ngreeting friend = \"Hello, \" ++ friend ++ \"!\"\r\n\r\nmain args = do\r\n    println (greeting \"World\")"
  },
  {
    "id": 638,
    "name": "Batch",
    "code": "@echo off\r\necho Hello, World!\r\npause"
  },
  {
    "id": 639,
    "name": "Qml",
    "code": "import QtQuick 2.15\r\nimport QtQuick.Controls 2.15\r\n\r\nApplicationWindow {\r\n    visible: true\r\n    width: 640\r\n    height: 480\r\n    title: \"Hello, World!\"\r\n\r\n    Text {\r\n        text: \"Hello, World!\"\r\n        anchors.centerIn: parent\r\n        font.pixelSize: 24\r\n    }\r\n}"
  },
  {
    "id": 640,
    "name": "Terra",
    "code": "C = terralib.includec(\"stdio.h\")\r\n\r\nterra hello()\r\n    C.printf(\"Hello, World!\\n\")\r\nend\r\n\r\nhello()"
  },
  {
    "id": 641,
    "name": "Opa",
    "code": "function page() {\r\n    <h1>Hello, World!</h1>\r\n}\r\n\r\nServer.start(\r\n    Server.http,\r\n    {~page, title: \"Hello, World!\"}\r\n)"
  },
  {
    "id": 642,
    "name": "Yara",
    "code": "rule HelloWorld {\r\n    strings:\r\n        $hello = \"Hello, World!\"\r\n    condition:\r\n        $hello\r\n}"
  },
  {
    "id": 643,
    "name": "Literate CoffeeScript",
    "code": "Write your CoffeeScript code as Markdown:\r\n\r\n    console.log \"Hello, World!\""
  },
  {
    "id": 644,
    "name": "Halide",
    "code": "#include <Halide.h>\r\n#include <iostream>\r\n\r\nusing namespace Halide;\r\n\r\nint main() {\r\n    std::cout << \"Hello, World!\" << std::endl;\r\n    return 0;\r\n}"
  },
  {
    "id": 645,
    "name": "Nextflow",
    "code": "process sayHello {\r\n    output:\r\n    path 'output.txt'\r\n\r\n    script:\r\n    \"\"\"\r\n    echo 'Hello, World!' > output.txt\r\n    \"\"\"\r\n}\r\n\r\nworkflow {\r\n    sayHello()\r\n}"
  },
  {
    "id": 646,
    "name": "PL/I",
    "code": "HelloWorld: proc options (main);\r\n    put skip list (\"Hello, World!\");\r\nend HelloWorld;"
  },
  {
    "id": 647,
    "name": "Scala.js",
    "code": "import scala.scalajs.js.annotation._\r\n\r\n@JSExportTopLevel(\"main\")\r\nobject HelloWorld {\r\n  def main(): Unit = {\r\n    println(\"Hello, World!\")\r\n  }\r\n}"
  },
  {
    "id": 648,
    "name": "Svelte",
    "code": "<script>\r\n let name = 'world';\r\n</script>\r\n\r\n<h1>Hello {name}!</h1>"
  },
  {
    "id": 649,
    "name": "Jison",
    "code": "%lex\r\n%%\r\n\"Hello, World!\" { return 'HELLO'; }\r\n. { return 'ERROR'; }\r\n\r\n%%\r\n\r\n%start hello\r\n\r\nhello\r\n    : \"Hello, World!\" { console.log(\"Hello, World! recognized!\"); }\r\n    ;"
  },
  {
    "id": 650,
    "name": "Unison",
    "code": "helloWorld : '{IO, Exception} ()\r\nhelloWorld _ = printLine \"Hello, World!\""
  },
  {
    "id": 651,
    "name": "Taichi",
    "code": "import taichi as ti\r\n\r\nti.init(arch=ti.cpu)\r\n\r\n@ti.kernel\r\ndef hello():\r\n    print(\"Hello, World!\")\r\n\r\nhello()"
  },
  {
    "id": 652,
    "name": "Moonbit",
    "code": "fn main {\r\n    println(\"Hello, World!\")\r\n}"
  },
  { "id": 653, "name": "Ampl", "code": "display \"Hello, World!\";" },
  { "id": 654, "name": "Sagemath", "code": "print(\"Hello, World!\")" },
  {
    "id": 655,
    "name": "Dtrace",
    "code": "BEGIN\r\n{\r\n    printf(\"Hello, World!\\n\");\r\n}"
  },
  {
    "id": 656,
    "name": "Expect",
    "code": "#!/usr/bin/expect\r\n\r\nputs \"Hello, World!\""
  },
  { "id": 657, "name": "Gap", "code": "Print(\"Hello, World!\\n\");" },
  {
    "id": 658,
    "name": "AspectJ",
    "code": "public class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, world!\");\r\n    }\r\n}"
  },
  {
    "id": 659,
    "name": "SystemVerilog",
    "code": "module HelloWorld;\r\n    initial begin\r\n        $display(\"Hello, World!\");\r\n    end\r\nendmodule"
  },
  { "id": 660, "name": "QBasic", "code": "PRINT \"Hello, World!\"" },
  {
    "id": 661,
    "name": "C2",
    "code": "module hello_world;\r\nimport stdio as io;\r\n\r\nfn i32 main(i32 argc, char** argv) {\r\n    io.printf(\"Hello, World!\\n\");\r\n    return 0;\r\n}"
  },
  { "id": 662, "name": "ECL", "code": "OUTPUT('Hello, World!');" },
  {
    "id": 663,
    "name": "Progbase",
    "code": "program HelloWorld\r\n    function main()\r\n        output(\"Hello, World!\")\r\n    end function\r\nend program"
  },
  {
    "id": 664,
    "name": "Powerbuilder",
    "code": "// In a window's Open event or a button's Clicked event\r\nMessageBox(\"Hello\", \"Hello, World!\")"
  },
  { "id": 665, "name": "Cryptol", "code": ":set ascii=on\r\n\"Hello World\"" },
  { "id": 666, "name": "Elvish", "code": "echo \"Hello, world!\"" },
  { "id": 667, "name": "Toit", "code": "main:\r\n  print \"Hello, World!\"" },
  {
    "id": 668,
    "name": "Prometheus",
    "code": "global:\r\n  scrape_interval: 15s\r\n\r\nscrape_configs:\r\n  - job_name: 'prometheus'\r\n    static_configs:\r\n      - targets: ['localhost:9090']"
  },
  {
    "id": 669,
    "name": "TLA+",
    "code": "---- MODULE HelloWorld ----\r\nEXTENDS Sequences\r\n\r\nVARIABLES message\r\n\r\nInit == message = \"Hello, World!\"\r\n\r\nNext == UNCHANGED message\r\n\r\nSpec == Init /\\ [][Next]_message\r\n======"
  },
  {
    "id": 670,
    "name": "Dogescript",
    "code": "plz console.loge with \"Hello, World!\""
  },
  {
    "id": 671,
    "name": "WDL",
    "code": "version 1.0\r\n\r\nworkflow hello_world {\r\n    input {\r\n        String name\r\n    }\r\n\r\n    call write_greeting {\r\n        input: greet_name = name\r\n    }\r\n}\r\n\r\ntask write_greeting {\r\n    input {\r\n        String greet_name\r\n    }\r\n\r\n    command {\r\n        echo \"Hello, ${greet_name}!\"\r\n    }\r\n\r\n    output {\r\n        File outfile = stdout()\r\n    }\r\n}"
  },
  { "id": 672, "name": "Observable", "code": "md`Hello, World!`" },
  { "id": 673, "name": "Jai", "code": "#run\r\nprintf(\"Hello, World!\\n\");" },
  {
    "id": 674,
    "name": "AutoIt",
    "code": "MsgBox(0, \"AutoIt\", \"Hello, World!\")"
  },
  { "id": 675, "name": "Jakt", "code": "println(\"Hello, World!\")" },
  {
    "id": 676,
    "name": "eC",
    "code": "class Main : Application\r\n{\r\n   void Main()\r\n   {\r\n      PrintLn(\"Hello, World!\");\r\n   }\r\n}"
  },
  { "id": 677, "name": "Mathics", "code": "Print[\"Hello, World!\"];" },
  { "id": 678, "name": "Ring", "code": "see \"Hello, World!\"" },
  {
    "id": 679,
    "name": "Golo",
    "code": "module hello.world\r\n\r\nfunction main = |args| {\r\n  println(\"Hello World\")\r\n}"
  },
  {
    "id": 680,
    "name": "Datalog",
    "code": "hello(\"Hello, World!\").\r\n?- hello(X)."
  },
  { "id": 681, "name": "Mirah", "code": "puts \"Hello, World!\"" },
  {
    "id": 682,
    "name": "Isabelle",
    "code": "theory HelloWorld\r\nimports Main\r\nbegin\r\n\r\ndefinition HelloWorld :: \"string\" where\r\n  \"HelloWorld ≡ ''Hello, World!''\"\r\n\r\nlemma hello_world: \"HelloWorld = ''Hello, World!''\"\r\n  by (simp add: HelloWorld_def)\r\n\r\nend"
  },
  {
    "id": 683,
    "name": "YoptaScript",
    "code": "ксива.малява(\"Hello, World!\") нах"
  },
  {
    "id": 684,
    "name": "Cil",
    "code": ".assembly HelloWorld {}\r\n.method public static void Main() cil managed\r\n{\r\n    .entrypoint\r\n    ldstr \"Hello, World!\"\r\n    call void [mscorlib]System.Console::WriteLine(string)\r\n    ret\r\n}"
  },
  { "id": 685, "name": "Mu", "code": "print('Hello, World!')" },
  { "id": 686, "name": "Xojo", "code": "Print(\"Hello, World!\")" },
  {
    "id": 687,
    "name": "Docopt",
    "code": "\"\"\"\r\nUsage:\r\n  hello.py hello\r\n\r\nOptions:\r\n  -h --help     Show this screen.\r\n\"\"\"\r\n\r\nfrom docopt import docopt\r\n\r\nif __name__ == \"__main__\":\r\n    args = docopt(__doc__)\r\n    if args[\"hello\"]:\r\n        print(\"Hello, World!\")"
  },
  {
    "id": 688,
    "name": "X10",
    "code": "class Example {\r\n    public static def main(args: Rail[String]): void {\r\n        Console.OUT.println(\"Hello, World!\");\r\n    }\r\n}"
  },
  {
    "id": 689,
    "name": "Flow9",
    "code": "import runtime;\r\n\r\nmain() {\r\n    println(\"Hello, World!\");\r\n}"
  },
  { "id": 690, "name": "Raku", "code": "say \"Hello, World!\";" },
  {
    "id": 691,
    "name": "OOC",
    "code": "main: func {\r\n    \"Hello, World!\" println()\r\n}"
  },
  { "id": 692, "name": "Roy", "code": "print(\"Hello, World!\")" },
  { "id": 693, "name": "ArkScript", "code": "(print \"Hello, World!\")" },
  { "id": 694, "name": "XBase", "code": "? \"Hello, World!\"" },
  { "id": 695, "name": "Pyret", "code": "print(\"Hello, World!\")" },
  {
    "id": 696,
    "name": "Was",
    "code": "(func main (result int)\r\n  (print \"Hello, World!\")\r\n  (return 0)\r\n)"
  },
  { "id": 697, "name": "Ioke", "code": "\"Hello, World!\" println" },
  {
    "id": 698,
    "name": "Modelica",
    "code": "model HelloWorld\r\n  annotation (experiment(StopTime=1));\r\nequation\r\n  when initial() then\r\n    Modelica.Utilities.Streams.print(\"Hello, World!\");\r\n  end when;\r\nend HelloWorld;"
  },
  { "id": 699, "name": "Neko", "code": "$print(\"Hello, World!\");" },
  {
    "id": 700,
    "name": "Gnuplot",
    "code": "gnuplot> set title \"Hello World\"\r\ngnuplot> replot"
  },
  {
    "id": 701,
    "name": "Alpaca",
    "code": "let hello = \"Hello, World!\"\r\nprintln(hello)"
  },
  { "id": 702, "name": "Wing", "code": "log(\"Hello, World!\");" },
  {
    "id": 703,
    "name": "Xtend",
    "code": "def sayHello(String name) '''\r\n    Hello «name» !\r\n'''"
  },
  { "id": 704, "name": "XL", "code": "writeln \"Hello World\"" },
  { "id": 705, "name": "LiveScript", "code": "console.log \"Hello, world!\"" },
  { "id": 706, "name": "Curl", "code": "{text \"Hello, World!\"}" },
  { "id": 707, "name": "Fancy", "code": "\"Hello World\" println" },
  { "id": 708, "name": "CLIPS", "code": "(printout t \"Hello, World!\" crlf)" },
  {
    "id": 709,
    "name": "SourcePawn",
    "code": "#include <sourcemod>\r\n\r\npublic void OnPluginStart() {\r\n    PrintToServer(\"Hello, World!\");\r\n}"
  },
  {
    "id": 710,
    "name": "Fantom",
    "code": "// Hello from Fantom!\r\nclass HelloWorld {\r\n  static Void main() {\r\n    echo(\"Hello World\")\r\n  }\r\n}"
  },
  { "id": 711, "name": "Civet", "code": "console.log(\"Hello, World!\");" },
  {
    "id": 712,
    "name": "PL/pgSQL",
    "code": "CREATE FUNCTION hello_world() RETURNS VOID AS $$\r\nBEGIN\r\n    RAISE NOTICE 'Hello, World!';\r\nEND;\r\n$$ LANGUAGE plpgsql;"
  },
  {
    "id": 713,
    "name": "Logtalk",
    "code": ":- object(hello_world).\r\n    :- initialization((write('Hello, World!'), nl)).\r\n:- end_object."
  },
  {
    "id": 714,
    "name": "Object Pascal",
    "code": "program ObjectPascalExample;\r\n\r\ntype\r\n   THelloWorld = class\r\n      procedure Put;\r\n   end;\r\n\r\nprocedure THelloWorld.Put;\r\nbegin\r\n   Writeln('Hello World');\r\nend;\r\n\r\nvar\r\n   HelloWorld: THelloWorld;\r\n\r\nbegin\r\n   HelloWorld := THelloWorld.Create;\r\n   HelloWorld.Put;\r\n   HelloWorld.Free;\r\nend."
  },
  {
    "id": 715,
    "name": "Dockerfile",
    "code": "FROM alpine\r\nCMD [\"echo\", \"Hello, World!\"]\r\n\r\ndocker build -t hello .\r\ndocker run --rm hello"
  },
  { "id": 716, "name": "Reia", "code": "\"Hello, world!\".puts()" },
  {
    "id": 718,
    "name": "Whiley",
    "code": "import std::ascii\r\nimport std::io\r\n\r\nmethod main(ascii::string[] args):\r\n    io::println(\"Hello World\")"
  },
  {
    "id": 719,
    "name": "Roc",
    "code": "app [main!] { cli: platform \"https://github.com/roc-lang/basic-cli/releases/download/0.19.0/Hj-J_zxz7V9YurCSTFcFdu6cQJie4guzsPMUi5kBYUk.tar.br\" }\r\n\r\nimport cli.Stdout\r\n\r\nmain! = |_args|\r\n    Stdout.line!(\"Hello, World!\")"
  },
  { "id": 720, "name": "Rhai", "code": "print(\"Hello, World!\");" },
  {
    "id": 721,
    "name": "Papyrus",
    "code": "ScriptName HelloWorldScript\r\n\r\nEvent OnInit()\r\n    Debug.Trace(\"Hello, World!\")\r\nEndEvent"
  },
  {
    "id": 722,
    "name": "Aardio",
    "code": "import console\r\nconsole.log(\"Hello World\")"
  },
  { "id": 723, "name": "Asteria", "code": "std.io.putln(\"Hello World\");" },
  {
    "id": 724,
    "name": "AnalF∗ck",
    "code": "あくしろよ\r\nいいよ！\r\nアーッ！アーッ！\r\nあのさぁ…あのさぁ…あのさぁ…あくしろよ\r\nアーッ！アーッ！\r\nあのさぁ…あのさぁ…あくしろよ\r\nあのさぁ…あのさぁ…あくしろよ\r\nあのさぁ…あのさぁ…あくしろよ\r\nあくしろよ\r\nアーッ！アーッ！\r\nあのさぁ…あのさぁ…あくしろよ\r\nあのさぁ…あのさぁ…あくしろよ\r\nあのさぁ…あのさぁ…あくしろよ\r\nあくしろよ\r\nアーッ！アーッ！\r\nあのさぁ…あのさぁ…あくしろよ\r\nあのさぁ…あのさぁ…あくしろよ\r\nあのさぁ…あのさぁ…あくしろよ\r\nあくしろよ\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nあくしろよ\r\n来いよ！\r\nアーッ！アーッ！あのさぁ…あのさぁ…あくしろよあくしろよ\r\nあのさぁ…あくしろよ\r\nファッ！？\r\nアーッ！アーッ！\r\nあのさぁ…あくしろよ\r\nファッ！？\r\nあのさぁ…あくしろよ\r\nファッ！？ファッ！？\r\nあのさぁ…\r\nファッ！？\r\nアーッ！アーッ！\r\nアーッ！アーッ！\r\nアーッ！アーッ！\r\nあくしろよあくしろよあくしろよあくしろよ\r\nあくしろよあくしろよあくしろよあくしろよ\r\nファッ！？\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nｱｰｯ!ｱｰｯ!ｱｰｯ!\r\nあのさぁ…あのさぁ…あのさぁ…あのさぁ…あのさぁ…\r\nファッ！？\r\nアーッ！アーッ！\r\nファッ！？\r\nあのさぁ…\r\nファッ！？\r\nアーッ！アーッ！\r\nあのさぁ…あくしろよ\r\nあのさぁ…あくしろよ\r\nファッ！？\r\nアーッ！アーッ！\r\nあのさぁ…あのさぁ…\r\nファッ！？"
  },
  { "id": 725, "name": "ALAGUF", "code": "\"Hello World\"#!" },
  { "id": 726, "name": "ABS", "code": "echo(\"Hello World\")" },
  {
    "id": 727,
    "name": "Csound",
    "code": "<CsoundSynthesizer>\r\n<CsOptions>\r\n-odac\r\n</CsOptions>\r\n<CsInstruments>\r\ninstr 1\r\n    prints \"Hello, World!\"\r\nendin\r\n</CsInstruments>\r\n<CsScore>\r\ni 1 0 1\r\n</CsScore>\r\n</CsoundSynthesizer>"
  },
  { "id": 728, "name": "MiniZinc", "code": "output [\"Hello, World!\\n\"];" },
  { "id": 729, "name": "E", "code": "println(\"Hello, World!\")" },
  {
    "id": 730,
    "name": "Hamler",
    "code": "module Main where\r\n\r\nimport System.IO\r\n\r\nmain = print \"Hello, World!\""
  },
  {
    "id": 731,
    "name": "Gherkin",
    "code": "Feature: Hello World\r\n  Scenario: Print Hello World\r\n    Given I have a console\r\n    When I print \"Hello, World!\"\r\n    Then I should see \"Hello, World!\" on the screen"
  },
  {
    "id": 759,
    "name": "0815",
    "code": "<:48:x<:65:=<:6C:$=$=$$~<:03:+\r\n$~<:ffffffffffffffb1:+$<:77:~$\r\n~<:fffffffffffff8:x+$~<:03:+$~\r\n<:06:x-$x<:0e:x-$=x<:43:x-$"
  },
  { "id": 760, "name": "11l", "code": "print(‘Hello world!’)" },
  {
    "id": 761,
    "name": "360 Assembly",
    "code": "HELLO    CSECT \r\n         USING HELLO,15\r\n         LA    1,MSGAREA     Point Register 1 to message area\r\n         SVC   35            Invoke SVC 35 (Write to Operator) \r\n         BR    14            Return\r\nMSGAREA  EQU   *             Message Area\r\n         DC    AL2(19)       Total area length = 19 (Prefix length:4 + Data Length:15) \r\n         DC    XL2'00'       2 bytes binary of zeros\r\n         DC    C'Hello world!'  Text to be written to system console\r\n         END"
  },
  {
    "id": 762,
    "name": "IBM Z HL/ASM",
    "code": "        PRINT ON,GEN,DATA\r\nHELLO   CSECT\r\nHELLO   RMODE ANY\r\nHELLO   AMODE 31\r\n*\r\n* Prolog\r\n*\r\n        SAVE (14,12)\r\n        BASR R12,0\r\n        USING *,R12\r\n        STORAGE OBTAIN,LENGTH=DYNL,ADDR=(R11)\r\n        USING DYNAREA,R11\r\n\r\n        LA R2,DSA\r\n        ST R2,8(,R13)\r\n        ST R13,DSA+4\r\n        LR R13,R2\r\n*\r\n* Body\r\n* Write Hello World to STDOUT\r\n*\r\n\r\n*\r\n* Store values into parameter list\r\n*\r\n        MVC REC(HWL),HW\r\n        LA  R1,REC\r\n        ST  R1,RECA\r\n        LA  R1,HWL\r\n        ST  R1,RECL\r\n        L   R1,STDOUT\r\n        ST  R1,FD\r\n        L   R1,BPXALET\r\n        ST  R1,ALET\r\n\r\n        CALL  BPX1WRT,(FD,                                             x\r\n               RECA,                                                   x\r\n               ALET,                                                   x\r\n               RECL,                                                   x\r\n               RV,                                                     x\r\n               RC,                                                     x\r\n               RN),MF=(E,BPXWRTD)\r\n\r\n        L   R8,RV\r\n        L   R9,RC\r\n        L   R10,RN\r\n*\r\n* Epilog\r\n*\r\n        L   R13,DSA+4\r\n        STORAGE RELEASE,LENGTH=DYNL,ADDR=(R11)\r\n        RETURN (14,12),RC=0\r\n\r\n*\r\n* Statics, Dynamic Storage, Equates follows\r\n*\r\n* Naming convention:\r\n* Suffixes:\r\n*  L : length\r\n*  S : static\r\n*  D : dynamic\r\n*  A : address\r\n\r\n        LTORG\r\n*\r\n* Statics (constants)\r\n*\r\nSTDIN   DC F'0'\r\nSTDOUT  DC F'1'\r\nSTDERR  DC F'2'\r\nBPXALET DC F'0'\r\nBPX1WRT DC V(BPX1WRT)\r\n\r\nBPXWRTS CALL  ,(0,0,0,0,0,0,0),MF=L\r\nBPXWRTL EQU *-BPXWRTS\r\n\r\nHW      DC C'Hello World'\r\nNEWLINE DC X'15'\r\nHWL     EQU *-HW\r\n\r\n*\r\n* Dynamic (storage obtain'ed) area\r\n*\r\nDYNAREA DSECT\r\n*\r\n* Dynamic Save Area regs always first\r\n*\r\nDSA   DS 18F\r\n\r\n*\r\n* Working storage\r\n*\r\nFD      DS  F\r\n\r\nRECSIZE EQU RECEND-*\r\nREC     DS CL80\r\nRECEND  EQU *\r\nRECA    DS  A\r\nBPXWRTD DS  CL(BPXWRTL)\r\nALET    DS  F\r\nRECL    DS  F\r\nRV      DS  F\r\nRC      DS  F\r\nRN      DS  F\r\n\r\nDYNL EQU *-DYNAREA\r\n*\r\n*\r\n* End of working storage\r\n*\r\n\r\n*\r\n* Equates\r\n*\r\nR0      EQU 0\r\nR1      EQU 1\r\nR2      EQU 2\r\nR3      EQU 3\r\nR4      EQU 4\r\nR5      EQU 5\r\nR6      EQU 6\r\nR7      EQU 7\r\nR8      EQU 8\r\nR9      EQU 9\r\nR10     EQU 10\r\nR11     EQU 11\r\nR12     EQU 12\r\nR13     EQU 13\r\nR14     EQU 14\r\nR15     EQU 15\r\n        END"
  },
  { "id": 763, "name": "4DOS Batch", "code": "echo Hello world!" },
  { "id": 764, "name": "4ME", "code": "P:hw\r\nout{Hello world!}" },
  {
    "id": 765,
    "name": "6502 Assembly",
    "code": "; goodbyeworld.s for C= 8-bit machines, ca65 assembler format.\r\n; String printing limited to strings of 256 characters or less.\r\n\r\na_cr\t= $0d\t\t; Carriage return.\r\nbsout\t= $ffd2\t\t; C64 KERNEL ROM, output a character to current device.\r\n\t\t\t; use $fded for Apple 2, $ffe3 (ascii) or $ffee (raw) for BBC.\r\n\t.code\r\n\r\n\tldx #0\t\t; Starting index 0 in X register.\r\nprintnext:\r\n\tlda text,x\t; Get character from string.\r\n\tbeq done\t; If we read a 0 we're done.\r\n\tjsr bsout\t; Output character. \r\n\tinx\t\t; Increment index to next character.\r\n\tbne printnext\t; Repeat if index doesn't overflow to 0.\r\ndone:\r\n\trts\t\t; Return from subroutine.\r\n\r\n\t.rodata\r\n\r\ntext:\r\n\t.byte\t\"Hello world!\", a_cr, 0"
  },
  {
    "id": 766,
    "name": "6800 Assembly",
    "code": "        .cr  6800\r\n        .tf  gbye6800.obj,AP1\r\n        .lf  gbye6800\r\n;=====================================================;\r\n;        Hello world! for the Motorola 6800        ;\r\n;                 by barrym 2013-03-17                ;\r\n;-----------------------------------------------------;\r\n; Prints the message \"Hello world!\" to an ascii    ;\r\n;   terminal (console) connected to a 1970s vintage   ;\r\n;   SWTPC 6800 system, which is the target device for ;\r\n;   this assembly.                                    ;\r\n; Many thanks to:                                     ;\r\n;   swtpc.com for hosting Michael Holley's documents! ;\r\n;   sbprojects.com for a very nice assembler!         ;\r\n;   swtpcemu.com for a very capable emulator!         ;\r\n; reg x is the string pointer                         ;\r\n; reg a holds the ascii char to be output             ;\r\n;-----------------------------------------------------;\r\nouteee   =   $e1d1      ;ROM: console putchar routine\r\n        .or  $0f00\r\n;-----------------------------------------------------;\r\nmain    ldx  #string    ;Point to the string\r\n        bra  puts       ;  and print it\r\nouts    jsr  outeee     ;Emit a as ascii\r\n        inx             ;Advance the string pointer\r\nputs    ldaa ,x         ;Load a string character\r\n        bne  outs       ;Print it if non-null\r\n        swi             ;  else return to the monitor\r\n;=====================================================;\r\nstring  .as  \"Hello world!\",#13,#10,#0\r\n        .en"
  },
  {
    "id": 767,
    "name": "8080 Assembly",
    "code": "\t; This is Hello World, written in 8080 assembly to run under CP/M\r\n\t; As you can see, it is similar to the 8086, and CP/M is very\r\n\t; similar to DOS in the way it is called.\r\n\torg\t100h\t; CP/M .COM entry point is 100h - like DOS\r\n\tmvi\tc,9\t; C holds the syscall, 9 = print string - like DOS\r\n\tlxi\td,msg\t; DE holds a pointer to the string\r\n\tjmp\t5\t; CP/M calls are accessed through the jump at 05h\r\n\t; Normally you'd CALL it, but since you'd end the program by RETurning,\r\n\t; JMP saves a byte (if you've only got 64k of address space you want to\r\n\t; save bytes). \r\nmsg:\tdb\t'Hello world!$'"
  },
  {
    "id": 768,
    "name": "8086 Assembly",
    "code": "DOSSEG\r\n.MODEL TINY\r\n.DATA\r\nTXT DB \"Hello world!$\"\r\n.CODE\r\nSTART:\r\n\tMOV ax, @DATA\r\n\tMOV ds, ax\r\n\t\r\n\tMOV ah, 09h\t\t; prepare output function\r\n\tMOV dx, OFFSET TXT\t; set offset\r\n\tINT 21h\t\t\t; output string TXT\r\n\t\r\n\tMOV AX, 4C00h \t\t; go back to DOS\r\n\tINT 21h\r\nEND START"
  },
  {
    "id": 769,
    "name": "AArch64 Assembly",
    "code": ".equ STDOUT, 1\r\n.equ SVC_WRITE, 64\r\n.equ SVC_EXIT, 93\r\n\r\n.text\r\n.global _start\r\n\r\n_start:\r\n\tstp x29, x30, [sp, -16]!\r\n\tmov x0, #STDOUT\r\n\tldr x1, =msg\r\n\tmov x2, 13\r\n\tmov x8, #SVC_WRITE\r\n\tmov x29, sp\r\n\tsvc #0 // write(stdout, msg, 13);\r\n\tldp x29, x30, [sp], 16\r\n\tmov x0, #0\r\n\tmov x8, #SVC_EXIT\r\n\tsvc #0 // exit(0);\r\n\r\nmsg:\t.ascii \"Hello World!\\n\"\r\n.align 4"
  },
  { "id": 770, "name": "ACL2", "code": "(cw \"Hello world!~%\")" },
  { "id": 771, "name": "Acornsoft Lisp", "code": "(printc 'Hello! world!!)" },
  { "id": 772, "name": "Agena", "code": "print( \"Hello world!\" )" },
  { "id": 773, "name": "Aime", "code": "o_text(\"Hello world!\\n\");\r\n" },
  { "id": 774, "name": "Algae", "code": "printf(\"Hello world!\\n\");\r\n" },
  {
    "id": 775,
    "name": "ALGOL W",
    "code": "begin\r\n    write( \"Hello world!\" )\r\nend."
  },
  {
    "id": 776,
    "name": "ALGOL M",
    "code": "BEGIN\r\n    WRITE( \"Hello world!\" );\r\nEND"
  },
  { "id": 777, "name": "Alore", "code": "Print('Hello world!')\r\n" },
  {
    "id": 778,
    "name": "Amazing Hopper",
    "code": "main:\r\n   {\"Hello world!\\n\"}print\r\nexit(0)"
  },
  {
    "id": 779,
    "name": "AmbientTalk",
    "code": "system.println(\"Hello world!\")"
  },
  { "id": 780, "name": "AntLang", "code": "echo[\"Hello, World!\"]" },
  {
    "id": 781,
    "name": "Anyways",
    "code": "There was a guy called Hello World\r\n\"Ow!\" it said.\r\nThat's all folks!"
  },
  {
    "id": 782,
    "name": "Applesoft BASIC",
    "code": " PRINT \"Hello world!\"\r\n"
  },
  { "id": 783, "name": "Apricot", "code": "(puts \"Hello world!\")\r\n" },
  { "id": 784, "name": "Arc", "code": "(prn \"Hello world!\")\r\n" },
  { "id": 785, "name": "Argile", "code": "use std\r\nprint \"Hello world!\"" },
  { "id": 786, "name": "Arturo", "code": "print \"Hello world!\"" },
  { "id": 787, "name": "Astro", "code": "print \"Hello world!\"\r\n" },
  { "id": 788, "name": "Asymptote", "code": "write('Hello world!');" },
  { "id": 789, "name": "Atari BASIC", "code": "10 PRINT \"Hello World\"\r\n" },
  { "id": 790, "name": "AutoLISP", "code": "(printc \"Hello World!\")" },
  { "id": 791, "name": "Avail", "code": "Print: \"Hello World!\";" },
  { "id": 792, "name": "Axe", "code": "Disp \"Hello world!\",i\r\n" },
  { "id": 793, "name": "B4X", "code": "Log(\"Hello world!\")\r\n" },
  { "id": 794, "name": "Babel", "code": "\"Hello world!\" <<\r\n" },
  {
    "id": 795,
    "name": "BabyCobol",
    "code": "      * Since no quotes are used, two undeclared fields (variables) are printed.\r\n      * Their default values are their own names in uppercase.\r\n       IDENTIFICATION DIVISION.\r\n           PROGRAM-ID. USER OUTPUT.\r\n       PROCEDURE DIVISION.\r\n           DISPLAY HELLO WORLD."
  },
  {
    "id": 796,
    "name": "Bait",
    "code": "fun main() {\r\n    println('Hello World!')\r\n}"
  },
  { "id": 797, "name": "BASICA", "code": "10 print \"Hello world!\"\r\n" },
  {
    "id": 798,
    "name": "Chipmunk Basic",
    "code": "10 print \"Hello world!\"\r\n"
  },
  {
    "id": 799,
    "name": "Commodore BASIC",
    "code": "10 print \"Hello world!\"\r\n"
  },
  { "id": 800, "name": "GW-BASIC", "code": "10 print \"Hello world!\"\r\n" },
  { "id": 801, "name": "IS-BASIC", "code": "10 print \"Hello world!\"\r\n" },
  { "id": 802, "name": "Just BASIC", "code": "10 print \"Hello world!\"\r\n" },
  {
    "id": 803,
    "name": "Liberty BASIC",
    "code": "10 print \"Hello world!\"\r\n"
  },
  {
    "id": 804,
    "name": "Locomotive Basic",
    "code": "10 print \"Hello world!\"\r\n"
  },
  {
    "id": 805,
    "name": "M2000 Interpreter",
    "code": "10 print \"Hello world!\"\r\n"
  },
  { "id": 806, "name": "MSX BASIC", "code": "10 print \"Hello world!\"\r\n" },
  { "id": 808, "name": "Quite BASIC", "code": "10 print \"Hello world!\"\r\n" },
  { "id": 809, "name": "Run BASIC", "code": "10 print \"Hello world!\"\r\n" },
  { "id": 810, "name": "Tiny BASIC", "code": "10 print \"Hello world!\"\r\n" },
  {
    "id": 811,
    "name": "ZX Spectrum Basic",
    "code": "10 print \"Hello world!\"\r\n"
  },
  {
    "id": 812,
    "name": "ProgressBASIC",
    "code": "10 print \"Hello world!\"\r\n"
  },
  { "id": 813, "name": "7Basic", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 814, "name": "BaCon", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 815, "name": "BASIC256", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 816, "name": "OxygenBasic", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 817, "name": "QB64", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 818, "name": "Script Basic", "code": "PRINT \"Hello world!\"" },
  { "id": 819, "name": "SmallBASIC", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 820, "name": "Yabasic", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 821, "name": "Batch File", "code": "echo Hello world!\r\n" },
  {
    "id": 822,
    "name": "Battlestar",
    "code": "const hello = \"Hello world!\\n\"\r\n\r\nprint(hello)"
  },
  {
    "id": 823,
    "name": "BBC BASIC",
    "code": "      PRINT \"Hello world!\"\r\n"
  },
  { "id": 824, "name": "beeswax", "code": "*`Hello, World!\r\n" },
  { "id": 825, "name": "Binary Lambda Calculus", "code": " Hello world!" },
  {
    "id": 826,
    "name": "Bird",
    "code": "use Console\r\n\r\ndefine Main\r\n    Console.Println \"Hello world\"\r\nend"
  },
  { "id": 827, "name": "Blade", "code": "echo 'Hello world!'\r\n" },
  {
    "id": 828,
    "name": "Blast",
    "code": "# This will display a goodbye message on the terminal screen\r\n.begin\r\ndisplay \"Hello world!\"\r\nreturn\r\n# This is the end of the script."
  },
  {
    "id": 829,
    "name": "Blue",
    "code": "global _start\r\n\r\n: syscall ( num:eax -- result:eax ) syscall ;\r\n\r\n: exit ( status:edi -- noret ) 60 syscall ;\r\n: bye ( -- noret ) 0 exit ;\r\n\r\n1 const stdout\r\n\r\n: write ( buf:esi len:edx fd:edi -- ) 1 syscall drop ;\r\n: print ( buf len -- ) stdout write ;\r\n\r\n: greet ( -- ) s\" Hello world!\\n\" print ;\r\n\r\n: _start ( -- noret ) greet bye ;"
  },
  { "id": 830, "name": "blz", "code": "print(\"Hello world!\")\r\n" },
  { "id": 831, "name": "BML", "code": "display \"Hello world!\"\r\n" },
  { "id": 832, "name": "bootBASIC", "code": "10 print \"Hello world!\"" },
  { "id": 833, "name": "BQN", "code": "•Out \"Hello world!\"\r\n" },
  { "id": 834, "name": "CBQN", "code": "•Out \"Hello world!\"\r\n" },
  {
    "id": 835,
    "name": "Brace",
    "code": "#!/usr/bin/env bx\r\nuse b\r\nMain:\r\n\tsay(\"Hello world!\")"
  },
  { "id": 836, "name": "Bracmat", "code": "put$\"Hello world!\"\r\n" },
  { "id": 837, "name": "Brat", "code": "p \"Hello world!\"\r\n" },
  { "id": 838, "name": "Brlcad", "code": "echo Hello world!\r\n" },
  { "id": 839, "name": "Bruijn", "code": "main [\"Hello world!\"]\r\n" },
  { "id": 840, "name": "Burlesque", "code": "\"Hello world!\"sh" },
  {
    "id": 841,
    "name": "C89",
    "code": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n  printf(\"\\nHello world!\");\r\n  return 0;\r\n}"
  },
  {
    "id": 842,
    "name": "C11",
    "code": "#include <stdlib.h>\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n  printf(\"Hello world!\\n\");\r\n  return EXIT_SUCCESS;\r\n}"
  },
  {
    "id": 843,
    "name": "C23",
    "code": "#include <stdlib.h>\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n  puts(\"Hello world!\");\r\n  return EXIT_SUCCESS;\r\n}"
  },
  {
    "id": 844,
    "name": "C++/CLI",
    "code": "using namespace System;\r\nint main()\r\n{\r\n  Console::WriteLine(\"Hello world!\");\r\n}"
  },
  { "id": 845, "name": "C1R", "code": "Hello_world/Text\r\n" },
  { "id": 846, "name": "Cat", "code": "\"Hello world!\" writeln\r\n" },
  {
    "id": 847,
    "name": "CFEngine",
    "code": "#!/usr/bin/env cf-agent\r\n# without --no-lock option to cf-agent\r\n# this output will only occur once per minute\r\n# this is by design.\r\nbundle agent main\r\n{\r\n  reports:\r\n    \"Hello world!\";\r\n}"
  },
  { "id": 848, "name": "Chapel", "code": "writeln(\"Hello world!\");" },
  { "id": 849, "name": "ChucK", "code": "<<< \"Hello world!\">>>;\r\n" },
  {
    "id": 850,
    "name": "Cind",
    "code": "execute() {\r\n    host.println(\"Hello world!\");\r\n}"
  },
  { "id": 851, "name": "CJam", "code": "\"Hello, world!\r\n\"" },
  {
    "id": 852,
    "name": "Clay",
    "code": "main() {\r\n    println(\"Hello world!\");\r\n}"
  },
  { "id": 853, "name": "Clio", "code": "'hello world!' -> print\r\n" },
  {
    "id": 854,
    "name": "CLU",
    "code": "start_up = proc ()\r\n    po: stream := stream$primary_output()\r\n    stream$putl(po, \"Hello world!\")\r\nend start_up"
  },
  { "id": 855, "name": "Comal", "code": "PRINT \"Hello world!\"" },
  { "id": 856, "name": "Comefrom0x10", "code": "'Hello world!'" },
  {
    "id": 857,
    "name": "Component Pascal",
    "code": "MODULE Hello;\r\n\tIMPORT Out;\r\n\t\r\n\tPROCEDURE Do*;\r\n\tBEGIN\r\n\t\tOut.String(\"Hello world!\"); Out.Ln\r\n\tEND Do;\r\nEND Hello."
  },
  {
    "id": 858,
    "name": "Coq",
    "code": "Require Import Coq.Strings.String.\r\n\r\nEval compute in (\"Hello world!\"%string)."
  },
  { "id": 859, "name": "Corescript", "code": "print Hello world!\r\n" },
  {
    "id": 860,
    "name": "Cowgol",
    "code": "include \"cowgol.coh\";\r\nprint(\"Hello world!\");\r\nprint_nl();"
  },
  {
    "id": 861,
    "name": "Crack",
    "code": "import crack.io cout;\r\ncout `Hello world!\\n`;"
  },
  { "id": 862, "name": "Craft Basic", "code": "print \"Hello world!\"\r\n" },
  {
    "id": 863,
    "name": "Creative Basic",
    "code": "OPENCONSOLE\r\n\r\nPRINT\"Hello world!\"\r\n\r\n'This line could be left out.\r\nPRINT:PRINT:PRINT\"Press any key to end.\"\r\n\r\n'Keep the console from closing right away so the text can be read.\r\nDO:UNTIL INKEY$<>\"\"\r\n\r\nCLOSECONSOLE\r\n\r\nEND"
  },
  { "id": 864, "name": "Curto", "code": ".\" Hola, mundo!\"\r\n" },
  { "id": 865, "name": "Dao", "code": "io.writeln( 'Hello world!' )\r\n" },
  { "id": 866, "name": "DataWeave", "code": "\"Hello world!\"\r\n" },
  {
    "id": 867,
    "name": "DBL",
    "code": ";\r\n;       Hello world for DBL version 4 by Dario B.\r\n;\r\n                                PROC\r\n;------------------------------------------------------------------\r\n        XCALL FLAGS (0007000000,1)           ;Suppress STOP message\r\n\r\n        OPEN (1,O,'TT:')\r\n        WRITES (1,\"Hello world\")\r\n\r\n        DISPLAY (1,\"Hello world\",10)\r\n        DISPLAY (1,$SCR_MOV(-1,12),\"again\",10)  ;move up, right and print\r\n\r\n        CLOSE 1\r\nEND"
  },
  {
    "id": 868,
    "name": "DDNC",
    "code": "0 111 10\r\n0 15 11\r\n0 15 12\r\n0 31 13\r\n0 47 14\r\n0 59 15\r\n0 125 16\r\n0 3 17\r\n0 0 18\r\n0 63 19\r\n0 15 20\r\n0 12 21\r\n0 36 22\r\n0 31 23\r\n0 17 24\r\n\r\n0 500 3\r\n0 10 2\r\n0 15 5\r\n\r\n60 4\r\n2 2 1\r\n80 1\r\n72 3\r\n30 2\r\n31 5\r\n62 5\r\n61 4\r\n64"
  },
  { "id": 869, "name": "DeviousYarn", "code": "o:\"Hello world!\r\n" },
  {
    "id": 870,
    "name": "DIBOL-11",
    "code": "          START     ;Hello World\r\n\r\n          RECORD  HELLO\r\n,         A11, 'Hello World'\r\n\r\n          PROC\r\n          XCALL FLAGS (0007000000,1)          ;Suppress STOP message\r\n\r\n          OPEN(8,O,'TT:')\r\n          WRITES(8,HELLO)\r\n          END"
  },
  {
    "id": 871,
    "name": "Diego",
    "code": "with_computer(comp1)_printer(lp1)_text(Hello World!);\r\n"
  },
  {
    "id": 872,
    "name": "DIV Games Studio",
    "code": "PROGRAM HELLOWORLD;\r\n\r\nBEGIN\r\n\r\n    WRITE_TEXT(0,160,100,4,\"HELLO WORLD!\");\r\n    LOOP\r\n        FRAME;\r\n    END\r\nEND"
  },
  { "id": 873, "name": "Dragon", "code": "showln \"Hello world!\"\r\n" },
  { "id": 874, "name": "DreamBerd", "code": "print \"Hello world!\"!\r\n" },
  { "id": 875, "name": "dt", "code": "\"Hello world!\" pl\r\n" },
  {
    "id": 876,
    "name": "DuckDB",
    "code": "# Turn off tabular output:\r\n.mode list\r\n.headers off\r\n\r\nselect 'Hello world!';"
  },
  { "id": 877, "name": "DWScript", "code": "PrintLn('Hello world!');\r\n" },
  { "id": 878, "name": "Dyalect", "code": "print(\"Hello world!\")\r\n" },
  {
    "id": 879,
    "name": "Dylan.NET",
    "code": "Console::WriteLine(\"Hello world!\")\r\n"
  },
  { "id": 880, "name": "Déjà Vu", "code": "!print \"Hello world!\"\r\n" },
  { "id": 881, "name": "EasyLang", "code": "print \"Hello world!\"\r\n" },
  {
    "id": 882,
    "name": "EchoLisp",
    "code": "(display \"Hello world!\" \"color:blue\")\r\n"
  },
  { "id": 883, "name": "Ed", "code": "a\r\nHello World!\r\n.\r\np\r\nQ" },
  {
    "id": 884,
    "name": "EDSAC order code",
    "code": "[ Print HELLO WORLD ]\r\n[ A program for the EDSAC ]\r\n[ Works with Initial Orders 2 ]\r\n\r\nT64K  [ Set load point: address 64 ]\r\nGK    [ Set base address ]\r\nO13@  [ Each O order outputs one ]\r\nO14@  [ character. The numerical ]\r\nO15@  [ parameter gives the offset ]\r\nO16@  [ (from the base address) where ]\r\nO17@  [ the character to print is ]\r\nO18@  [ stored ]\r\nO19@\r\nO20@\r\nO21@  \r\nO22@\r\nO23@\r\nO24@\r\nZF    [ Stop ]\r\n*F    [ Shift to print letters ]\r\nHF    [ Character literals ]\r\nEF\r\nLF\r\nLF\r\nOF\r\n!F    [ Space character ]\r\nWF\r\nOF\r\nRF\r\nLF\r\nDF\r\nEZPF  [ Start program beginning at\r\n        the load point ]"
  },
  { "id": 885, "name": "Efene", "code": "io.format(\"Hello world!~n\")\r\n" },
  { "id": 886, "name": "Egel", "code": "def main = \"Hello World!\"\r\n" },
  {
    "id": 887,
    "name": "Egison",
    "code": "(define $main\r\n  (lambda [$argv]\r\n    (write-string \"Hello world!\\n\")))"
  },
  {
    "id": 888,
    "name": "EGL",
    "code": "program HelloWorld\r\n    function main()\r\n        SysLib.writeStdout(\"Hello world!\");\r\n    end\r\nend"
  },
  {
    "id": 889,
    "name": "EDT",
    "code": "program HelloWorld\r\n    function main()\r\n        SysLib.writeStdout(\"Hello world!\");\r\n    end\r\nend"
  },
  {
    "id": 890,
    "name": "RBD",
    "code": "program HelloWorld\r\n    function main()\r\n        SysLib.writeStdout(\"Hello world!\");\r\n    end\r\nend"
  },
  {
    "id": 891,
    "name": "Ela",
    "code": "open monad io\r\ndo putStrLn \"Hello world!\" ::: IO"
  },
  {
    "id": 892,
    "name": "elastiC",
    "code": "package hello;\r\n\r\n    // Import the `basic' package\r\n    import basic;\r\n\r\n    // Define a simple function\r\n    function hello()\r\n    {\r\n        // Print hello world\r\n        basic.print( \"Hello world!\\n\" );\r\n    }\r\n\r\n    /*\r\n     *  Here we start to execute package code\r\n     */\r\n\r\n    // Invoke the `hello' function\r\n    hello();"
  },
  {
    "id": 893,
    "name": "Elena 6.x",
    "code": "public program()\r\n{\r\n    console.writeLine(\"Hello world!\")\r\n}"
  },
  { "id": 894, "name": "Elisa", "code": " \"Hello world!\"?" },
  { "id": 895, "name": "EMal", "code": "writeLine(\"Hello world!\")\r\n" },
  {
    "id": 896,
    "name": "Enguage",
    "code": "On \"say hello world\", reply \"hello world\".\r\n\r\n## This can be tested:\r\n#] say hello world: hello world.\r\n\r\n## This can also be created within Enguage:\r\n#] to the phrase hello reply hello to you too: ok.\r\n#] hello: hello to you too."
  },
  { "id": 897, "name": "Euler Math Toolbox", "code": "\"Hello world!\"\r\n" },
  { "id": 898, "name": "Extended BrainFuck", "code": "[.>]@Hello world!\r\n" },
  {
    "id": 899,
    "name": "Extended Color BASIC",
    "code": "PRINT \"HELLO WORLD!\"\r\n"
  },
  { "id": 900, "name": "Fe", "code": "(print \"Hello World\")\r\n" },
  { "id": 901, "name": "Fermat", "code": "!!'Hello, World!';\r\n" },
  { "id": 902, "name": "Fexl", "code": "say \"Hello world!\"\r\n" },
  { "id": 903, "name": "Fhidwfe", "code": "puts$ \"Hello, world!\\n\"\r\n" },
  { "id": 904, "name": "Fish", "code": "!v\"Hello world!\"r!\r\n >l?!;o" },
  {
    "id": 905,
    "name": "Free Pascal",
    "code": "PROGRAM HelloWorld ;\r\n\r\n{$APPTYPE CONSOLE}\r\n\r\n(*) \r\n\r\n        https://www.freepascal.org/advantage.var\r\n\r\n(*)\r\n\r\nUSES\r\n\r\n    crt;\r\n\r\nBEGIN\r\n\r\n  WriteLn ( 'Hello world!' ) ;\r\n\r\nEND."
  },
  {
    "id": 906,
    "name": "FTCBASIC",
    "code": "print \"Hello, world!\"\r\npause\r\nend"
  },
  {
    "id": 907,
    "name": "FuncSug",
    "code": "displayNewMessage('Hello, world!')\r\n"
  },
  { "id": 908, "name": "FunL", "code": "println( 'Hello world!' )\r\n" },
  { "id": 909, "name": "Furor", "code": ".\"Hello, World!\\n\"\r\n" },
  {
    "id": 910,
    "name": "FutureBasic",
    "code": "window 1\r\nprint @\"Hello world!\"\r\n\r\nHandleEvents"
  },
  { "id": 911, "name": "FUZE BASIC", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 912, "name": "GB BASIC", "code": "10 print \"Hello world!\"\r\n" },
  { "id": 913, "name": "Gecho", "code": "'Hello, <> 'World! print\r\n" },
  {
    "id": 914,
    "name": "Gema",
    "code": "*= ! ignore off content of input\r\n\\B=Hello world!\\! ! Start output with this text."
  },
  { "id": 915, "name": "GFA Basic", "code": "PRINT \"Hello World\"\r\n" },
  { "id": 916, "name": "Glee", "code": "\"Hello world!\"\r\n" },
  {
    "id": 917,
    "name": "Global Script",
    "code": "λ _. print qq{Hello world!\\n}\r\n"
  },
  { "id": 918, "name": "GlovePIE", "code": "debug=\"Hello world!\"\r\n" },
  { "id": 919, "name": "Golfscript", "code": "\"Hello world!\"\r\n" },
  { "id": 920, "name": "Grain", "code": "print(\"Hello world!\")\r\n" },
  { "id": 921, "name": "Halon", "code": "echo \"Hello world!\";\r\n" },
  {
    "id": 922,
    "name": "Hare",
    "code": "use fmt;\r\n\r\nexport fn main() void = {\r\n\tfmt::println(\"Hello, world!\")!;\r\n};"
  },
  { "id": 923, "name": "Hexiscript", "code": "println \"Hello world!\"\r\n" },
  { "id": 924, "name": "HicEst", "code": "WRITE() 'Hello world!'\r\n" },
  {
    "id": 925,
    "name": "Hopper",
    "code": "program Hello\r\n{\r\n    uses \"/Source/Library/Boards/PiPico\"\r\n    \r\n    Hopper()\r\n    {\r\n        WriteLn(\"Hello world!\");\r\n        loop\r\n        {\r\n            LED = !LED;\r\n            Delay(500);\r\n        }\r\n    }\r\n}"
  },
  { "id": 926, "name": "HPPPL", "code": "PRINT(\"Hello world!\");\r\n" },
  {
    "id": 927,
    "name": "Huginn",
    "code": "#! /bin/sh\r\nexec huginn --no-argv -E \"${0}\" \"${@}\"\r\n#! huginn\r\n\r\nmain() {\r\n\tprint( \"Hello World!\\n\" );\r\n\treturn ( 0 );\r\n}"
  },
  { "id": 928, "name": "Hy", "code": "(print \"Hello world!\")\r\n" },
  {
    "id": 929,
    "name": "HTML5",
    "code": "<!DOCTYPE html>\r\n<html>\r\n<body>\r\n<h1>Hello world!</h1>\r\n</body>\r\n</html>"
  },
  {
    "id": 930,
    "name": "I",
    "code": "software {\r\n    print(\"Hello world!\")\r\n}"
  },
  {
    "id": 931,
    "name": "Unicon",
    "code": "procedure main()\r\n  write( \"Hello world!\" )\r\nend"
  },
  {
    "id": 932,
    "name": "Inform 6",
    "code": "[Main;\r\n  print \"Hello world!^\";\r\n];"
  },
  {
    "id": 933,
    "name": "Inko",
    "code": "import std::stdio::stdout\r\n\r\nstdout.print('Hello, world!')"
  },
  { "id": 934, "name": "Insitux", "code": "(print \"Hello, world!\")\r\n" },
  {
    "id": 935,
    "name": "Integer BASIC",
    "code": "   10 PRINT \"Hello world!\"\r\n   20 END"
  },
  {
    "id": 936,
    "name": "IWBASIC",
    "code": "OPENCONSOLE\r\n\r\nPRINT\"Hello world!\"\r\n\r\n'This line could be left out.\r\nPRINT:PRINT:PRINT\"Press any key to end.\"\r\n\r\n'Keep the console from closing right away so the text can be read.\r\nDO:UNTIL INKEY$<>\"\"\r\n\r\nCLOSECONSOLE\r\n\r\nEND"
  },
  {
    "id": 937,
    "name": "Jack",
    "code": "class Main {\r\n  function void main () {\r\n    do Output.printString(\"Hello world!\");\r\n    do Output.println();\r\n    return;\r\n  }\r\n}"
  },
  {
    "id": 938,
    "name": "Jacquard Loom",
    "code": "+---------------+\r\n|               |\r\n|    *    *     |\r\n|*   *    *  *  |\r\n|*           * *|\r\n|*           * *|\r\n|*  *         * |\r\n|   *     *   * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|*   *    *     |\r\n|*   *    *     |\r\n|            * *|\r\n|            * *|\r\n|*  *         * |\r\n|*  *     *   * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|*   **   * *   |\r\n|*******  *** * |\r\n| **** *   * ***|\r\n| **** *  ******|\r\n| ******   ** * |\r\n|   * *   *   * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|*******  *** * |\r\n|*******  *** * |\r\n|           ** *|\r\n|*        *  * *|\r\n|*******   ** * |\r\n|*******  *** * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|*******  *** * |\r\n|*******  *** * |\r\n|      *  *  * *|\r\n|      *  *  * *|\r\n|*******  **  * |\r\n|*******  **  * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|***** *  *** * |\r\n|*******  *** * |\r\n|     * * *  *  |\r\n|     * *    *  |\r\n|******   **  * |\r\n|******   **  * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|    *    * *   |\r\n|***** *  ***** |\r\n|***** **  * ***|\r\n|***** **  * ***|\r\n|*******   * ** |\r\n|   * *   *   * |\r\n|         *     |\r\n+---------------+\r\n\r\n+---------------+\r\n|               |\r\n|               |\r\n|     * *       |\r\n|     * *       |\r\n|     *         |\r\n|     *         |\r\n|               |\r\n|               |\r\n+---------------+"
  },
  {
    "id": 939,
    "name": "Jinja",
    "code": "from jinja2 import Template\r\nprint(Template(\"Hello World!\").render())"
  },
  { "id": 940, "name": "Joy", "code": "\"Hello world!\\n\" putchars.\r\n" },
  { "id": 941, "name": "Jq", "code": "\"Hello world!\"\r\n" },
  { "id": 942, "name": "JSE", "code": "Print \"Hello world!\"\r\n" },
  { "id": 943, "name": "Jsish", "code": "puts(\"Hello world!\")\r\n" },
  { "id": 944, "name": "Kabap", "code": "return = \"Hello world!\";\r\n" },
  {
    "id": 945,
    "name": "Kaya",
    "code": "program hello;\r\n \r\nVoid main() {\r\n    // My first program!\r\n    putStrLn(\"Hello world!\");\r\n}"
  },
  { "id": 946, "name": "Keg", "code": "Hello world\\!\r\n" },
  {
    "id": 947,
    "name": "Kite",
    "code": "\"#!/usr/local/bin/kite\r\n\r\n\"Hello world!\"|print;"
  },
  {
    "id": 948,
    "name": "KL1",
    "code": ":- module main.\r\n\r\nmain :-\r\n      unix:unix([stdio(normal(S))]),\r\n      S = [fwrite(\"Hello world\\n\")]."
  },
  { "id": 949, "name": "Komodo", "code": "println(\"Hello world!\")\r\n" },
  {
    "id": 950,
    "name": "KonsolScript",
    "code": "function main() {\r\n  Konsol:Log(\"Hello world!\")\r\n}"
  },
  { "id": 951, "name": "KQL", "code": "print 'Hello world!'\r\n" },
  { "id": 952, "name": "KSI", "code": "`plain\r\n'Hello world!' #echo #" },
  {
    "id": 953,
    "name": "Labyrinth",
    "code": "72.101.108:..111.32.119.111.114.108.100.33.\\@\r\n"
  },
  {
    "id": 954,
    "name": "Lambdatalk",
    "code": "Hello world!\r\n{h1 Hello world!}\r\n_h1 Hello world!\\n"
  },
  { "id": 955, "name": "Lang", "code": "fn.println(Hello world!)\r\n" },
  { "id": 956, "name": "Lang5", "code": "\"Hello world!\\n\" .\r\n" },
  { "id": 957, "name": "Langur", "code": "writeln \"Hello\"\r\n" },
  { "id": 958, "name": "Latitude", "code": "putln \"Hello world!\".\r\n" },
  {
    "id": 959,
    "name": "LC3 Assembly",
    "code": ".orig x3000\r\nLEA R0, hello    ; R0 = &hello\r\nTRAP x22         ; PUTS (print char array at addr in R0)\r\nHALT\r\nhello .stringz \"Hello World!\"\r\n.end"
  },
  {
    "id": 960,
    "name": "LDPL",
    "code": "procedure:\r\ndisplay \"Hello World!\" crlf"
  },
  { "id": 961, "name": "Lean", "code": "#eval \"Hello world!\"\r\n" },
  { "id": 962, "name": "LFE", "code": "(: io format '\"Hello world!~n\")\r\n" },
  {
    "id": 963,
    "name": "LIL",
    "code": "#\r\n# Hello world in lil\r\n#\r\n\r\nprint \"Hello, world!\""
  },
  { "id": 964, "name": "Little", "code": "puts(\"Hello world!\");\r\n" },
  { "id": 965, "name": "Lobster", "code": "print \"Hello world!\"\r\n" },
  { "id": 966, "name": "LSE", "code": "AFFICHER [U, /] 'Hello world!'\r\n" },
  { "id": 967, "name": "LSE64", "code": "\"Hello world!\" ,t nl\r\n" },
  { "id": 968, "name": "Maclisp", "code": "(format t \"Hello world!~%\")\r\n" },
  {
    "id": 969,
    "name": "MANOOL",
    "code": "{{extern \"manool.org.18/std/0.3/all\"} in WriteLine[Out; \"Hello world!\"]}\r\n"
  },
  {
    "id": 970,
    "name": "MariaDB",
    "code": "SELECT 'Hello world!' AS greeting;\r\nVALUES ('Hello world!');"
  },
  {
    "id": 971,
    "name": "Mastermind",
    "code": "output \"Hello world!\\n\";\r\n"
  },
  { "id": 972, "name": "Mathcad", "code": "\"Hello, World!\"\r\n" },
  {
    "id": 973,
    "name": "Maude",
    "code": "fmod BYE-WORLD is\r\n\r\n\tprotecting STRING .\r\n\t\r\n\top sayBye : -> String .\r\n\t\r\n\teq sayBye = \"Hello world!\" .\r\n\t\r\nendfm\r\n\r\nred sayBye "
  },
  { "id": 974, "name": "MDL", "code": "<PRINC \"Hello world!\">\r\n<CRLF>" },
  {
    "id": 975,
    "name": "MelonBasic",
    "code": "Say:Hello world!\r\n\r\nhelloWorld;"
  },
  {
    "id": 976,
    "name": "Metafont",
    "code": "message \"Hello world!\"; end\r\n"
  },
  {
    "id": 977,
    "name": "Microsoft Small Basic",
    "code": "TextWindow.WriteLine(\"Hello world!\")\r\n"
  },
  { "id": 978, "name": "Min", "code": "\"Hello world!\" puts\r\n" },
  {
    "id": 979,
    "name": "Miranda",
    "code": "main :: [sys_message]\r\nmain = [Stdout \"Hello, world!\\n\"]"
  },
  { "id": 980, "name": "MontiLang", "code": "|Hello, World!| PRINT .\r\n" },
  {
    "id": 981,
    "name": "Morfa",
    "code": "import morfa.io.print;\r\nfunc main(): void\r\n{\r\n    println(\"Hello world!\");\r\n}"
  },
  {
    "id": 982,
    "name": "Mosaic",
    "code": "proc main =\r\n    println \"Hello, world\"\r\nend"
  },
  {
    "id": 983,
    "name": "MUF",
    "code": ": main[ -- ]\r\nme @ \"Hello world!\" notify\r\nexit\r\n;"
  },
  {
    "id": 984,
    "name": "MyrtleScript",
    "code": "script HelloWorld {\r\n    func main returns: int {\r\n        print(\"Hello World!\")\r\n    }\r\n}"
  },
  { "id": 985, "name": "N/t/roff", "code": "Hello world!" },
  { "id": 986, "name": "Nanoquery", "code": "println \"Hello world!\"\r\n" },
  {
    "id": 987,
    "name": "Neat",
    "code": "void main() writeln \"Hello world!\";\r\n"
  },
  { "id": 988, "name": "NetRexx", "code": "say  'Hello world!'\r\n" },
  {
    "id": 989,
    "name": "Never",
    "code": "func main() -> int {\r\n    prints(\"Hello world!\\n\");\r\n    0\r\n}"
  },
  { "id": 990, "name": "Nickle", "code": "printf(\"Hello world!\\n\")\r\n" },
  {
    "id": 991,
    "name": "NLP++",
    "code": "@CODE\r\n\"output.txt\" << \"Hello world!\";\r\n@@CODE"
  },
  {
    "id": 992,
    "name": "Nom",
    "code": "begin { add 'hello world'; print; quit; }\r\n"
  },
  { "id": 993, "name": "NS-HUBASIC", "code": "10 ? \"HELLO WORLD!\"\r\n" },
  { "id": 994, "name": "Nu", "code": "print \"Hello world!\"\r\n" },
  {
    "id": 995,
    "name": "Nutt",
    "code": "module hello_world\r\nimports native.io.output.say\r\n\r\nsay(\"Hello, world!\")\r\n\r\nend"
  },
  {
    "id": 996,
    "name": "Nyquist",
    "code": "(format t \"Hello world!\")\r\n\r\n"
  },
  {
    "id": 997,
    "name": "Objeck",
    "code": "class Hello {\r\n  function : Main(args : String[]) ~ Nil {\r\n    \"Hello world!\"->PrintLine();\r\n  }\r\n}"
  },
  {
    "id": 998,
    "name": "ObjectIcon",
    "code": "import io\r\n\r\nprocedure main ()\r\n  io.write (\"Hello world!\")\r\nend"
  },
  { "id": 999, "name": "Oforth", "code": "\"Hello world!\" .\r\n" },
  { "id": 1000, "name": "Ol", "code": "(print \"Hello world!\")\r\n" },
  { "id": 1001, "name": "Onyx", "code": "`Hello world!\\n' print flush\r\n" },
  {
    "id": 1002,
    "name": "Onyx (wasm)",
    "code": "use core {printf}\r\nmain :: () {\r\n    printf(\"Hello world!\");\r\n}"
  },
  { "id": 1003, "name": "ooRexx", "code": "/* Rexx */\r\nsay 'Hello world!'" },
  {
    "id": 1004,
    "name": "OpenLisp",
    "code": "#!/openlisp/uxlisp -shell\r\n(format t \"Hello world!~%\")\r\n(print \"Hello world!\")"
  },
  {
    "id": 1005,
    "name": "Openscad",
    "code": "echo(\"Hello world!\");  // writes to the console\r\ntext(\"Hello world!\");  // creates 2D text in the object space\r\nlinear_extrude(height=10) text(\"Hello world!\"); // creates 3D text in the object space"
  },
  { "id": 1006, "name": "Owl Lisp", "code": "(print \"Hello world!\")\r\n" },
  {
    "id": 1007,
    "name": "Oxygene",
    "code": "namespace HelloWorld;\r\n \r\ninterface\r\n \r\ntype\r\n  HelloClass = class\r\n  public\r\n    class method Main; \r\n  end;\r\n \r\nimplementation\r\n \r\nclass method HelloClass.Main;\r\nbegin\r\n  writeLn('Hello world!');\r\nend;\r\n \r\nend"
  },
  { "id": 1008, "name": "PARI/GP", "code": "print(\"Hello world!\")\r\n" },
  {
    "id": 1009,
    "name": "PascalABC.NET",
    "code": "// Hello world/Text. Nigel Galloway: January 25th., 2023\r\nbegin\r\n  System.Console.WriteLine('Hello World!');\r\nend."
  },
  { "id": 1010, "name": "PASM", "code": "print \"Hello world!\\n\"\r\nend" },
  {
    "id": 1011,
    "name": "Pebble",
    "code": ";Hello world example program\r\n;for x86 DOS\r\n;compile with Pebble\r\n\r\n;compiled com program is 51 bytes\r\n\r\nprogram examples\\hello\r\n\r\nbegin\r\n\r\n\techo \"Hello, world!\"\r\n\tpause\r\n\tkill\r\n\r\nend"
  },
  {
    "id": 1012,
    "name": "PepsiScript",
    "code": "#include default-libraries\r\n\r\n#author Childishbeat\r\n\r\nclass Hello world/Text:\r\nfunction Hello world/Text:\r\n\r\nprint \"Hello world!\"\r\n\r\nend"
  },
  { "id": 1013, "name": "Peylang", "code": "chaap 'Hello world!';\r\n" },
  { "id": 1014, "name": "Phix", "code": "puts(1,\"Hello world!\")\r\n" },
  {
    "id": 1015,
    "name": "PHL",
    "code": "module helloworld;\r\nextern printf;\r\n\r\n@Integer main [\r\n    printf(\"Hello world!\");\r\n    return 0;\r\n]"
  },
  { "id": 1016, "name": "PicoLisp", "code": "(prinl \"Hello world!\")\r\n" },
  { "id": 1017, "name": "Pict", "code": "(prNL \"Hello World!\");\r\n" },
  {
    "id": 1018,
    "name": "Pikachu",
    "code": "pikachu pika pikachu pika pika pi pi pika pikachu pika pikachu pi pikachu pi pikachu pi pika pi pikachu pikachu pi pi pika pika pikachu pika pikachu pikachu pi pika pi pika pika pi pikachu pikachu pi pikachu pi pika pikachu pi pikachu pika pikachu pi pikachu pikachu pi pikachu pika pika pikachu pi pikachu pi pi pikachu pikachu pika pikachu pi pika pi pi pika pika pikachu pikachu pi pi pikachu pi pikachu\r\npikachu pikachu pi pikachu\r\npikachu pika pika pikachu pika pikachu pikachu pika pika pikachu pikachu pi pi pikachu pika pikachu pika pika pi pika pikachu pikachu pi pika pika pikachu pi pika pi pika pi pikachu pi pikachu pika pika pi pi pika pi pika pika pikachu pikachu pika pikachu pikachu pika pi pikachu pika pi pikachu pi pika pika pi pikachu pika pi pika pikachu pi pi pikachu pika pika pi pika pi pikachu\r\npikachu pikachu pi pikachu\r\npikachu pika pi pika pika pikachu pika pikachu pi pikachu pi pi pika pi pikachu pika pi pi pika pikachu pi pikachu pi pi pikachu pikachu pika pikachu pikachu pika pi pikachu pi pika pikachu pi pikachu pika pika pikachu pika pi pi pikachu pikachu pika pika pikachu pi pika pikachu pikachu pi pika pikachu pikachu pika pi pi pikachu pikachu pi pikachu pi pikachu pi pikachu pi pika pikachu pi pikachu pika pikachu pi pika pi pikachu\r\npi pika\r\npikachu pikachu pi pikachu\r\npika pi\r\npikachu pikachu pi pikachu\r\npikachu pi pikachu pi pi pikachu pi pikachu pika pikachu pikachu pi pikachu pikachu pika pi pi pika pikachu pika pikachu pi pi pikachu pika pi pi pikachu pika pika pi pika pika pikachu pika pikachu pi pi pika pikachu pika pi pikachu pikachu pi pikachu pika pikachu pikachu pika pi pi pikachu pikachu pi pika pikachu pi pikachu pika pikachu pikachu pika pi pikachu pikachu pika pikachu pi pikachu pika pika pi pikachu pi pika pi pikachu pikachu pi pikachu\r\npi pika\r\npikachu pikachu pi pikachu\r\npikachu pikachu pi pika pikachu pi pika pika pi pi pika pi pikachu pi pika pi pika pi pika pikachu pika pi pi pikachu pi pikachu pi pika pi pika pika pikachu pi pikachu\r\npikachu pikachu pi pikachu\r\npikachu pi pikachu pika pikachu pi pika pi pikachu pikachu pika pika pi pi pikachu pi pika pi pikachu pi pika pikachu pi pika pi pi pikachu pikachu pika pika pikachu pikachu pi pi pikachu pi pikachu pi pikachu pi pi pikachu pikachu pi pikachu pi pikachu pi pika pika pikachu pikachu pika pi pika pikachu pi pikachu pi pi pika pikachu pika pi pikachu pi pika pi pi pikachu pikachu pika pika pikachu pika pika pikachu pi pika pi pika pikachu pi pika pikachu pika pi pika pikachu\r\npikachu pikachu pika pikachu\r\npikachu pikachu pika pikachu\r\npi pi pikachu pi pikachu pika pika pi pikachu pika pika pi pi pika pika pikachu pi pi pikachu pi pika pi pika pikachu pi pikachu pi pikachu pikachu pi pi pika pika pi pika pika pi pika pikachu pikachu pi pikachu pika pi pi pika pi pi pikachu pikachu pika pi pi pika pika pi pika pikachu pi pikachu pi pi pika pi pika pika pikachu pika pi pika pikachu pi pikachu pikachu pi pi pika pi pika pika pikachu pikachu pi pikachu\r\npikachu pikachu pi pikachu\r\npikachu pi pikachu pikachu pika pikachu pikachu pika pika pikachu pikachu pika pikachu pi pika pikachu pika pika pi pikachu pi pi pika pi pi pikachu pika pika pikachu pikachu pika pikachu pikachu pi pika pi pi pikachu pikachu pika pi pi pikachu pikachu pika pikachu pika pi pikachu pi pika pi pika pikachu pika pi pikachu pi pikachu pikachu pi pika pikachu pi pikachu pikachu pi pika pi pikachu pikachu pi pikachu pika pika pi pi pikachu\r\npikachu pi pi pika pi pi pikachu pika pikachu pikachu pika pika pi pi pika pikachu pi pikachu pi pi pika pi pika pi pi pika pikachu pi pika pi pikachu pika pikachu pika pi pi pika pi pi pikachu pi pikachu pikachu pika pi pikachu pi pi pika pi pikachu pi pi pika pi pi pikachu pika pikachu pika pikachu pika pi pikachu pikachu pi pi pika pika pikachu\r\npikachu pikachu pi pikachu\r\npikachu pikachu pika pikachu"
  },
  {
    "id": 1019,
    "name": "PIR",
    "code": ".sub hello_world_text :main\r\n\tprint \"Hello world!\\n\"\r\n.end"
  },
  { "id": 1020, "name": "Pixilang", "code": "fputs(\"Hello world!\\n\")\r\n" },
  {
    "id": 1021,
    "name": "PL/M",
    "code": "100H:\r\n   /* CP/M BDOS SYSTEM CALL */\r\n   BDOS: PROCEDURE( FN, ARG ); DECLARE FN BYTE, ARG ADDRESS; GOTO 5; END;\r\n   /* PRINT A $ TERMINATED STRING */\r\n   PRINT$STRING: PROCEDURE( S ); DECLARE S ADDRESS; CALL BDOS( 9, S ); END;\r\n   /* HELLO, WORLD! IN MIXED CASE */\r\n   DECLARE HELLO$WORLD ( 14 ) BYTE\r\n           INITIAL( 'H', 65H, 6CH, 6CH, 6FH, ',', ' '\r\n                  , 'W', 6FH, 72H, 6CH, 64H, 21H, '$'\r\n                  );\r\n   CALL PRINT$STRING( .HELLO$WORLD );\r\nEOF"
  },
  {
    "id": 1022,
    "name": "PL/SQL",
    "code": "set serveroutput on\r\n\r\nBEGIN\r\n  DBMS_OUTPUT.PUT_LINE('Hello world!');\r\nEND;\r\n/"
  },
  {
    "id": 1023,
    "name": "Plain English",
    "code": "\\This prints Hello World within the CAL-4700 IDE.\r\n\\...and backslashes are comments!\r\nTo run:\r\nStart up.\r\nWrite \"Hello World!\" to the console.\r\nWait for the escape key.\r\nShut down."
  },
  {
    "id": 1024,
    "name": "Plan",
    "code": "#STEER         LIST,BINARY\r\n#PROGRAM       HLWD\r\n#LOWER\r\nMSG1A          11HHELLO WORLD\r\nMSG1B          11/MSG1A\r\n#PROGRAM\r\n#ENTRY         0\r\n      DISTY    MSG1B\r\n      SUSWT    2HHH\r\n#END\r\n#FINISH\r\n#STOP"
  },
  {
    "id": 1025,
    "name": "Pointless",
    "code": "output = println(\"Hello world!\")\r\n"
  },
  { "id": 1026, "name": "Potion", "code": "\"Hello world!\\n\" print\r\n" },
  { "id": 1027, "name": "ProDOS", "code": "printline Hello world!\r\n" },
  {
    "id": 1028,
    "name": "Programming Language",
    "code": "print(Hello world!)\r\n"
  },
  {
    "id": 1029,
    "name": "PROMAL",
    "code": "program hello\r\ninclude library\r\nbegin\r\noutput \"Hello world!\"\r\nend"
  },
  {
    "id": 1030,
    "name": "PSQL",
    "code": " EXECUTE BLOCK\r\n   RETURNS(S VARCHAR(40))\r\n AS\r\n BEGIN\r\n   S = 'Hello world!';\r\n   SUSPEND;\r\n END"
  },
  {
    "id": 1031,
    "name": "Pure",
    "code": "using system;\r\n\r\nputs \"Hello world!\\n\" ;"
  },
  { "id": 1032, "name": "Quackery", "code": "say \"Hello world!\"\r\n" },
  { "id": 1033, "name": "Quill", "code": "\"Hello world!\" print\r\n" },
  {
    "id": 1034,
    "name": "Ra",
    "code": "class HelloWorld\r\n\t**Prints \"Hello world!\"**\r\n\r\n\ton start\r\n\r\n\t\tprint \"Hello world!\""
  },
  { "id": 1035, "name": "Raven", "code": "'Hello world!' print\r\n" },
  { "id": 1036, "name": "RASEL", "code": "A\"!dlroW ,olleH\">:?@,Hj\r\n" },
  { "id": 1037, "name": "Relation", "code": "' Hello world!\r\n" },
  { "id": 1038, "name": "Retro", "code": "'Hello_world! s:put nl\r\n" },
  { "id": 1039, "name": "Rhovas", "code": "print(\"Hello world!\");\r\n" },
  {
    "id": 1040,
    "name": "RISC-V Assembly",
    "code": ".data\r\nhello:\r\n.string \"Hello World!\\n\\0\"\r\n.text\r\nmain:\r\nla a0, hello\r\nli a7, 4\r\necall\r\nli a7, 10\r\necall"
  },
  { "id": 1041, "name": "Rockstar", "code": "Shout \"Hello world!\"\r\n" },
  {
    "id": 1042,
    "name": "RTL/2",
    "code": "TITLE Goodbye World;\r\n\r\nLET NL=10;\r\n\r\nEXT PROC(REF ARRAY BYTE) TWRT;\r\n\r\nENT PROC RRJOB()INT;\r\n\r\n    TWRT(\"Hello world!#NL#\");\r\n    RETURN(1);\r\n\r\nENDPROC;"
  },
  { "id": 1043, "name": "Salmon", "code": "\"Hello world!\"!\r\n" },
  { "id": 1044, "name": "SASL", "code": "'Hello World!\",nl\r\n" },
  { "id": 1045, "name": "ScratchScript", "code": "print \"Hello world!\"\r\n" },
  { "id": 1046, "name": "sed", "code": "i\\\r\nHello world!\r\nq" },
  {
    "id": 1047,
    "name": "Set lang",
    "code": "set ! H\r\nset ! E\r\nset ! L\r\nset ! L\r\nset ! O\r\nset ! 32\r\nset ! W\r\nset ! O\r\nset ! R\r\nset ! L\r\nset ! D\r\nset ! 33"
  },
  { "id": 1048, "name": "SETL", "code": "print(\"Hello world!\");\r\n" },
  { "id": 1049, "name": "SETL4", "code": "out(\"Hello world!\");end\r\n" },
  { "id": 1050, "name": "Shiny", "code": "say 'Hello world!'\r\n" },
  { "id": 1051, "name": "Sidef", "code": "„Hello world!”.say;\r\n" },
  { "id": 1052, "name": "SimpleCode", "code": "dtxt\r\nHello world" },
  {
    "id": 1053,
    "name": "SIMPOL",
    "code": "function main()\r\nend function \"Hello world!{d}{a}\""
  },
  {
    "id": 1054,
    "name": "Sing",
    "code": "requires \"sio\";\r\n\r\npublic fn singmain(argv [*]string) i32\r\n{\r\n    sio.print(\"hello world !\\r\\n\");\r\n    return(0);\r\n}"
  },
  {
    "id": 1055,
    "name": "Sisal",
    "code": "define main\r\n\r\n% Sisal doesn't yet have a string built-in.\r\n% Let's define one as an array of characters.\r\n\r\ntype string = array[character];\r\n\r\nfunction main(returns string)\r\n  \"Hello world!\"\r\nend function"
  },
  {
    "id": 1056,
    "name": "Skew",
    "code": "@entry\r\ndef main {\r\n  dynamic.console.log(\"Hello world!\")\r\n}"
  },
  {
    "id": 1057,
    "name": "SkookumScript",
    "code": "print(\"Hello world!\")\r\n"
  },
  { "id": 1058, "name": "Slate", "code": "inform: 'Hello world!'.\r\n" },
  { "id": 1059, "name": "Slope", "code": "(write \"Hello, world!\")\r\n" },
  { "id": 1060, "name": "smart BASIC", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 1061, "name": "SmileBASIC", "code": "PRINT \"Hello world!\"\r\n" },
  {
    "id": 1062,
    "name": "SNUSP",
    "code": "/++++!/===========?\\>++.>+.+++++++..+++\\\r\n\\+++\\ | /+>+++++++>/ /++++++++++<<.++>./\r\n$+++/ | \\+++++++++>\\ \\+++++.>.+++.-----\\\r\n      \\==-<<<<+>+++/ /=.>.+>.--------.-/"
  },
  {
    "id": 1063,
    "name": "Soda",
    "code": "class Main\r\n\r\n  main (arguments : Array [String] ) : Unit =\r\n    println (\"Hello world!\")\r\n\r\nend"
  },
  {
    "id": 1064,
    "name": "SoneKing Assembly",
    "code": "extern print\r\n\r\ndv Msg Goodbye,World!\r\n\r\nmov eax Msg\r\npush\r\ncall print\r\npop"
  },
  { "id": 1065, "name": "Sparkling", "code": "print(\"Hello world!\");\r\n" },
  { "id": 1066, "name": "SPL", "code": "#.output(\"Hello world!\")\r\n" },
  { "id": 1067, "name": "Stax", "code": "`dx/&\\p4`A+\r\n" },
  { "id": 1068, "name": "Suneido", "code": "Print(\"Hello world!\")\r\n" },
  { "id": 1069, "name": "TailDot", "code": "c,x,Hello World!,v,x\r\n" },
  {
    "id": 1070,
    "name": "Tailspin",
    "code": "'Hello World' -> !OUT::write\r\n"
  },
  {
    "id": 1071,
    "name": "TAV",
    "code": " \\( The famous example \\)\r\n main (parms):+\r\n   print \"Hello World!\""
  },
  { "id": 1072, "name": "Tern", "code": "println(\"Hello world!\");\r\n" },
  {
    "id": 1073,
    "name": "Terraform",
    "code": "output \"result\" {\r\n  value = \"Hello world!\"\r\n}"
  },
  {
    "id": 1074,
    "name": "TestML",
    "code": "%TestML 0.1.0\r\nPrint(\"Hello world!\")"
  },
  { "id": 1075, "name": "TI-57", "code": "0.7745" },
  {
    "id": 1076,
    "name": "TMG",
    "code": "begin: parse(( = { <Hello, World!> * } ));\r\n"
  },
  { "id": 1077, "name": "TorqueScript", "code": "echo(\"Hello world!\");\r\n" },
  { "id": 1078, "name": "TPP", "code": "Hello world!\r\n" },
  { "id": 1079, "name": "Transact-SQL", "code": "PRINT \"Hello world!\"\r\n" },
  { "id": 1080, "name": "Transd", "code": "(textout \"Hello, World!\")\r\n" },
  { "id": 1081, "name": "TransFORTH", "code": "PRINT \" Hello world! \"\r\n" },
  { "id": 1082, "name": "Trith", "code": "\"Hello world!\" print\r\n" },
  {
    "id": 1083,
    "name": "True BASIC",
    "code": "! In True BASIC all programs run in their own window. So this is almost a graphical version.\r\nPRINT \"Hello world!\"\r\nEND"
  },
  {
    "id": 1084,
    "name": "TUSCRIPT",
    "code": "$$ MODE TUSCRIPT\r\nPRINT \"Hello world!\""
  },
  { "id": 1085, "name": "uBasic/4tH", "code": "Print \"Hello world!\"\r\n" },
  { "id": 1086, "name": "Uiua", "code": "&p\"Hello world!\"\r\n" },
  { "id": 1087, "name": "Uniface", "code": "message \"Hello world!\"\r\n" },
  {
    "id": 1088,
    "name": "Ursa",
    "code": "out \"hello world!\" endl console\r\n"
  },
  { "id": 1089, "name": "Ursalang", "code": "print(\"hello woods!\")\r\n" },
  {
    "id": 1090,
    "name": "உயிர்/Uyir",
    "code": "முதன்மை என்பதின் வகை எண் பணி {{\r\n         (\"உலகத்தோருக்கு வணக்கம்\") என்பதை திரை.இடு;\r\n\r\n         முதன்மை = 0;\r\n}};"
  },
  {
    "id": 1091,
    "name": "Uxntal",
    "code": "|10 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1\r\n\r\n|100\r\n\r\n@on-reset ( -> )\r\n\t;my-string print-text\r\n\tBRK\r\n\r\n@print-text ( str* -- )\r\n\t&while\r\n\t\tLDAk .Console/write DEO\r\n\t\tINC2 LDAk ?&while\r\n\tPOP2\r\n\tJMP2r\r\n\r\n@my-string\r\n\t\"Hello 20 \"World! 0a00"
  },
  {
    "id": 1092,
    "name": "VAX Assembly",
    "code": "desc:  .ascid \"Hello World!\"      ;descriptor (len+addr) and text\r\n.entry hello, ^m<>                ;register save mask\r\n       pushaq desc                ;address of descriptor\r\n       calls #1, g^lib$put_output ;call with one argument on stack\r\n       ret                        ;restore registers, clean stack & return\r\n.end hello   "
  },
  {
    "id": 1093,
    "name": "Vedit macro language",
    "code": "Message(\"Hello world!\")\r\n"
  },
  { "id": 1094, "name": "Verbexx", "code": "@SAY \"Hello world!\";" },
  {
    "id": 1095,
    "name": "Viua VM assembly",
    "code": ".function: main/0\r\n    text %1 local \"Hello World!\"\r\n    print %1 local\r\n    izero %0 local\r\n    return\r\n.end"
  },
  { "id": 1096, "name": "VTL-2", "code": "10 ?=\"Hello world!\"\r\n" },
  { "id": 1097, "name": "Waduzitdo", "code": "T:Hello world!\r\nS:" },
  { "id": 1098, "name": "Wart", "code": "prn \"Hello world!\"\r\n" },
  {
    "id": 1099,
    "name": "WDTE",
    "code": "io.writeln io.stdout 'Hello world!';\r\n"
  },
  {
    "id": 1100,
    "name": "Wee Basic",
    "code": "print 1 \"Hello world!\"\r\nend"
  },
  {
    "id": 1101,
    "name": "Wisp",
    "code": "import : scheme base\r\n         scheme write\r\ndisplay \"Hello world!\"\r\nnewline"
  },
  {
    "id": 1102,
    "name": "X86 Assembly",
    "code": "section .data\r\nmsg     db      'Hello world!', 0AH\r\nlen     equ     $-msg\r\n\r\nsection .text\r\nglobal  _start\r\n_start: mov     edx, len\r\n        mov     ecx, msg\r\n        mov     ebx, 1\r\n        mov     eax, 4\r\n        int     80h\r\n\r\n        mov     ebx, 0\r\n        mov     eax, 1\r\n        int     80h"
  },
  {
    "id": 1103,
    "name": "X86-64 Assembly",
    "code": "option casemap:none\r\nif @Platform eq 1\r\n   option dllimport:<kernel32>\r\n      ExitProcess   proto :dword\r\n   option dllimport:none\r\n      exit          equ ExitProcess\r\nendif\r\nprintf              proto :qword, :vararg\r\nexit                proto :dword\r\n\r\n.code\r\nmain proc\r\ninvoke printf, CSTR(\"Goodbye, World!\",10)\r\ninvoke exit, 0\r\nret\r\nmain endp\r\nend"
  },
  {
    "id": 1104,
    "name": "XBasic",
    "code": "PROGRAM \"hello\"\r\nVERSION \"0.0003\"\r\n\r\nDECLARE FUNCTION Entry()\r\n\r\nFUNCTION Entry()\r\n  PRINT \"Hello World\"\r\nEND FUNCTION\r\nEND PROGRAM"
  },
  {
    "id": 1105,
    "name": "xEec",
    "code": "h#10 h$! h$d h$l h$r h$o h$w h#32  \r\nh$o h$l h$l h$e h$H >o o$ p jno"
  },
  {
    "id": 1106,
    "name": "XLISP",
    "code": "(DISPLAY \"Hello world!\")\r\n(NEWLINE)"
  },
  { "id": 1107, "name": "XPath", "code": "'Hello world&#xA;'\r\n" },
  {
    "id": 1108,
    "name": "YAMLScript",
    "code": "!YS-v0\r\n\r\nsay: \"Hello, world!\"\r\n\r\n=>: (say \"Hello, world!\")\r\n\r\n=>: say(\"Hello, world!\")"
  },
  { "id": 1109, "name": "Yorick", "code": "write, \"Hello world!\"\r\n" },
  { "id": 1110, "name": "Zkl", "code": "println(\"Hello world!\");\r\n" },
  {
    "id": 1111,
    "name": "Zoea",
    "code": "program: hello_world \r\n  output: \"Hello  world!\""
  },
  { "id": 1112, "name": "Zoomscript", "code": "print \"Hello world!\"\r\n" },
  {
    "id": 1113,
    "name": "Seed",
    "code": "854872453003476740699221564322673731945828554947586276010721089172712854441839676581917455319274850944955030258951339804246125714958815519550291630078076933441706558540342671975808828643360922071900333028778314875248417953197990571991784126564752005357199892690656368640420204822142316716413192024742766282266114842280731756458212469988291309261528542889299297601723286769284159107438930448971911102280330101196758384815655479640836157495863547199726234352265518586460633795171196315255736880028338460236768181141732764911402112878175632130129852788301009582463631290071329795384336617491655825493435803011947670180368458659271192428341035912236946048939139042310380278430049252171822721598175984923434205610723412240162418996808671543770639111617709604242882388664919702606792443015941265168129550718541372361144081848761690730764968771245566074501485020726368378675085908872608679630368472956274468410052703615106090238423979678950131481176272880569100533049143775921798055136871254424261001442543122666701145111965968366507060931708140304772342855064834334129143038575569044150428480231956133612367393837580345180691911525531699573096952433882387811884727975431823620782822755161559988205401134640722220804177812794328129589949692446031008866917615922944976151073653201316255518389496411696741029209242119521978920200314572718584995265523235225587228975886710511855501710470163649632761488899317729943053884132314641377747687975638119132094777769497069556255954031537245957811105217875011509899497752696062748928963281605780942517262774976217663461063680912331030221981433051827519906741285738915397005702326447635845195923640649166530310494885569783989508000344280715868581532826832242144647203531393142251025361866506821695860883605004105862208004440476654027574832078603305884731766236740069411566854496824754558761536201352147934963241039597221404341132342297870517293237489233057335406510464277610336142382379135365550299895416613763920950687921780736585299310706573253951966294045814905727514141733220565108490291792987304210662448111170752411153136765318541264632854767660676223663544921028492602135525959428999005153729028491208277493747933069008199074925710651071766675870081314909460661981433426167330215548196538791617762566403934129026219366764038390123622134753742930729751695349588862441999672547791630729398908283091638866715502470152431589429837867944760012419885615525232399584379209285060418518373512154801760060312646951597932345591416241634668119867158079946680321131213357200382937049485606706114467095019612014749723443159443363662563254359712162432143334612180576945072905749883870150120687696027984317320305291407322779803583395375616762530641605634303022155218169343410634115050596030685041633824154135240376022159918501703555881290333205131375705406831260759974112248490451605422031345264183102048614606636275942039438138959188478277971377232005036301145411215067576576667743288951344423152531417111852584846747428443123174595987315325304540564683047858415059703724263652136185848573853965992798725654430360647040362341567082462847275277303225817689141675391972818943419663764371222973269129542760661385278009266471167618553065823580448848795731295589715602705860758954890415040763604082216728159486423396295188510311881004469017351709060492844398219491990895826924575575549615118821417543037296628825303328056839433114519945243963946989899508355224823109677424196639930153649890175062456649384605721510239142861693109687536600667811037619175927995599388547421689316110236566026931360164495251160997857372500940728057700473763884480342708897319990346726967220426504612260565552531158509215849649565188655100774748485416791517853427613458459889062942881409801879085054494129489535044719193283409051007851153504224002807392992520076910314763705776345053922387355156981872691537772657428096384535960466923475731297217863371650154415835785630016335858514130863258775100537612371430357576913148500310344278511588325852376442503898849856566716198848377379400158332792027967216204970114516984638014129252882482309132898416484525230488700253065644547798869056136044415413099076332059572505138116227535024546891015836838323022822272664771489129085797354578016574544759934333471793"
  },
  {
    "id": 1114,
    "name": "Evil",
    "code": "aeeeaeeewueuueweeueeuewwaaaweaaewaeaawueweeeaeeewaaawueeueweeaweeeueuw"
  },
  { "id": 1115, "name": "Haystack", "code": "\"Hello, World!\"o|\r\n" },
  { "id": 1116, "name": "Help, WarDoq!", "code": "H" },
  {
    "id": 1117,
    "name": "MarioLANG",
    "code": "+>+>)+)+)+++)++++((((-[!)>->.\r\n+\"+\"===================#+\".\")\r\n+++!((+++++++++)++++++)<.---+\r\n++=#===================\")---.\r\n++((.-(.)).+++..+++++++.<---\r\n !+======================---\r\n=#>++++++++++++++.).+++.-!>!\r\n  =======================#=#"
  },
  {
    "id": 1118,
    "name": "Dark",
    "code": "+h hell\r\nh$twist sign s\r\ns$scrawl \" Hello, World!\r\ns$read\r\nh$twist stalker o\r\no$stalk\r\no$personal\r\no$echo\r\nh$empty"
  },
  {
    "id": 1119,
    "name": "Homespring",
    "code": "Universe net hatchery Hello,. World!  powers a b snowmelt \r\n"
  },
  {
    "id": 1120,
    "name": "Hexagony",
    "code": "H;e;P1;@/;W;o;/l;;o;Q/r;l;d;2;P0\r\n"
  },
  { "id": 1121, "name": "Fourier", "code": "`Hello, World!`\r\n" },
  {
    "id": 1122,
    "name": "Unreadable",
    "code
  },
  {
    "id": 1123,
    "name": "Pada",
    "code": "~.O~Ow~q~Owo~O~Oww~Q~qwo~q~O~wQ~q~w~q~q~Q~Ow~Q~Q~wo~q~w.~q~w.~.wO~qw\r\n"
  },
  { "id": 1124, "name": "Befunge 98", "code": "\"ck,@!dlroW ,olleH\r\n" }
]
